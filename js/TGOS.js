(function() {
    Array.prototype.indexOf || (Array.prototype.indexOf = function(a, b) {
        var e = this.length >>> 0,
            f = Number(b) || 0,
            f = 0 > f ? Math.ceil(f) : Math.floor(f);
        for (0 > f && (f += e); f < e; f++)
            if (f in this && this[f] === a) return f;
        return -1
    });
    window.console || (window.console = {}, window.console.log = function() {}, window.console.debug = function() {}, window.console.warning = function() {});
    window.getWebProtocal = function() {
        return "https:" == document.location.protocol ? "https://" : "http://"
    };
    window.getAPIPath = function() {
        return "api.tgos.tw/"
    };
    window.getServicePath = function() {
        return "gis.tgos.tw/"
    };
    window.TGOS = {
        RES_PATH: getWebProtocal() + getAPIPath() + "TGOS_API/images/",
        SCRIPT_PATH: getWebProtocal() + getAPIPath() + "TGOS_API/src/"
    };
    TGOS.math = {};
    TGOS.math.toRadian = function(a) {
        return a / 180 * Math.PI
    };
    TGOS.math.toDegree = function(a) {
        return 180 * (a / Math.PI)
    };
    TGOS.RegisterEvent = function(a, b) {
        var e = 0;
        a.prototype.events || (a.prototype.events = []);
        for (e = 0; e < b.length; e++) a.prototype.events.push(b[e])
    };
    TGOS.extend = function(a, b) {
        b.prototype = new a;
        b.prototype.constructor =
            a;
        b.prototype._super_ = a
    };
    window.util = util || {};
    util.removeEventHandler = function(a, b, e) {
        a.removeEventListener && a.removeEventListener(b, e, !1);
        a.detachEvent && a.detachEvent("on" + b, e)
    };
    util.createUUID = function(a, b) {
        return function() {
            return "xxxxTGOSxxxxxxxxxxxxxxxxxxxxxxxx".replace(a, b).toUpperCase()
        }
    }(/[xy]/g, function(a) {
        var b = 16 * Math.random() | 0;
        return ("x" == a ? b : b & 3 | 8).toString(16)
    });
    util.getInternetExplorerVersion = function() {
        var a = -1;
        "Microsoft Internet Explorer" == navigator.appName && null != /MSIE ([0-9]{1,}[.0-9]{0,})/.exec(navigator.userAgent) &&
            (a = parseFloat(RegExp.$1));
        return a
    };
    util.eventTarget = function(a) {
        return a.target ? a.target : a.srcElement
    };
    util.disableDefault = function(a) {
        a.preventDefault ? a.preventDefault() : a.returnValue = !1
    };
    util.disableSelect = function(a) {
        a.addEventListener ? a.addEventListener("mousedown", util.disabler, "false") : a.attachEvent("onselectstart", util.disabler)
    };
    util.enableSelect = function(a) {
        a.addEventListener ? a.removeEventListener("mousedown", util.disabler, "false") : a.detachEvent("onselectstart", util.disabler)
    };
    util.disabler =
        function(a) {
            util.disableDefault(a);
            return !1
        };
    util.intersectRect = function(a, b) {
        return !(b.left > a.right || b.right < a.left || b.top > a.bottom || b.bottom < a.top)
    };
    util.loadScript = function(a) {
        var b = document.createElement("script");
        b.src = a;
        document.getElementsByTagName("head")[0].appendChild(b)
    };
    var a = function(a) {
        a = a.toString(16);
        return 1 == a.length ? "0" + a : a
    };
    TGOS.Color = function(a, b, e, f) {
        this.r = a ? parseInt(a) : this.r;
        this.g = b ? parseInt(b) : this.g;
        this.b = e ? parseInt(e) : this.b;
        this.a = void 0 == f ? this.a : f
    };
    this.toHex = function() {
        return "#" +
            a(this.r) + a(this.g) + a(this.b)
    };
    this.toRgb = function() {
        return [this.r, this.g, this.b]
    };
    this.toRgba = function() {
        return [this.r, this.g, this.b, this.a]
    };
    this.toCss = function(a) {
        return a ? "rgb(" + this.r + "," + this.g + "," + this.b + "," + this.a + ")" : "rgb(" + this.r + "," + this.g + "," + this.b + ")"
    };
    this.toString = function() {
        return this.toCss(!0)
    }
})();

function DeviceTest() {
    var a = navigator.userAgent.toLowerCase();
    return 0 < a.indexOf("msie") && document.all ? "MSIE" : 0 < a.indexOf("firefox") ? "Firefox" : 0 < a.indexOf("chrome") ? "Chrome" : 0 < a.indexOf("safari") ? "Safari" : 0 < a.indexOf("opera") ? "Opera" : 0 < a.indexOf("camino") ? "Camino" : 0 < a.indexOf("gecko") ? "Gecko" : 0 < a.indexOf("trident") ? "Trident" : 0 < a.indexOf("mozilla") ? "Mozilla" : null
}

function FuncAdapter(a, d) {
    return function(b) {
        return d.call(a, b)
    }
}

function Inherit(a, d) {
    for (var b in d) a[b] = d[b]
}

function AttachEvent(a, d, b, e) {
    a.addEventListener ? ("mousewheel" == d && "Firefox" == DeviceTest() && (d = "DOMMouseScroll"), "keydown" == d && (e = !0), "keyup" == d && (e = !0), e ? a.ownerDocument.addEventListener(d, b, e) : a.addEventListener(d, b, e)) : (a.attachEvent("on" + d, b), e && a.setCapture())
}

function DetachEvent(a, d, b, e) {
    a.removeEventListener ? ("mousewheel" == d && "Firefox" == DeviceTest() && (d = "DOMMouseScroll"), e ? a.ownerDocument.removeEventListener(d, b, e) : a.removeEventListener(d, b, e)) : (a.detachEvent("on" + d, b), e && a.releaseCapture())
}
TGOS.isString = function(a) {
    return "string" == typeof a
};
TGOS.isArray = function(a) {
    return Array.isArray ? Array.isArray(a) : a.constructor === Array
};
TGOS.isNumber = function(a) {
    return !isNaN(a)
};
TGOS.isFunction = function(a) {
    return "function" === typeof a
};
TGOS.isBoolean = function(a) {
    return "boolean" == typeof a
};
TGOS.forEach = function(a, d) {
    if (a && d)
        for (var b = 0; b < a.length; b++) d.call(a, a[b], b, a)
};
TGOS.parseXML = function(a) {
    var d = null;
    if (window.DOMParser) d = (new DOMParser).parseFromString(a, "application/xml");
    else if (window.ActiveXObject) d = new ActiveXObject("Microsoft.XMLDOM"), d.async = !1, d.loadXML(a);
    else return null;
    return d
};
(function() {
    TGOS.features = {};
    var a = navigator.userAgent.toLowerCase(),
        d = -1;
    "Microsoft Internet Explorer" == navigator.appName && null != /MSIE ([0-9]{1,}[.0-9]{0,})/.exec(navigator.userAgent) && (d = parseFloat(RegExp.$1));
    d && (TGOS.features.ie = {}, TGOS.features.ie.version = d);
    0 < a.indexOf("firefox") && (TGOS.features.firefox = !0);
    0 < a.indexOf("chrome") && (TGOS.features.chrome = !0);
    a = document.createElement("canvas");
    TGOS.features.canvas = !(!a.getContext || !a.getContext("2d"));
    a = window.requestAnimationFrame || window.mozRequestAnimationFrame ||
        window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;
    window.requestAnimationFrame = a;
    d = window.cancelAnimationFrame || window.mozCancelAnimationFrame;
    window.cancelAnimationFrame = d;
    a && d && TGOS.features.animationFrame;
    TGOS.features.getDPI = function() {
        if (TGOS.isNumber(TGOS.features.DPI)) return TGOS.features.DPI;
        if ("complete" === document.readyState) {
            var b = document.createElement("div");
            b.style.width = "1in";
            b.style.height = "1in";
            b.style.position = "absolute";
            b.style.visibility = "hidden";
            document.body.appendChild(b);
            TGOS.features.DPI = b.offsetHeight;
            document.body.removeChild(b);
            return TGOS.features.DPI
        }
    };
    TGOS.features.svg = !!("createElementNS" in document && document.createElementNS("http://www.w3.org/2000/svg", "svg").createSVGRect);
    TGOS.features.cssTransform = "transform" in document.documentElement.style || "msTransform" in document.documentElement.style;
    TGOS.wrap = function(b, a) {
        return function() {
            a.apply(b, arguments)
        }
    }
})();
TGOS.math = {};
TGOS.math.degreeToRadian = function(a) {
    return a / 180 * Math.PI
};
TGOS.math.degreeToRadian = function(a) {
    return a / 180 * Math.PI
};
TGOS.math.radianToDegree = function(a) {
    return 180 * (a / Math.PI)
};
TGOS.math.length = function(a, d) {
    return Math.sqrt(a * a + d * d)
};
TGOS.math.rotate = function(a, d, b) {
    b = sg.math.degreeToRadian(b);
    a = a * Math.cos(b) - d * Math.sin(b);
    d = a * Math.sin(b) + d * Math.cos(b);
    return {
        x: a,
        y: d
    }
};
TGOS.math.Matrix = function() {
    var a = function(b) {
        this.arr_ = b
    };
    a.square = function(b, d) {
        return a.create(b, b, d)
    };
    a.rotate = function(b) {
        b = sg.math.degreeToRadian(b);
        b = [
            [Math.cos(b), -Math.sin(b), 0],
            [Math.sin(b), Math.cos(b), 0],
            [0, 0, 1]
        ];
        return new a(b)
    };
    a.scale = function(b, d) {
        return new a([
            [b, 0, 0],
            [0, d, 0],
            [0, 0, 1]
        ])
    };
    a.translate = function(b, d) {
        return new a([
            [1, 0, b],
            [0, 1, d],
            [0, 0, 1]
        ])
    };
    a.identity = function(b) {
        for (var d = a.zero(b, b), f = d.arr_, g = 0; g < b; g++) f[g][g] = 1;
        return d
    };
    a.create = function(b, d, f) {
        f = f ? f : 0;
        for (var g = [],
                h = 0; h < b; h++) {
            var k = Array(d);
            g.push(k);
            for (var l = 0; l < d; l++) k[l] = "function" == typeof f ? f(h, l) : f
        }
        return new a(g)
    };
    a.zero = function(b, d) {
        return a.create(b, d, 0)
    };
    var d = a.prototype;
    d.toString = function() {
        for (var b = "\n" + this.getRows() + " x " + this.getCols(), a = 0; a < this.getRows(); a++) b += "\n" + this.arr_[a].join();
        return b
    };
    d.array = function() {
        return arr_
    };
    d.getRows = function() {
        return this.arr_.length
    };
    d.getCols = function() {
        return this.arr_[0].length
    };
    d.get = function(b, a) {
        return this.arr_[b][a]
    };
    d.set = function(b, a, d) {
        this.arr_[b][a] =
            d
    };
    d.add = function(b) {
        return this.elementOperate(b, function(a, d) {
            return this.get(a, d) + b.get(a, d)
        })
    };
    d.productOperate = function(b, a) {
        if (!this.isAligned(b)) return null;
        for (var d = 0; d < r_this; d++)
            for (var g = 0; g < c_target; g++) {
                for (var h = 0, k = 0; k < c_this; k++) h += this.arr_[d][k] * b.arr_[k][g];
                a(d, g, h)
            }
        return r
    };
    d.elementOperate = function(b, d) {
        if (!this.isEqualSize(b)) return null;
        var f = a.zero(r1, c1);
        this.forEach(function(b, a) {
            f.set(b, a, d(b, a))
        });
        return f
    };
    d.multiply = function(b) {
        return this.elementOperate(b, function(a,
            d) {
            return this.get(a, d) * b.get(a, d)
        })
    };
    d.substract = function(b) {
        return this.elementOperate(b, function(a, d) {
            return this.get(a, d) - b.get(a, d)
        })
    };
    d.forEach = function(b) {
        if (b)
            for (var a = this.getCols(), d = this.getRows(), g = 0; g < d; g++)
                for (var h = 0; h < a; h++) b(g, h)
    };
    d.inverse = function() {
        var b = this.determinant();
        if (0 == b) throw "This matrix have zero determinant";
        var d = this.arr_,
            f = d[0][0],
            g = d[0][1],
            h = d[0][2],
            k = d[1][0],
            l = d[1][1],
            n = d[1][2],
            m = d[2][0],
            p = d[2][1],
            d = d[2][2];
        return new a([
            [(l * d - n * p) / b, -(g * d - h * p) / b, (g * n - h * l) / b],
            [-(k * d - n * m) / b, (f * d - h * m) / b, -(f * n - h * k) / b],
            [h / b, -(f * p - g * m) / b, (f * l - g * k) / b]
        ])
    };
    d.determinant = function() {
        var b = this.arr_,
            a = b[1][0],
            d = b[1][1],
            g = b[1][2],
            h = b[2][0],
            k = b[2][1],
            l = b[2][2];
        return b[0][0] * (d * l - g * k) + b[0][1] * -(a * l - g * h) + b[0][2] * (a * k - d * h)
    };
    d.transform = function(b, d) {
        var f = new a([
                [b],
                [d],
                [1]
            ]),
            f = this.product(f);
        return {
            x: f.get(0, 0),
            y: f.get(1, 0)
        }
    };
    d.isEqualSize = function(b) {
        var a = this.getRows(),
            d = this.getCols(),
            g = b.getRows();
        b = b.getCols();
        return d === b && a === g
    };
    d.isAligned = function(b) {
        this.getRows();
        var a =
            this.getCols(),
            d = b.getRows();
        b.getCols();
        return a === d
    };
    d.product = function(b) {
        if (!this.isAligned(b)) throw "Matrix not aligned";
        var d = this.getRows(),
            f = this.getCols();
        b.getRows();
        for (var g = b.getCols(), h = a.zero(d, g), k = 0; k < d; k++)
            for (var l = 0; l < g; l++) {
                for (var n = 0, m = 0; m < f; m++) n += this.arr_[k][m] * b.arr_[m][l];
                h.set(k, l, n)
            }
        return h
    };
    return a
}();
var bDebug = !0;

function AjaxAgent(a, d, b) {
    var e = this,
        f = null;
    if (window.XMLHttpRequest) f = new XMLHttpRequest, f.overrideMimeType && f.overrideMimeType("text/xml");
    else if (window.ActiveXObject) try {
        f = new ActiveXObject("Msxml2.XMLHTTP")
    } catch (g) {
        try {
            f = new ActiveXObject("Microsoft.XMLHTTP")
        } catch (h) {}
    }
    this.Open = function(a, e) {
        null != f && (f.open(a, e, d), b && f.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"))
    };
    this.SendRequest = function(b, a, g, m, h) {
        function s() {
            g && g.call(e, f, f.status);
            200 != f.status ? (m && m.call(e,
                f, f.status), bDebug && window.open("").document.write(f.responseText)) : a && a.call(e, f)
        }
        if (null != f) {
            d && (f.onreadystatechange = function() {
                h && h.call(e, f, f.readyState);
                4 == f.readyState && s()
            });
            try {
                f.send(b)
            } catch (q) {
                return alert(q)
            }
            return d ? null : (d || s(), f)
        }
    };
    a && this.Open("POST", a)
}

function GetXMLChildNode(a, d) {
    var b = FindXMLNodes(a, d);
    return null != b && 0 < b.length ? b.item(0) : null
}

function FindXMLNodes(a, d) {
    return null == a ? null : a.getElementsByTagName(d)
}

function GetXMLNodeText(a) {
    return null == a ? null : a.firstChild ? a.firstChild.nodeValue : ""
}

function GetXMLNodeAttribute(a, d) {
    return a ? a.getAttribute(d) : ""
}
var nResult = 0,
    result = null;

function LoadScript(a, d, b) {
    function e() {
        "loaded" == h.readyState && f()
    }

    function f() {
        var b = eval(g);
        result = b;
        d.call(null, h, b);
        DetachEvent(h, "readystatechange", e, !1);
        DetachEvent(h, "load", f, !1);
        document.body.removeChild(h)
    }
    var g = "_result_" + b + "_" + nResult;
    nResult++;
    var h = document.createElement("script");
    AttachEvent(h, "readystatechange", e, !1);
    AttachEvent(h, "load", f, !1);
    document.body.appendChild(h);
    h.type = "text/javascript";
    h.src = a + "&Result=" + g
};
TGOS.TGLevelTransform = function(a, d, b, e) {
    function f(b) {
        for (var a = 0, a = 0; a < l.length - 1 && !(b < l[a + 1]); a++);
        if (a < l.length - 1) var d = l[a],
            f = l[a + 1],
            a = a + Math.log(b / d) / Math.log(f / d);
        return a
    }

    function g(b) {
        var a = Math.floor(Math.max(0, Math.min(b, l.length - 2))),
            d = l[a];
        return d * Math.pow(l[a + 1] / d, b - a)
    }
    var h = d,
        k = b,
        l = [];
    for (a = 0; a < e.length; a++) l.push(1 / e[a].factor);
    l.reverse();
    var n = 0,
        m = 1;
    this.FitLevel = function() {
        this.putMapLevel(Math.round(n))
    };
    this.getBaseScaleX = function() {
        return h
    };
    this.putBaseScaleX = function(b) {
        h =
            b
    };
    this.getBaseScaleY = function() {
        return k
    };
    this.putBaseScaleY = function(b) {
        k = b
    };
    this.getMapMaxLevel = function() {
        return l.length
    };
    this.getMapLevel = function() {
        return n
    };
    this.putMapLevel = function(b) {
        if (n == b) return !0;
        var a = b > l.length - 1 ? l.length - 1 : 0 > b ? 0 : b;
        if ((b >= l.length || 0 > b) && n == a) return !1;
        n = a;
        m = g(n);
        return !0
    };
    this.getScale = function() {
        return h * m
    };
    this.putScale = function(b) {
        this.putMapLevel(f(b / h))
    };
    this.getScaleX = function() {
        return h * m
    };
    this.getScaleY = function() {
        return k * m
    };
    this.getLevelScale = function(b) {
        return h *
            g(b)
    }
};

function CachedLevelTransformation(a) {
    function d(b) {
        for (var a = 0, a = 0; a < g.length - 1 && !(b < g[a + 1]); a++);
        if (a < g.length - 1) var d = g[a],
            f = g[a + 1],
            a = a + Math.log(b / d) / Math.log(f / d);
        return a
    }

    function b(b) {
        var a = Math.floor(Math.max(0, Math.min(b, g.length - 2))),
            d = g[a];
        return d * Math.pow(g[a + 1] / d, b - a)
    }
    var e = a.getBaseScaleX(),
        f = a.getBaseScaleY(),
        g = [];
    a = a.getScales();
    for (var h = 0; h < a.length; h++) g.push(1 / a[h].factor);
    g.reverse();
    var k = 0,
        l = 1;
    this.FitLevel = function() {
        this.putMapLevel(Math.round(k))
    };
    this.getBaseScaleX = function() {
        return e
    };
    this.putBaseScaleX = function(b) {
        e = b
    };
    this.getBaseScaleY = function() {
        return f
    };
    this.putBaseScaleY = function(b) {
        f = b
    };
    this.getMapMaxLevel = function() {
        return g.length
    };
    this.getMapLevel = function() {
        return k
    };
    this.putMapLevel = function(a) {
        if (k == a) return !0;
        var d = a > g.length - 1 ? g.length - 1 : 0 > a ? 0 : a;
        if ((a >= g.length || 0 > a) && k == d) return !1;
        k = d;
        l = b(k);
        return !0
    };
    this.getScale = function() {
        return e * l
    };
    this.putScale = function(b) {
        this.putMapLevel(d(b / e))
    };
    this.getScaleX = function() {
        return e * l
    };
    this.getScaleY = function() {
        return f *
            l
    };
    this.getLevelScale = function(a) {
        return e * b(a)
    }
}

function MapCachedLayer(a, d, b, e, f, g, h) {
    function k(b, a) {
        function f(b, m, k, n) {
            for (var p = 0; p < g.length; p++)
                if (g[p].isEqual(b.scale, m, k)) return;
            n = d + "/GetCacheImage?S=" + n + "&X=" + m + "&Y=" + k + "&L=" + a + "&appid=" + TGOS.APPID + "&apikey=" + TGOS.APIKEY;
            if (null != n) {
                if (l) var p = b.l + m * b.factor * F,
                    t = b.l + (m + 1) * b.factor * F,
                    w = b.b + (k + b.frow) * b.factor * G,
                    s = b.b + (k + 1 + b.frow) * b.factor * G;
                else p = A + m * b.factor * F, t = A + (m + 1) * b.factor * F, w = B + k * b.factor * G, s = B + (k + 1) * b.factor * G;
                g.push(new MapCachedImage(n, h, b.scale, m, k, p, s, t, w, e))
            }
        }
        var g = [],
            m = [],
            h = null,
            k = !0,
            p = "",
            s = 0,
            u = "";
        b && (p = b.Name, s = parseInt(b.FeatureType), u = b.SRName);
        var D = p;
        this.getName = function() {
            return p
        };
        this.putName = function(b) {
            p = b
        };
        this.getTitle = function() {
            return D
        };
        this.putTitle = function(b) {
            D = b
        };
        this.getVisible = function() {
            return k
        };
        this.putVisible = function(b) {
            k = b;
            h && (h.style.visibility = k ? "" : "hidden")
        };
        this.getFields = function() {
            return null
        };
        this.getFeatureType = function() {
            return s
        };
        this.getSRName = function() {
            return u
        };
        this.Initialize = function(b) {
            this.RemoveSelf();
            h = t.ownerDocument.createElement("div");
            t.appendChild(h);
            h.style.position = "absolute";
            h.style.overflow = "hidden";
            h.style.left = "0px";
            h.style.top = "0px";
            h.style.width = "100%";
            h.style.height = "100%";
            h.style.visibility = k ? "" : "hidden"
        };
        this.RemoveSelf = function() {
            if (g)
                for (; 0 < g.length;) g.pop().RemoveSelf();
            if (m)
                for (; 0 < m.length;) m.pop().RemoveSelf();
            null != h && h.parentNode && (null != n && h.parentNode.removeChild(h), h = null)
        };
        this.MoveTiles = function() {
            if (null != n && this.getVisible())
                for (var b = [g, m], a = 0; a < b.length; a++)
                    for (var d = b[a], f = 0; f < d.length; f++) {
                        var e = n.FromMapPoint(d[f].getLeft(),
                                d[f].getTop()),
                            h = n.FromMapPoint(d[f].getRight(), d[f].getBottom()),
                            l = h.x - e.x,
                            h = h.y - e.y;
                        0 > l && (e.x -= l = -l);
                        0 > h && (e.y -= h = -h);
                        d[f].ReloadStatus(e.x, e.y, l, h)
                    }
        };
        this.getTiles = function(b, f, e, g, m) {
            b = n.ToMapDistX(1);
            n.ToMapDistY(1);
            m = 0;
            if (0 < w.length)
                for (m = 0; m < w.length - 1 && !(b < (w[m + 1].factor + w[m].factor) / 2); m++);
            if (l) {
                g = w[m];
                b = g.factor * F;
                f = g.factor * G;
                var h = n.ToMapPoint(0, 0),
                    k = n.ToMapPoint(n.getClientWidth(), n.getClientHeight());
                e = Math.max(h.x, q);
                var p = Math.min(k.x, z),
                    t = Math.max(k.y, E),
                    s = Math.min(h.y, v);
                e = Math.floor((e -
                    g.l) / b);
                t = Math.floor((t - g.b) / f) - g.frow;
                p = Math.ceil((p - g.l) / b);
                s = Math.ceil((s - g.b) / f) - g.frow;
                h.x = g.l + e * b;
                k.y = g.b + (t + g.frow) * f;
                k.x = g.l + p * b;
                h.y = g.b + (s + g.frow) * f;
                for (h = []; t < s; t++)
                    for (k = e; k < p; k++) {
                        var u = d + "/GetCacheImage?S=" + m + "&X=" + k + "&Y=" + t + "&L=" + a + "&appid=" + TGOS.APPID + "&apikey=" + TGOS.APIKEY,
                            D = g.l + k * b,
                            H = g.b + (t + 1 + g.frow) * f;
                        h.push({
                            url: u,
                            leftTop: [D, H]
                        })
                    }
            } else
                for (b = w[m].factor * F, f = w[m].factor * G, h = n.ToMapPoint(0, 0), k = n.ToMapPoint(n.getClientWidth(), n.getClientHeight()), e = Math.floor((q - A) / b), s = Math.floor((E -
                        B) / f), p = Math.ceil((z - A) / b), g = Math.ceil((v - B) / f), e = Math.max(Math.floor((h.x - A) / b), e), t = Math.max(Math.floor((k.y - B) / f), s), p = Math.min(Math.ceil((k.x - A) / b), p), s = Math.min(Math.ceil((h.y - B) / f), g), h.x = e * b + A, k.y = t * f + B, k.x = p * b + A, h.y = s * f + B, h = []; t < s; t++)
                    for (k = e; k < p; k++) u = d + "/GetCacheImage?S=" + m + "&X=" + k + "&Y=" + t + "&L=" + a + "&appid=" + TGOS.APPID + "&apikey=" + TGOS.APIKEY, D = A + k * w[m].factor * F, H = B + (t + 1) * w[m].factor * G, h.push({
                        url: u,
                        leftTop: [D, H]
                    });
            return h
        };
        this.UpdateElement = function() {
            this.RebuildElement()
        };
        this.RebuildElement =
            function() {
                if (null != n && this.getVisible()) {
                    var b = n.ToMapDistX(1);
                    n.ToMapDistY(1);
                    var a = 0;
                    if (0 < w.length)
                        for (a = 0; a < w.length - 1 && !(b < (w[a + 1].factor + w[a].factor) / 2); a++);
                    var d = w[a],
                        e = d.factor * F,
                        h = d.factor * G,
                        b = n.ToMapPoint(0, 0),
                        k = n.ToMapPoint(n.getClientWidth(), n.getClientHeight());
                    if (l) {
                        var p = Math.max(b.x, q),
                            t = Math.min(k.x, z),
                            s = Math.max(k.y, E),
                            u = Math.min(b.y, v),
                            p = Math.floor((p - d.l) / e),
                            s = Math.floor((s - d.b) / h) - d.frow,
                            t = Math.ceil((t - d.l) / e),
                            u = Math.ceil((u - d.b) / h) - d.frow;
                        b.x = d.l + p * e;
                        k.y = d.b + (s + d.frow) * h;
                        k.x =
                            d.l + t * e;
                        b.y = d.b + (u + d.frow) * h;
                        h = k.y;
                        for (h = s; h < u; h++)
                            for (e = p; e < t; e++) f(d, e, h, a)
                    } else
                        for (p = Math.floor((q - A) / e), s = Math.floor((E - B) / h), t = Math.ceil((z - A) / e), d = Math.ceil((v - B) / h), p = Math.max(Math.floor((b.x - A) / e), p), s = Math.max(Math.floor((k.y - B) / h), s), t = Math.min(Math.ceil((k.x - A) / e), t), u = Math.min(Math.ceil((b.y - B) / h), d), b.x = p * e + A, k.y = s * h + B, k.x = t * e + A, b.y = u * h + B, h = k.y, h = s; h < u; h++)
                            for (e = p; e < t; e++) f(w[a], e, h, a);
                    p = [];
                    d = g.length;
                    for (e = 0; e < d; e++) s = g[e], t = s.getScale(), u = (s.getLeft() + s.getRight()) / 2, h = (s.getTop() +
                        s.getBottom()) / 2, t == w[a].scale && u < b.x != u < k.x && h < b.y != h < k.y ? p.push(s) : s.IsComplete() && s.getStatus() ? m.push(s) : s.RemoveSelf();
                    g = p;
                    this.MoveTiles();
                    var D = function() {
                        for (var b = !0, a = 0; a < g.length; a++)
                            if (g[a].IsComplete()) b = g[a].getStatus();
                            else return setTimeout(D, 100);
                        if (b)
                            for (; 0 < m.length;) m.pop().RemoveSelf()
                    };
                    setTimeout(D, 100)
                }
            }
    }
    var l = void 0 !== h ? !0 : !1,
        n = null,
        m = a,
        p = a,
        s = !0,
        q = 0,
        v = 0,
        z = 1,
        E = 1,
        F = 256,
        G = 256,
        A = 0,
        B = 0,
        C = 1,
        u = 1,
        w = [],
        t = null,
        D = [],
        H = null,
        J = this;
    LoadScript(d + "/GetCacheConfig?Format=JSON&appid=" + TGOS.APPID +
        "&apikey=" + TGOS.APIKEY,
        function(b, a) {
            var d = a.Infomation;
            F = parseInt(d.TileWidth);
            isNaN(F) && (F = 256);
            G = parseInt(d.TileHeight);
            isNaN(G) && (G = 256);
            A = parseFloat(d.CornerLeft);
            isNaN(A) && (A = 0);
            B = parseFloat(d.CornerLower);
            isNaN(B) && (B = 0);
            var f = d.Envelope;
            q = parseFloat(f.Left);
            v = parseFloat(f.Top);
            z = parseFloat(f.Right);
            E = parseFloat(f.Bottom);
            isNaN(q) && (q = 0);
            isNaN(v) && (v = 1);
            isNaN(z) && (z = 1);
            isNaN(E) && (E = 0);
            w = [];
            f = d.Scales;
            C = parseFloat(f.ScaleFactorX);
            u = parseFloat(f.ScaleFactorY);
            isNaN(C) && (C = 1);
            isNaN(u) && (u = 1);
            var e = d.Scales.Scale;
            if (e && 0 < e.length)
                if (l)
                    for (f = 0; f < e.length; f++) {
                        var m = e[f],
                            t = parseFloat(m._text),
                            m = parseFloat(m.Factor),
                            s = Math.ceil((z - q) / (m * F)),
                            P = Math.ceil((v - E) / (m * G)),
                            N = h[f],
                            S = N.left,
                            T = N.top;
                        w.push({
                            scale: t,
                            factor: m,
                            ox: S,
                            oy: T,
                            fcol: s,
                            frow: P,
                            l: S,
                            r: N.right,
                            t: T,
                            b: N.bottom
                        })
                    } else if (s = parseFloat(e[e.length - 1]), isNaN(s))
                        for (f = 0; f < e.length; f++) m = e[f], t = parseFloat(m._text), m = parseFloat(m.Factor), w.push({
                            scale: t,
                            factor: m
                        });
                    else
                        for (f = 0; f < e.length; f++) t = parseFloat(e[f]), m = t / s, w.push({
                            scale: t,
                            factor: m
                        });
            if (d = d.Layers.Layer) {
                if (d.length)
                    for (f = 0; f < d.length; f++) D.push(new k(d[f], f));
                else D.push(new k(d, 0));
                D.reverse();
                if (null != n)
                    for (f = D.length - 1; 0 <= f; f--) D[f].Initialize(n)
            }
            0 == D.length ? D.push(new k(null)) : 1 == D.length && (D[0].putName(""), D[0].putTitle(p));
            H = D[D.length - 1];
            J.RebuildElement();
            g && g.call(this, !0)
        }, f);
    this.getName = function() {
        return m
    };
    this.putName = function(b) {
        m = b
    };
    this.getTitle = function() {
        return p
    };
    this.putTitle = function(b) {
        p = b
    };
    this.getVisible = function() {
        return s
    };
    this.putVisible = function(b) {
        s =
            b;
        t && (t.style.visibility = b ? "" : "hidden")
    };
    this.getResourcePath = function() {
        return d
    };
    this.getLeft = function() {
        return q
    };
    this.getTop = function() {
        return v
    };
    this.getRight = function() {
        return z
    };
    this.getBottom = function() {
        return E
    };
    this.getImageWidth = function() {
        return F
    };
    this.getImageHeight = function() {
        return G
    };
    this.getLayers = function() {
        return D
    };
    this.getThematicLayer = function() {
        return H
    };
    this.getScales = function() {
        return w
    };
    this.getBaseScaleX = function() {
        return F / C
    };
    this.getBaseScaleY = function() {
        return G / u
    };
    this.Initialize = function(b) {
        n = b;
        var a = n.getHObject();
        t = a.ownerDocument.createElement("div");
        a.appendChild(t);
        t.style.position = "absolute";
        t.style.overflow = "hidden";
        t.style.left = "0px";
        t.style.top = "0px";
        t.style.width = "100%";
        t.style.height = "100%";
        t.style.visibility = s ? "" : "hidden";
        for (a = D.length - 1; 0 <= a; a--) D[a].Initialize(b)
    };
    this.RemoveSelf = function() {
        for (var b = 0; b < D.length; b++) D[b].RemoveSelf();
        n = null
    };
    this.UpdateElement = function() {
        if (this.getVisible()) {
            var b;
            for (b = 0; b < D.length; b++) D[b].UpdateElement()
        }
    };
    this.getTiles = function(b, a, d, f, e, g) {
        if (D[g]) return D[g].getTiles(b, a, d, f, e)
    };
    this.RebuildElement = function() {
        if (this.getVisible())
            for (var b = 0; b < D.length; b++) D[b].RebuildElement()
    };
    var P = 1;
    this.setZIndex = function(b) {
        t && (t.style.zIndex = b)
    };
    this.setOpacity = function(b) {
        t && (P = b, t.style.opacity = P, t.style.filter = "alpha(opacity=" + 100 * P + ")")
    };
    var N = function(b, a) {
        H = a
    };
    this.CreateLegend = function(b) {
        if (1 < D.length)
            for (var a = 0; a < D.length; a++) b.CreateSubLegend(D[a], N)
    };
    this.ExecuteQuery = function(b, a, d, f) {
        null != H &&
            H.ExecuteQuery(b, a, d, f)
    };
    this.getFeatureType = function() {
        if (null != H) return H.getFeatureType()
    };
    this.getFields = function() {
        if (null != H) return H.getFields()
    }
}

function MapCachedImage(a, d, b, e, f, g, h, k, l, n) {
    var m, p = !1;
    m = d.ownerDocument.createElement("img");
    m.onerror = function() {
        m && (m.alt = "\u4e0d\u63d0\u4f9b\u5716\u78da\u670d\u52d9", m.onload = null, m.onerror = null);
        p = !0
    };
    m.onmousedown = function() {
        return !1
    };
    m.onload = function() {
        m && (m.alt = "");
        this.loaded = !0;
        TGOS.TGEvent.trigger(n, "tilesloaded")
    };
    m.galleryImg = !1;
    m.hideFocus = !0;
    m.style.MozUserSelect = "none";
    m.style.border = "0 none";
    m.style.position = "absolute";
    m.src = a;
    d.appendChild(m);
    this.IsComplete = function() {
        return m.loaded ||
            "complete" == m.readyState
    };
    this.getStatus = function() {
        return !p
    };
    this.getHObject = function() {
        return m
    };
    this.getScale = function() {
        return b
    };
    this.getLeft = function() {
        return g
    };
    this.getTop = function() {
        return h
    };
    this.getRight = function() {
        return k
    };
    this.getBottom = function() {
        return l
    };
    this.RemoveSelf = function() {
        m && (m.onmousedown = null, d.removeChild(m));
        m = null
    };
    this.ReloadStatus = function(b, a, d, f) {
        d = b + d;
        b = Math.round(b);
        f = a + f;
        a = Math.round(a);
        m.style.left = b + "px";
        m.style.top = a + "px";
        m.style.width = Math.round(d - b) + "px";
        m.style.height = Math.round(f - a) + "px"
    };
    this.isEqual = function(a, d, g) {
        return b == a && e == d && f == g
    }
};
(function(a) {
    var d = /[\.\/]/,
        b = function() {},
        e = function(b, a) {
            return b - a
        },
        f, g, h = {
            n: {}
        },
        k = function(b, a) {
            b = String(b);
            var d = g,
                h = Array.prototype.slice.call(arguments, 2),
                s = k.listeners(b),
                q = 0,
                v, z = [],
                E = {},
                F = [],
                G = f;
            f = b;
            for (var A = g = 0, B = s.length; A < B; A++) "zIndex" in s[A] && (z.push(s[A].zIndex), 0 > s[A].zIndex && (E[s[A].zIndex] = s[A]));
            for (z.sort(e); 0 > z[q];)
                if (v = E[z[q++]], F.push(v.apply(a, h)), g) return g = d, F;
            for (A = 0; A < B; A++)
                if (v = s[A], "zIndex" in v)
                    if (v.zIndex == z[q]) {
                        F.push(v.apply(a, h));
                        if (g) break;
                        do
                            if (q++, (v = E[z[q]]) &&
                                F.push(v.apply(a, h)), g) break;
                        while (v)
                    } else E[v.zIndex] = v;
            else if (F.push(v.apply(a, h)), g) break;
            g = d;
            f = G;
            return F.length ? F : null
        };
    k._events = h;
    k.listeners = function(b) {
        b = b.split(d);
        var a = h,
            f, e, g, k, v, z, E, F = [a],
            G = [];
        g = 0;
        for (k = b.length; g < k; g++) {
            E = [];
            v = 0;
            for (z = F.length; v < z; v++)
                for (a = F[v].n, f = [a[b[g]], a["*"]], e = 2; e--;)
                    if (a = f[e]) E.push(a), G = G.concat(a.f || []);
            F = E
        }
        return G
    };
    k.on = function(a, f) {
        a = String(a);
        if ("function" != typeof f) return function() {};
        for (var e = a.split(d), g = h, k = 0, q = e.length; k < q; k++) g = g.n, g = g.hasOwnProperty(e[k]) &&
            g[e[k]] || (g[e[k]] = {
                n: {}
            });
        g.f = g.f || [];
        k = 0;
        for (q = g.f.length; k < q; k++)
            if (g.f[k] == f) return b;
        g.f.push(f);
        return function(b) {
            +b == +b && (f.zIndex = +b)
        }
    };
    k.f = function(b) {
        var a = [].slice.call(arguments, 1);
        return function() {
            k.apply(null, [b, null].concat(a).concat([].slice.call(arguments, 0)))
        }
    };
    k.stop = function() {
        g = 1
    };
    k.nt = function(b) {
        return b ? RegExp("(?:\\.|\\/|^)" + b + "(?:\\.|\\/|$)").test(f) : f
    };
    k.nts = function() {
        return f.split(d)
    };
    k.off = k.unbind = function(b, a) {
        if (b) {
            var f = b.split(d),
                e, g, q, v, z, E, F = [h];
            v = 0;
            for (z = f.length; v <
                z; v++)
                for (E = 0; E < F.length; E += q.length - 2) {
                    q = [E, 1];
                    e = F[E].n;
                    if ("*" != f[v]) e[f[v]] && q.push(e[f[v]]);
                    else
                        for (g in e) e.hasOwnProperty(g) && q.push(e[g]);
                    F.splice.apply(F, q)
                }
            v = 0;
            for (z = F.length; v < z; v++)
                for (e = F[v]; e.n;) {
                    if (a) {
                        if (e.f) {
                            E = 0;
                            for (f = e.f.length; E < f; E++)
                                if (e.f[E] == a) {
                                    e.f.splice(E, 1);
                                    break
                                }!e.f.length && delete e.f
                        }
                        for (g in e.n)
                            if (e.n.hasOwnProperty(g) && e.n[g].f) {
                                q = e.n[g].f;
                                E = 0;
                                for (f = q.length; E < f; E++)
                                    if (q[E] == a) {
                                        q.splice(E, 1);
                                        break
                                    }!q.length && delete e.n[g].f
                            }
                    } else
                        for (g in delete e.f, e.n) e.n.hasOwnProperty(g) &&
                            e.n[g].f && delete e.n[g].f;
                    e = e.n
                }
        } else k._events = h = {
            n: {}
        }
    };
    k.once = function(b, a) {
        var d = function() {
            k.unbind(b, d);
            return a.apply(this, arguments)
        };
        return k.on(b, d)
    };
    k.version = "0.4.2";
    k.toString = function() {
        return "You are running Eve 0.4.2"
    };
    "undefined" != typeof module && module.exports ? module.exports = k : "undefined" != typeof define ? define("eve", [], function() {
        return k
    }) : a.eve = k
})(this);
(function(a, d) {
    "function" === typeof define && define.amd ? define(["eve"], function(b) {
        return d(a, b)
    }) : d(a, a.eve || "function" == typeof require && require("eve"))
})(this, function(a, d) {
    function b(a) {
        if (b.is(a, "function")) return E ? a() : d.on("raphael.DOMload", a);
        if (b.is(a, M)) return b._engine.create[H](b, a.splice(0, 3 + b.is(a[0], T))).add(a);
        var f = Array.prototype.slice.call(arguments, 0);
        if (b.is(f[f.length - 1], "function")) {
            var e = f.pop();
            return E ? e.call(b._engine.create[H](b, f)) : d.on("raphael.DOMload", function() {
                e.call(b._engine.create[H](b,
                    f))
            })
        }
        return b._engine.create[H](b, arguments)
    }

    function e(b) {
        if ("function" == typeof b || Object(b) !== b) return b;
        var a = new b.constructor,
            d;
        for (d in b) b[B](d) && (a[d] = e(b[d]));
        return a
    }

    function f(b, a, d) {
        function f() {
            var e = Array.prototype.slice.call(arguments, 0),
                g = e.join("\u2400"),
                m = f.cache = f.cache || {},
                h = f.count = f.count || [];
            if (m[B](g)) {
                a: for (var e = h, h = g, k = 0, l = e.length; k < l; k++)
                    if (e[k] === h) {
                        e.push(e.splice(k, 1)[0]);
                        break a
                    }return d ? d(m[g]) : m[g]
            }
            1E3 <= h.length && delete m[h.shift()];
            h.push(g);
            m[g] = b[H](a, e);
            return d ?
                d(m[g]) : m[g]
        }
        return f
    }

    function g() {
        return this.hex
    }

    function h(b, a) {
        for (var d = [], f = 0, e = b.length; e - 2 * !a > f; f += 2) {
            var g = [{
                x: +b[f - 2],
                y: +b[f - 1]
            }, {
                x: +b[f],
                y: +b[f + 1]
            }, {
                x: +b[f + 2],
                y: +b[f + 3]
            }, {
                x: +b[f + 4],
                y: +b[f + 5]
            }];
            a ? f ? e - 4 == f ? g[3] = {
                x: +b[0],
                y: +b[1]
            } : e - 2 == f && (g[2] = {
                x: +b[0],
                y: +b[1]
            }, g[3] = {
                x: +b[2],
                y: +b[3]
            }) : g[0] = {
                x: +b[e - 2],
                y: +b[e - 1]
            } : e - 4 == f ? g[3] = g[2] : f || (g[0] = {
                x: +b[f],
                y: +b[f + 1]
            });
            d.push(["C", (-g[0].x + 6 * g[1].x + g[2].x) / 6, (-g[0].y + 6 * g[1].y + g[2].y) / 6, (g[1].x + 6 * g[2].x - g[3].x) / 6, (g[1].y + 6 * g[2].y - g[3].y) / 6, g[2].x, g[2].y])
        }
        return d
    }

    function k(b, a, d, f, e, g, m, h, k) {
        null == k && (k = 1);
        k = (1 < k ? 1 : 0 > k ? 0 : k) / 2;
        for (var l = [-0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816], n = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472], p = 0, t = 0; 12 > t; t++) var w = k * l[t] + k,
            u = w * (w * (-3 * b + 9 * d - 9 * e + 3 * m) + 6 * b - 12 * d + 6 * e) - 3 * b + 3 * d,
            w = w * (w * (-3 * a + 9 * f - 9 * g + 3 * h) + 6 * a - 12 * f + 6 * g) - 3 * a + 3 * f,
            p = p + n[t] * I.sqrt(u * u + w * w);
        return k * p
    }

    function l(b, a, d, f, e, g, m, h, l) {
        if (!(0 > l || k(b, a, d, f, e, g, m, h) < l)) {
            var n = 0.5,
                p = 1 - n,
                t;
            for (t =
                k(b, a, d, f, e, g, m, h, p); 0.01 < Z(t - l);) n /= 2, p += (t < l ? 1 : -1) * n, t = k(b, a, d, f, e, g, m, h, p);
            return p
        }
    }

    function n(a, d, f) {
        a = b._path2curve(a);
        d = b._path2curve(d);
        for (var e, g, m, h, l, n, p, t, w, u, s = f ? 0 : [], D = 0, v = a.length; D < v; D++)
            if (w = a[D], "M" == w[0]) e = l = w[1], g = n = w[2];
            else {
                "C" == w[0] ? (w = [e, g].concat(w.slice(1)), e = w[6], g = w[7]) : (w = [e, g, e, g, l, n, l, n], e = l, g = n);
                for (var q = 0, H = d.length; q < H; q++)
                    if (u = d[q], "M" == u[0]) m = p = u[1], h = t = u[2];
                    else {
                        "C" == u[0] ? (u = [m, h].concat(u.slice(1)), m = u[6], h = u[7]) : (u = [m, h, m, h, p, t, p, t], m = p, h = t);
                        var A;
                        var C = w,
                            F = u;
                        A = f;
                        var B = b.bezierBBox(C),
                            z = b.bezierBBox(F);
                        if (b.isBBoxIntersect(B, z)) {
                            for (var B = k.apply(0, C), z = k.apply(0, F), B = O(~~(B / 5), 1), z = O(~~(z / 5), 1), J = [], G = [], E = {}, Sa = A ? 0 : [], la = 0; la < B + 1; la++) {
                                var N = b.findDotsAtSegment.apply(b, C.concat(la / B));
                                J.push({
                                    x: N.x,
                                    y: N.y,
                                    t: la / B
                                })
                            }
                            for (la = 0; la < z + 1; la++) N = b.findDotsAtSegment.apply(b, F.concat(la / z)), G.push({
                                x: N.x,
                                y: N.y,
                                t: la / z
                            });
                            for (la = 0; la < B; la++)
                                for (C = 0; C < z; C++) {
                                    var P = J[la],
                                        ya = J[la + 1],
                                        F = G[C],
                                        N = G[C + 1],
                                        V = 0.001 > Z(ya.x - P.x) ? "y" : "x",
                                        da = 0.001 > Z(N.x - F.x) ? "y" : "x",
                                        K;
                                    K = P.x;
                                    var sa =
                                        P.y,
                                        I = ya.x,
                                        Q = ya.y,
                                        R = F.x,
                                        L = F.y,
                                        ba = N.x,
                                        fa = N.y;
                                    if (O(K, I) < W(R, ba) || W(K, I) > O(R, ba) || O(sa, Q) < W(L, fa) || W(sa, Q) > O(L, fa)) K = void 0;
                                    else {
                                        var Fa = (K * Q - sa * I) * (R - ba) - (K - I) * (R * fa - L * ba),
                                            S = (K * Q - sa * I) * (L - fa) - (sa - Q) * (R * fa - L * ba),
                                            ra = (K - I) * (L - fa) - (sa - Q) * (R - ba);
                                        if (ra) {
                                            var Fa = Fa / ra,
                                                S = S / ra,
                                                ra = +Fa.toFixed(2),
                                                ea = +S.toFixed(2);
                                            K = ra < +W(K, I).toFixed(2) || ra > +O(K, I).toFixed(2) || ra < +W(R, ba).toFixed(2) || ra > +O(R, ba).toFixed(2) || ea < +W(sa, Q).toFixed(2) || ea > +O(sa, Q).toFixed(2) || ea < +W(L, fa).toFixed(2) || ea > +O(L, fa).toFixed(2) ? void 0 : {
                                                x: Fa,
                                                y: S
                                            }
                                        } else K = void 0
                                    }
                                    K && E[K.x.toFixed(4)] != K.y.toFixed(4) && (E[K.x.toFixed(4)] = K.y.toFixed(4), P = P.t + Z((K[V] - P[V]) / (ya[V] - P[V])) * (ya.t - P.t), F = F.t + Z((K[da] - F[da]) / (N[da] - F[da])) * (N.t - F.t), 0 <= P && 1.001 >= P && 0 <= F && 1.001 >= F && (A ? Sa++ : Sa.push({
                                        x: K.x,
                                        y: K.y,
                                        t1: W(P, 1),
                                        t2: W(F, 1)
                                    })))
                                }
                            A = Sa
                        } else A = A ? 0 : [];
                        if (f) s += A;
                        else {
                            B = 0;
                            for (z = A.length; B < z; B++) A[B].segment1 = D, A[B].segment2 = q, A[B].bez1 = w, A[B].bez2 = u;
                            s = s.concat(A)
                        }
                    }
            }
        return s
    }

    function m(b, a, d, f, e, g) {
        null != b ? (this.a = +b, this.b = +a, this.c = +d, this.d = +f, this.e = +e, this.f = +g) :
            (this.a = 1, this.c = this.b = 0, this.d = 1, this.f = this.e = 0)
    }

    function p() {
        return this.x + N + this.y + N + this.width + " \u00d7 " + this.height
    }

    function s(b, a, d, f, e, g) {
        function m(b, a) {
            var d, f, e, g;
            e = b;
            for (f = 0; 8 > f; f++) {
                g = ((l * e + k) * e + h) * e - b;
                if (Z(g) < a) return e;
                d = (3 * l * e + 2 * k) * e + h;
                if (1E-6 > Z(d)) break;
                e -= g / d
            }
            d = 0;
            f = 1;
            e = b;
            if (e < d) return d;
            if (e > f) return f;
            for (; d < f;) {
                g = ((l * e + k) * e + h) * e;
                if (Z(g - b) < a) break;
                b > g ? d = e : f = e;
                e = (f - d) / 2 + d
            }
            return e
        }
        var h = 3 * a,
            k = 3 * (f - a) - h,
            l = 1 - h - k,
            n = 3 * d,
            p = 3 * (e - d) - n,
            t = 1 - n - p;
        return function(b, a) {
            var d = m(b, a);
            return ((t *
                d + p) * d + n) * d
        }(b, 1 / (200 * g))
    }

    function q(b, a) {
        var d = [],
            f = {};
        this.ms = a;
        this.times = 1;
        if (b) {
            for (var e in b) b[B](e) && (f[U(e)] = b[e], d.push(U(e)));
            d.sort(ib)
        }
        this.anim = f;
        this.top = d[d.length - 1];
        this.percents = d
    }

    function v(a, f, e, g, h, k) {
        e = U(e);
        var l, n, p, t, w, u, D = a.ms,
            v = {},
            q = {},
            H = {};
        if (g)
            for (u = 0, C = Y.length; u < C; u++) {
                var A = Y[u];
                if (A.el.id == f.id && A.anim == a) {
                    A.percent != e ? (Y.splice(u, 1), p = 1) : n = A;
                    f.attr(A.totalOrigin);
                    break
                }
            } else g = +q;
        u = 0;
        for (var C = a.percents.length; u < C; u++)
            if (a.percents[u] == e || a.percents[u] > g * a.top) {
                e =
                    a.percents[u];
                w = a.percents[u - 1] || 0;
                D = D / a.top * (e - w);
                t = a.percents[u + 1];
                l = a.anim[e];
                break
            } else g && f.attr(a.anim[a.percents[u]]);
        if (l) {
            if (n) n.initstatus = g, n.start = new Date - n.ms * g;
            else {
                for (var z in l)
                    if (l[B](z) && (ba[B](z) || f.paper.customAttributes[B](z))) switch (v[z] = f.attr(z), null == v[z] && (v[z] = fa[z]), q[z] = l[z], ba[z]) {
                        case T:
                            H[z] = (q[z] - v[z]) / D;
                            break;
                        case "colour":
                            v[z] = b.getRGB(v[z]);
                            u = b.getRGB(q[z]);
                            H[z] = {
                                r: (u.r - v[z].r) / D,
                                g: (u.g - v[z].g) / D,
                                b: (u.b - v[z].b) / D
                            };
                            break;
                        case "path":
                            u = Na(v[z], q[z]);
                            A = u[1];
                            v[z] =
                                u[0];
                            H[z] = [];
                            u = 0;
                            for (C = v[z].length; u < C; u++) {
                                H[z][u] = [0];
                                for (var G = 1, E = v[z][u].length; G < E; G++) H[z][u][G] = (A[u][G] - v[z][u][G]) / D
                            }
                            break;
                        case "transform":
                            u = f._;
                            if (C = jb(u[z], q[z]))
                                for (v[z] = C.from, q[z] = C.to, H[z] = [], H[z].real = !0, u = 0, C = v[z].length; u < C; u++)
                                    for (H[z][u] = [v[z][u][0]], G = 1, E = v[z][u].length; G < E; G++) H[z][u][G] = (q[z][u][G] - v[z][u][G]) / D;
                            else C = f.matrix || new m, u = {
                                _: {
                                    transform: u.transform
                                },
                                getBBox: function() {
                                    return f.getBBox(1)
                                }
                            }, v[z] = [C.a, C.b, C.c, C.d, C.e, C.f], ab(u, q[z]), q[z] = u._.transform, H[z] = [(u.matrix.a -
                                C.a) / D, (u.matrix.b - C.b) / D, (u.matrix.c - C.c) / D, (u.matrix.d - C.d) / D, (u.matrix.e - C.e) / D, (u.matrix.f - C.f) / D];
                            break;
                        case "csv":
                            C = Q(l[z])[V](F);
                            A = Q(v[z])[V](F);
                            if ("clip-rect" == z)
                                for (v[z] = A, H[z] = [], u = A.length; u--;) H[z][u] = (C[u] - v[z][u]) / D;
                            q[z] = C;
                            break;
                        default:
                            for (C = [][J](l[z]), A = [][J](v[z]), H[z] = [], u = f.paper.customAttributes[z].length; u--;) H[z][u] = ((C[u] || 0) - (A[u] || 0)) / D
                    }
                    u = l.easing;
                z = b.easing_formulas[u];
                if (!z)
                    if ((z = Q(u).match(ga)) && 5 == z.length) {
                        var N = z;
                        z = function(b) {
                            return s(b, +N[1], +N[2], +N[3], +N[4], D)
                        }
                    } else z =
                        Ea;
                u = l.start || a.start || +new Date;
                A = {
                    anim: a,
                    percent: e,
                    timestamp: u,
                    start: u + (a.del || 0),
                    status: 0,
                    initstatus: g || 0,
                    stop: !1,
                    ms: D,
                    easing: z,
                    from: v,
                    diff: H,
                    to: q,
                    el: f,
                    callback: l.callback,
                    prev: w,
                    next: t,
                    repeat: k || a.times,
                    origin: f.attr(),
                    totalOrigin: h
                };
                Y.push(A);
                if (g && !n && !p && (A.stop = !0, A.start = new Date - D * g, 1 == Y.length)) return Ta();
                p && (A.start = new Date - A.ms * g);
                1 == Y.length && bb(Ta)
            }
            d("raphael.anim.start." + f.id, f, a)
        }
    }

    function z(b) {
        for (var a = 0; a < Y.length; a++) Y[a].el.paper == b && Y.splice(a--, 1)
    }
    b.version = "2.1.2";
    b.eve =
        d;
    var E, F = /[, ]+/,
        G = {
            circle: 1,
            rect: 1,
            path: 1,
            ellipse: 1,
            text: 1,
            image: 1
        },
        A = /\{(\d+)\}/g,
        B = "hasOwnProperty",
        C = {
            doc: document,
            win: a
        },
        u = Object.prototype[B].call(C.win, "Raphael"),
        w = C.win.Raphael,
        t = function() {
            this.ca = this.customAttributes = {}
        },
        D, H = "apply",
        J = "concat",
        P = "ontouchstart" in C.win || C.win.DocumentTouch && C.doc instanceof DocumentTouch,
        N = " ",
        Q = String,
        V = "split",
        R = "click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel" [V](N),
        K = {
            mousedown: "touchstart",
            mousemove: "touchmove",
            mouseup: "touchend"
        },
        L = Q.prototype.toLowerCase,
        I = Math,
        O = I.max,
        W = I.min,
        Z = I.abs,
        aa = I.pow,
        S = I.PI,
        T = "number",
        M = "array",
        ka = Object.prototype.toString;
    b._ISURL = /^url\(['"]?(.+?)['"]?\)$/i;
    var va = /^\s*((#[a-f\d]{6})|(#[a-f\d]{3})|rgba?\(\s*([\d\.]+%?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+%?(?:\s*,\s*[\d\.]+%?)?)\s*\)|hsba?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\)|hsla?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\))\s*$/i,
        ha = {
            NaN: 1,
            Infinity: 1,
            "-Infinity": 1
        },
        ga = /^(?:cubic-)?bezier\(([^,]+),([^,]+),([^,]+),([^\)]+)\)/,
        X = I.round,
        U = parseFloat,
        ca = parseInt,
        da = Q.prototype.toUpperCase,
        fa = b._availableAttrs = {
            "arrow-end": "none",
            "arrow-start": "none",
            blur: 0,
            "clip-rect": "0 0 1e9 1e9",
            cursor: "default",
            cx: 0,
            cy: 0,
            fill: "#fff",
            "fill-opacity": 1,
            font: '10px "Arial"',
            "font-family": '"Arial"',
            "font-size": "10",
            "font-style": "normal",
            "font-weight": 400,
            gradient: 0,
            height: 0,
            href: "http://raphaeljs.com/",
            "letter-spacing": 0,
            opacity: 1,
            path: "M0,0",
            r: 0,
            rx: 0,
            ry: 0,
            src: "",
            stroke: "#000",
            "stroke-dasharray": "",
            "stroke-linecap": "butt",
            "stroke-linejoin": "butt",
            "stroke-miterlimit": 0,
            "stroke-opacity": 1,
            "stroke-width": 1,
            target: "_blank",
            "text-anchor": "middle",
            title: "Raphael",
            transform: "",
            width: 0,
            x: 0,
            y: 0
        },
        ba = b._availableAnimAttrs = {
            blur: T,
            "clip-rect": "csv",
            cx: T,
            cy: T,
            fill: "colour",
            "fill-opacity": T,
            "font-size": T,
            height: T,
            opacity: T,
            path: "path",
            r: T,
            rx: T,
            ry: T,
            stroke: "colour",
            "stroke-opacity": T,
            "stroke-width": T,
            transform: "transform",
            width: T,
            x: T,
            y: T
        },
        ea = /[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*/,
        ya = {
            hs: 1,
            rg: 1
        },
        sa = /,?([achlmqrstvxz]),?/gi,
        Fa = /([achlmrqstvz])[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)/ig,
        kb = /([rstm])[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)/ig,
        cb = /(-?\d*\.?\d*(?:e[\-+]?\d+)?)[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*/ig;
    b._radial_gradient = /^r(?:\(([^,]+?)[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*([^\)]+?)\))?/;
    var Ga = {},
        ib = function(b, a) {
            return U(b) - U(a)
        },
        Ea = function(b) {
            return b
        },
        ma = b._rectPath = function(b, a, d, f, e) {
            return e ? [
                ["M", b + e, a],
                ["l", d - 2 * e, 0],
                ["a", e, e, 0, 0, 1, e, e],
                ["l", 0, f - 2 *
                    e
                ],
                ["a", e, e, 0, 0, 1, -e, e],
                ["l", 2 * e - d, 0],
                ["a", e, e, 0, 0, 1, -e, -e],
                ["l", 0, 2 * e - f],
                ["a", e, e, 0, 0, 1, e, -e],
                ["z"]
            ] : [
                ["M", b, a],
                ["l", d, 0],
                ["l", 0, f],
                ["l", -d, 0],
                ["z"]
            ]
        },
        za = function(b, a, d, f) {
            null == f && (f = d);
            return [
                ["M", b, a],
                ["m", 0, -f],
                ["a", d, f, 0, 1, 1, 0, 2 * f],
                ["a", d, f, 0, 1, 1, 0, -2 * f],
                ["z"]
            ]
        },
        Aa = b._getPath = {
            path: function(b) {
                return b.attr("path")
            },
            circle: function(b) {
                b = b.attrs;
                return za(b.cx, b.cy, b.r)
            },
            ellipse: function(b) {
                b = b.attrs;
                return za(b.cx, b.cy, b.rx, b.ry)
            },
            rect: function(b) {
                b = b.attrs;
                return ma(b.x, b.y, b.width, b.height,
                    b.r)
            },
            image: function(b) {
                b = b.attrs;
                return ma(b.x, b.y, b.width, b.height)
            },
            text: function(b) {
                b = b._getBBox();
                return ma(b.x, b.y, b.width, b.height)
            },
            set: function(b) {
                b = b._getBBox();
                return ma(b.x, b.y, b.width, b.height)
            }
        },
        Ha = b.mapPath = function(b, a) {
            if (!a) return b;
            var d, f, e, g, m, h, l;
            b = Na(b);
            e = 0;
            for (m = b.length; e < m; e++)
                for (l = b[e], g = 1, h = l.length; g < h; g += 2) d = a.x(l[g], l[g + 1]), f = a.y(l[g], l[g + 1]), l[g] = d, l[g + 1] = f;
            return b
        };
    b._g = C;
    b.type = C.win.SVGAngle || C.doc.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure",
        "1.1") ? "SVG" : "VML";
    if ("VML" == b.type) {
        var oa = C.doc.createElement("div"),
            qa;
        oa.innerHTML = '<v:shape adj="1"/>';
        qa = oa.firstChild;
        qa.style.behavior = "url(#default#VML)";
        if (!qa || "object" != typeof qa.adj) return b.type = "";
        oa = null
    }
    b.svg = !(b.vml = "VML" == b.type);
    b._Paper = t;
    b.fn = D = t.prototype = b.prototype;
    b._id = 0;
    b._oid = 0;
    b.is = function(b, a) {
        a = L.call(a);
        return "finite" == a ? !ha[B](+b) : "array" == a ? b instanceof Array : "null" == a && null === b || a == typeof b && null !== b || "object" == a && b === Object(b) || "array" == a && Array.isArray && Array.isArray(b) ||
            ka.call(b).slice(8, -1).toLowerCase() == a
    };
    b.angle = function(a, d, f, e, g, m) {
        return null == g ? (a -= f, d -= e, a || d ? (180 * I.atan2(-d, -a) / S + 540) % 360 : 0) : b.angle(a, d, g, m) - b.angle(f, e, g, m)
    };
    b.rad = function(b) {
        return b % 360 * S / 180
    };
    b.deg = function(b) {
        return Math.round(1E3 * (180 * b / S % 360)) / 1E3
    };
    b.snapTo = function(a, d, f) {
        f = b.is(f, "finite") ? f : 10;
        if (b.is(a, M))
            for (var e = a.length; e--;) {
                if (Z(a[e] - d) <= f) return a[e]
            } else {
                a = +a;
                e = d % a;
                if (e < f) return d - e;
                if (e > a - f) return d - e + a
            }
        return d
    };
    b.createUUID = function(b, a) {
        return function() {
            return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(b,
                a).toUpperCase()
        }
    }(/[xy]/g, function(b) {
        var a = 16 * I.random() | 0;
        return ("x" == b ? a : a & 3 | 8).toString(16)
    });
    b.setWindow = function(a) {
        d("raphael.setWindow", b, C.win, a);
        C.win = a;
        C.doc = C.win.document;
        b._engine.initWin && b._engine.initWin(C.win)
    };
    var Ba = function(a) {
            if (b.vml) {
                var d = /^\s+|\s+$/g,
                    e;
                try {
                    var g = new ActiveXObject("htmlfile");
                    g.write("<body>");
                    g.close();
                    e = g.body
                } catch (m) {
                    e = createPopup().document.body
                }
                var h = e.createTextRange();
                Ba = f(function(b) {
                    try {
                        e.style.color = Q(b).replace(d, "");
                        var a = h.queryCommandValue("ForeColor");
                        return "#" + ("000000" + ((a & 255) << 16 | a & 65280 | (a & 16711680) >>> 16).toString(16)).slice(-6)
                    } catch (f) {
                        return "none"
                    }
                })
            } else {
                var l = C.doc.createElement("i");
                l.title = "Rapha\u00ebl Colour Picker";
                l.style.display = "none";
                C.doc.body.appendChild(l);
                Ba = f(function(b) {
                    l.style.color = b;
                    return C.doc.defaultView.getComputedStyle(l, "").getPropertyValue("color")
                })
            }
            return Ba(a)
        },
        Qa = function() {
            return "hsb(" + [this.h, this.s, this.b] + ")"
        },
        Oa = function() {
            return "hsl(" + [this.h, this.s, this.l] + ")"
        },
        Ca = function() {
            return this.hex
        },
        wa = function(a,
            d, f) {
            null == d && b.is(a, "object") && "r" in a && "g" in a && "b" in a && (f = a.b, d = a.g, a = a.r);
            null == d && b.is(a, "string") && (f = b.getRGB(a), a = f.r, d = f.g, f = f.b);
            if (1 < a || 1 < d || 1 < f) a /= 255, d /= 255, f /= 255;
            return [a, d, f]
        },
        ta = function(a, d, f, e) {
            a *= 255;
            d *= 255;
            f *= 255;
            a = {
                r: a,
                g: d,
                b: f,
                hex: b.rgb(a, d, f),
                toString: Ca
            };
            b.is(e, "finite") && (a.opacity = e);
            return a
        };
    b.color = function(a) {
        var d;
        b.is(a, "object") && "h" in a && "s" in a && "b" in a ? (d = b.hsb2rgb(a), a.r = d.r, a.g = d.g, a.b = d.b, a.hex = d.hex) : b.is(a, "object") && "h" in a && "s" in a && "l" in a ? (d = b.hsl2rgb(a),
            a.r = d.r, a.g = d.g, a.b = d.b, a.hex = d.hex) : (b.is(a, "string") && (a = b.getRGB(a)), b.is(a, "object") && "r" in a && "g" in a && "b" in a ? (d = b.rgb2hsl(a), a.h = d.h, a.s = d.s, a.l = d.l, d = b.rgb2hsb(a), a.v = d.b) : (a = {
            hex: "none"
        }, a.r = a.g = a.b = a.h = a.s = a.v = a.l = -1));
        a.toString = Ca;
        return a
    };
    b.hsb2rgb = function(b, a, d, f) {
        this.is(b, "object") && "h" in b && "s" in b && "b" in b && (d = b.b, a = b.s, f = b.o, b = b.h);
        var e, g, m;
        b = 360 * b % 360 / 60;
        m = d * a;
        a = m * (1 - Z(b % 2 - 1));
        d = e = g = d - m;
        b = ~~b;
        d += [m, a, 0, 0, a, m][b];
        e += [a, m, m, a, 0, 0][b];
        g += [0, 0, a, m, m, a][b];
        return ta(d, e, g, f)
    };
    b.hsl2rgb =
        function(b, a, d, f) {
            this.is(b, "object") && "h" in b && "s" in b && "l" in b && (d = b.l, a = b.s, b = b.h);
            if (1 < b || 1 < a || 1 < d) b /= 360, a /= 100, d /= 100;
            var e, g, m;
            b = 360 * b % 360 / 60;
            m = 2 * a * (0.5 > d ? d : 1 - d);
            a = m * (1 - Z(b % 2 - 1));
            d = e = g = d - m / 2;
            b = ~~b;
            d += [m, a, 0, 0, a, m][b];
            e += [a, m, m, a, 0, 0][b];
            g += [0, 0, a, m, m, a][b];
            return ta(d, e, g, f)
        };
    b.rgb2hsb = function(b, a, d) {
        d = wa(b, a, d);
        b = d[0];
        a = d[1];
        d = d[2];
        var f, e;
        f = O(b, a, d);
        e = f - W(b, a, d);
        b = 60 * (((0 == e ? 0 : f == b ? (a - d) / e : f == a ? (d - b) / e + 2 : (b - a) / e + 4) + 360) % 6) / 360;
        return {
            h: b,
            s: 0 == e ? 0 : e / f,
            b: f,
            toString: Qa
        }
    };
    b.rgb2hsl = function(b,
        a, d) {
        d = wa(b, a, d);
        b = d[0];
        a = d[1];
        d = d[2];
        var f, e, g;
        f = O(b, a, d);
        e = W(b, a, d);
        g = f - e;
        b = 60 * (((0 == g ? 0 : f == b ? (a - d) / g : f == a ? (d - b) / g + 2 : (b - a) / g + 4) + 360) % 6) / 360;
        f = (f + e) / 2;
        return {
            h: b,
            s: 0 == g ? 0 : 0.5 > f ? g / (2 * f) : g / (2 - 2 * f),
            l: f,
            toString: Oa
        }
    };
    b._path2string = function() {
        return this.join(",").replace(sa, "$1")
    };
    b._preload = function(b, a) {
        var d = C.doc.createElement("img");
        d.style.cssText = "position:absolute;left:-9999em;top:-9999em";
        d.onload = function() {
            a.call(this);
            this.onload = null;
            C.doc.body.removeChild(this)
        };
        d.onerror = function() {
            C.doc.body.removeChild(this)
        };
        C.doc.body.appendChild(d);
        d.src = b
    };
    b.getRGB = f(function(a) {
        if (!a || (a = Q(a)).indexOf("-") + 1) return {
            r: -1,
            g: -1,
            b: -1,
            hex: "none",
            error: 1,
            toString: g
        };
        if ("none" == a) return {
            r: -1,
            g: -1,
            b: -1,
            hex: "none",
            toString: g
        };
        !ya[B](a.toLowerCase().substring(0, 2)) && "#" != a.charAt() && (a = Ba(a));
        var d, f, e, m, h;
        if (a = a.match(va)) {
            a[2] && (e = ca(a[2].substring(5), 16), f = ca(a[2].substring(3, 5), 16), d = ca(a[2].substring(1, 3), 16));
            a[3] && (e = ca((h = a[3].charAt(3)) + h, 16), f = ca((h = a[3].charAt(2)) + h, 16), d = ca((h = a[3].charAt(1)) + h, 16));
            a[4] && (h = a[4][V](ea),
                d = U(h[0]), "%" == h[0].slice(-1) && (d *= 2.55), f = U(h[1]), "%" == h[1].slice(-1) && (f *= 2.55), e = U(h[2]), "%" == h[2].slice(-1) && (e *= 2.55), "rgba" == a[1].toLowerCase().slice(0, 4) && (m = U(h[3])), h[3] && "%" == h[3].slice(-1) && (m /= 100));
            if (a[5]) return h = a[5][V](ea), d = U(h[0]), "%" == h[0].slice(-1) && (d *= 2.55), f = U(h[1]), "%" == h[1].slice(-1) && (f *= 2.55), e = U(h[2]), "%" == h[2].slice(-1) && (e *= 2.55), "deg" != h[0].slice(-3) && "\u00b0" != h[0].slice(-1) || (d /= 360), "hsba" == a[1].toLowerCase().slice(0, 4) && (m = U(h[3])), h[3] && "%" == h[3].slice(-1) && (m /=
                100), b.hsb2rgb(d, f, e, m);
            if (a[6]) return h = a[6][V](ea), d = U(h[0]), "%" == h[0].slice(-1) && (d *= 2.55), f = U(h[1]), "%" == h[1].slice(-1) && (f *= 2.55), e = U(h[2]), "%" == h[2].slice(-1) && (e *= 2.55), "deg" != h[0].slice(-3) && "\u00b0" != h[0].slice(-1) || (d /= 360), "hsla" == a[1].toLowerCase().slice(0, 4) && (m = U(h[3])), h[3] && "%" == h[3].slice(-1) && (m /= 100), b.hsl2rgb(d, f, e, m);
            a = {
                r: d,
                g: f,
                b: e,
                toString: g
            };
            a.hex = "#" + (16777216 | e | f << 8 | d << 16).toString(16).slice(1);
            b.is(m, "finite") && (a.opacity = m);
            return a
        }
        return {
            r: -1,
            g: -1,
            b: -1,
            hex: "none",
            error: 1,
            toString: g
        }
    }, b);
    b.hsb = f(function(a, d, f) {
        return b.hsb2rgb(a, d, f).hex
    });
    b.hsl = f(function(a, d, f) {
        return b.hsl2rgb(a, d, f).hex
    });
    b.rgb = f(function(b, a, d) {
        return "#" + (16777216 | d | a << 8 | b << 16).toString(16).slice(1)
    });
    b.getColor = function(b) {
        b = this.getColor.start = this.getColor.start || {
            h: 0,
            s: 1,
            b: b || 0.75
        };
        var a = this.hsb2rgb(b.h, b.s, b.b);
        b.h += 0.075;
        1 < b.h && (b.h = 0, b.s -= 0.2, 0 >= b.s && (this.getColor.start = {
            h: 0,
            s: 1,
            b: b.b
        }));
        return a.hex
    };
    b.getColor.reset = function() {
        delete this.start
    };
    b.parsePathString = function(a) {
        if (!a) return null;
        var d = pa(a);
        if (d.arr) return ia(d.arr);
        var f = {
                a: 7,
                c: 6,
                h: 1,
                l: 2,
                m: 2,
                r: 4,
                q: 4,
                s: 4,
                t: 2,
                v: 1,
                z: 0
            },
            e = [];
        b.is(a, M) && b.is(a[0], M) && (e = ia(a));
        e.length || Q(a).replace(Fa, function(b, a, d) {
            var g = [];
            b = a.toLowerCase();
            d.replace(cb, function(b, a) {
                a && g.push(+a)
            });
            "m" == b && 2 < g.length && (e.push([a][J](g.splice(0, 2))), b = "l", a = "m" == a ? "l" : "L");
            if ("r" == b) e.push([a][J](g));
            else
                for (; g.length >= f[b] && (e.push([a][J](g.splice(0, f[b]))), f[b]););
        });
        e.toString = b._path2string;
        d.arr = ia(e);
        return e
    };
    b.parseTransformString = f(function(a) {
        if (!a) return null;
        var d = [];
        b.is(a, M) && b.is(a[0], M) && (d = ia(a));
        d.length || Q(a).replace(kb, function(b, a, f) {
            var e = [];
            L.call(a);
            f.replace(cb, function(b, a) {
                a && e.push(+a)
            });
            d.push([a][J](e))
        });
        d.toString = b._path2string;
        return d
    });
    var pa = function(b) {
        var a = pa.ps = pa.ps || {};
        a[b] ? a[b].sleep = 100 : a[b] = {
            sleep: 100
        };
        setTimeout(function() {
            for (var d in a) a[B](d) && d != b && (a[d].sleep--, !a[d].sleep && delete a[d])
        });
        return a[b]
    };
    b.findDotsAtSegment = function(b, a, d, f, e, g, m, h, l) {
        var k = 1 - l,
            n = aa(k, 3),
            p = aa(k, 2),
            t = l * l,
            u = t * l,
            w = n * b + 3 * p * l * d + 3 * k * l * l *
            e + u * m,
            n = n * a + 3 * p * l * f + 3 * k * l * l * g + u * h,
            p = b + 2 * l * (d - b) + t * (e - 2 * d + b),
            u = a + 2 * l * (f - a) + t * (g - 2 * f + a),
            s = d + 2 * l * (e - d) + t * (m - 2 * e + d),
            t = f + 2 * l * (g - f) + t * (h - 2 * g + f);
        b = k * b + l * d;
        a = k * a + l * f;
        e = k * e + l * m;
        g = k * g + l * h;
        h = 90 - 180 * I.atan2(p - s, u - t) / S;
        (p > s || u < t) && (h += 180);
        return {
            x: w,
            y: n,
            m: {
                x: p,
                y: u
            },
            n: {
                x: s,
                y: t
            },
            start: {
                x: b,
                y: a
            },
            end: {
                x: e,
                y: g
            },
            alpha: h
        }
    };
    b.bezierBBox = function(a, d, f, e, g, m, h, l) {
        b.is(a, "array") || (a = [a, d, f, e, g, m, h, l]);
        a = ra.apply(null, a);
        return {
            x: a.min.x,
            y: a.min.y,
            x2: a.max.x,
            y2: a.max.y,
            width: a.max.x - a.min.x,
            height: a.max.y - a.min.y
        }
    };
    b.isPointInsideBBox =
        function(b, a, d) {
            return a >= b.x && a <= b.x2 && d >= b.y && d <= b.y2
        };
    b.isBBoxIntersect = function(a, d) {
        var f = b.isPointInsideBBox;
        return f(d, a.x, a.y) || f(d, a.x2, a.y) || f(d, a.x, a.y2) || f(d, a.x2, a.y2) || f(a, d.x, d.y) || f(a, d.x2, d.y) || f(a, d.x, d.y2) || f(a, d.x2, d.y2) || (a.x < d.x2 && a.x > d.x || d.x < a.x2 && d.x > a.x) && (a.y < d.y2 && a.y > d.y || d.y < a.y2 && d.y > a.y)
    };
    b.pathIntersection = function(b, a) {
        return n(b, a)
    };
    b.pathIntersectionNumber = function(b, a) {
        return n(b, a, 1)
    };
    b.isPointInsidePath = function(a, d, f) {
        var e = b.pathBBox(a);
        return b.isPointInsideBBox(e,
            d, f) && 1 == n(a, [
            ["M", d, f],
            ["H", e.x2 + 10]
        ], 1) % 2
    };
    b._removedFactory = function(b) {
        return function() {
            d("raphael.log", null, "Rapha\u00ebl: you are calling to method \u201c" + b + "\u201d of removed object", b)
        }
    };
    var Ia = b.pathBBox = function(b) {
            var a = pa(b);
            if (a.bbox) return e(a.bbox);
            if (!b) return {
                x: 0,
                y: 0,
                width: 0,
                height: 0,
                x2: 0,
                y2: 0
            };
            b = Na(b);
            for (var d = 0, f = 0, g = [], m = [], h, l = 0, k = b.length; l < k; l++) h = b[l], "M" == h[0] ? (d = h[1], f = h[2], g.push(d), m.push(f)) : (d = ra(d, f, h[1], h[2], h[3], h[4], h[5], h[6]), g = g[J](d.min.x, d.max.x), m = m[J](d.min.y,
                d.max.y), d = h[5], f = h[6]);
            b = W[H](0, g);
            h = W[H](0, m);
            g = O[H](0, g);
            m = O[H](0, m);
            l = g - b;
            k = m - h;
            m = {
                x: b,
                y: h,
                x2: g,
                y2: m,
                width: l,
                height: k,
                cx: b + l / 2,
                cy: h + k / 2
            };
            a.bbox = e(m);
            return m
        },
        ia = function(a) {
            a = e(a);
            a.toString = b._path2string;
            return a
        },
        Ja = b._pathToRelative = function(a) {
            var d = pa(a);
            if (d.rel) return ia(d.rel);
            b.is(a, M) && b.is(a && a[0], M) || (a = b.parsePathString(a));
            var f = [],
                e = 0,
                g = 0,
                h = 0,
                m = 0,
                l = 0;
            "M" == a[0][0] && (e = a[0][1], g = a[0][2], h = e, m = g, l++, f.push(["M", e, g]));
            for (var k = a.length; l < k; l++) {
                var n = f[l] = [],
                    p = a[l];
                if (p[0] != L.call(p[0])) switch (n[0] =
                    L.call(p[0]), n[0]) {
                    case "a":
                        n[1] = p[1];
                        n[2] = p[2];
                        n[3] = p[3];
                        n[4] = p[4];
                        n[5] = p[5];
                        n[6] = +(p[6] - e).toFixed(3);
                        n[7] = +(p[7] - g).toFixed(3);
                        break;
                    case "v":
                        n[1] = +(p[1] - g).toFixed(3);
                        break;
                    case "m":
                        h = p[1], m = p[2];
                    default:
                        for (var t = 1, u = p.length; t < u; t++) n[t] = +(p[t] - (t % 2 ? e : g)).toFixed(3)
                } else
                    for (f[l] = [], "m" == p[0] && (h = p[1] + e, m = p[2] + g), n = 0, t = p.length; n < t; n++) f[l][n] = p[n];
                p = f[l].length;
                switch (f[l][0]) {
                    case "z":
                        e = h;
                        g = m;
                        break;
                    case "h":
                        e += +f[l][p - 1];
                        break;
                    case "v":
                        g += +f[l][p - 1];
                        break;
                    default:
                        e += +f[l][p - 2], g += +f[l][p -
                            1
                        ]
                }
            }
            f.toString = b._path2string;
            d.rel = ia(f);
            return f
        },
        ua = b._pathToAbsolute = function(a) {
            var d = pa(a);
            if (d.abs) return ia(d.abs);
            b.is(a, M) && b.is(a && a[0], M) || (a = b.parsePathString(a));
            if (!a || !a.length) return [
                ["M", 0, 0]
            ];
            var f = [],
                e = 0,
                g = 0,
                m = 0,
                l = 0,
                k = 0;
            "M" == a[0][0] && (e = +a[0][1], g = +a[0][2], m = e, l = g, k++, f[0] = ["M", e, g]);
            for (var n = 3 == a.length && "M" == a[0][0] && "R" == a[1][0].toUpperCase() && "Z" == a[2][0].toUpperCase(), p, t = k, u = a.length; t < u; t++) {
                f.push(k = []);
                p = a[t];
                if (p[0] != da.call(p[0])) switch (k[0] = da.call(p[0]), k[0]) {
                        case "A":
                            k[1] =
                                p[1];
                            k[2] = p[2];
                            k[3] = p[3];
                            k[4] = p[4];
                            k[5] = p[5];
                            k[6] = +(p[6] + e);
                            k[7] = +(p[7] + g);
                            break;
                        case "V":
                            k[1] = +p[1] + g;
                            break;
                        case "H":
                            k[1] = +p[1] + e;
                            break;
                        case "R":
                            for (var w = [e, g][J](p.slice(1)), s = 2, D = w.length; s < D; s++) w[s] = +w[s] + e, w[++s] = +w[s] + g;
                            f.pop();
                            f = f[J](h(w, n));
                            break;
                        case "M":
                            m = +p[1] + e, l = +p[2] + g;
                        default:
                            for (s = 1, D = p.length; s < D; s++) k[s] = +p[s] + (s % 2 ? e : g)
                    } else if ("R" == p[0]) w = [e, g][J](p.slice(1)), f.pop(), f = f[J](h(w, n)), k = ["R"][J](p.slice(-2));
                    else
                        for (w = 0, s = p.length; w < s; w++) k[w] = p[w];
                switch (k[0]) {
                    case "Z":
                        e = m;
                        g = l;
                        break;
                    case "H":
                        e = k[1];
                        break;
                    case "V":
                        g = k[1];
                        break;
                    case "M":
                        m = k[k.length - 2], l = k[k.length - 1];
                    default:
                        e = k[k.length - 2], g = k[k.length - 1]
                }
            }
            f.toString = b._path2string;
            d.abs = ia(f);
            return f
        },
        Ka = function(b, a, d, f, e, g) {
            var m = 1 / 3,
                h = 2 / 3;
            return [m * b + h * d, m * a + h * f, m * e + h * d, m * g + h * f, e, g]
        },
        La = function(b, a, d, e, g, m, h, l, k, n) {
            var p = 120 * S / 180,
                t = S / 180 * (+g || 0),
                u = [],
                w, s = f(function(b, a, d) {
                    var f = b * I.cos(d) - a * I.sin(d);
                    b = b * I.sin(d) + a * I.cos(d);
                    return {
                        x: f,
                        y: b
                    }
                });
            if (n) q = n[0], w = n[1], m = n[2], D = n[3];
            else {
                w = s(b, a, -t);
                b = w.x;
                a = w.y;
                w = s(l, k, -t);
                l = w.x;
                k = w.y;
                I.cos(S / 180 * g);
                I.sin(S / 180 * g);
                w = (b - l) / 2;
                q = (a - k) / 2;
                D = w * w / (d * d) + q * q / (e * e);
                1 < D && (D = I.sqrt(D), d *= D, e *= D);
                var D = d * d,
                    v = e * e,
                    D = (m == h ? -1 : 1) * I.sqrt(Z((D * v - D * q * q - v * w * w) / (D * q * q + v * w * w)));
                m = D * d * q / e + (b + l) / 2;
                var D = D * -e * w / d + (a + k) / 2,
                    q = I.asin(((a - D) / e).toFixed(9));
                w = I.asin(((k - D) / e).toFixed(9));
                q = b < m ? S - q : q;
                w = l < m ? S - w : w;
                0 > q && (q = 2 * S + q);
                0 > w && (w = 2 * S + w);
                h && q > w && (q -= 2 * S);
                !h && w > q && (w -= 2 * S)
            }
            if (Z(w - q) > p) {
                var u = w,
                    v = l,
                    H = k;
                w = q + p * (h && w > q ? 1 : -1);
                l = m + d * I.cos(w);
                k = D + e * I.sin(w);
                u = La(l, k, d, e, g, 0, h, v, H, [w, u, m, D])
            }
            m = w - q;
            g = I.cos(q);
            p = I.sin(q);
            h = I.cos(w);
            w = I.sin(w);
            m = I.tan(m / 4);
            d = 4 / 3 * d * m;
            m *= 4 / 3 * e;
            e = [b, a];
            b = [b + d * p, a - m * g];
            a = [l + d * w, k - m * h];
            l = [l, k];
            b[0] = 2 * e[0] - b[0];
            b[1] = 2 * e[1] - b[1];
            if (n) return [b, a, l][J](u);
            u = [b, a, l][J](u).join()[V](",");
            n = [];
            l = 0;
            for (k = u.length; l < k; l++) n[l] = l % 2 ? s(u[l - 1], u[l], t).y : s(u[l], u[l + 1], t).x;
            return n
        },
        Da = function(b, a, d, f, e, g, m, h, l) {
            var k = 1 - l;
            return {
                x: aa(k, 3) * b + 3 * aa(k, 2) * l * d + 3 * k * l * l * e + aa(l, 3) * m,
                y: aa(k, 3) * a + 3 * aa(k, 2) * l * f + 3 * k * l * l * g + aa(l, 3) * h
            }
        },
        ra = f(function(b, a, d, f, e, g, m, h) {
            var l = e - 2 * d + b - (m - 2 * e + d),
                k = 2 * (d - b) - 2 *
                (e - d),
                n = b - d,
                p = (-k + I.sqrt(k * k - 4 * l * n)) / 2 / l,
                l = (-k - I.sqrt(k * k - 4 * l * n)) / 2 / l,
                t = [a, h],
                u = [b, m];
            "1e12" < Z(p) && (p = 0.5);
            "1e12" < Z(l) && (l = 0.5);
            0 < p && 1 > p && (p = Da(b, a, d, f, e, g, m, h, p), u.push(p.x), t.push(p.y));
            0 < l && 1 > l && (p = Da(b, a, d, f, e, g, m, h, l), u.push(p.x), t.push(p.y));
            l = g - 2 * f + a - (h - 2 * g + f);
            k = 2 * (f - a) - 2 * (g - f);
            n = a - f;
            p = (-k + I.sqrt(k * k - 4 * l * n)) / 2 / l;
            l = (-k - I.sqrt(k * k - 4 * l * n)) / 2 / l;
            "1e12" < Z(p) && (p = 0.5);
            "1e12" < Z(l) && (l = 0.5);
            0 < p && 1 > p && (p = Da(b, a, d, f, e, g, m, h, p), u.push(p.x), t.push(p.y));
            0 < l && 1 > l && (p = Da(b, a, d, f, e, g, m, h, l), u.push(p.x), t.push(p.y));
            return {
                min: {
                    x: W[H](0, u),
                    y: W[H](0, t)
                },
                max: {
                    x: O[H](0, u),
                    y: O[H](0, t)
                }
            }
        }),
        Na = b._path2curve = f(function(b, a) {
            var d = !a && pa(b);
            if (!a && d.curve) return ia(d.curve);
            var f = ua(b),
                e = a && ua(a),
                g = {
                    x: 0,
                    y: 0,
                    bx: 0,
                    by: 0,
                    X: 0,
                    Y: 0,
                    qx: null,
                    qy: null
                },
                m = {
                    x: 0,
                    y: 0,
                    bx: 0,
                    by: 0,
                    X: 0,
                    Y: 0,
                    qx: null,
                    qy: null
                },
                h = function(b, a, d) {
                    if (!b) return ["C", a.x, a.y, a.x, a.y, a.x, a.y];
                    b[0] in {
                        T: 1,
                        Q: 1
                    } || (a.qx = a.qy = null);
                    switch (b[0]) {
                        case "M":
                            a.X = b[1];
                            a.Y = b[2];
                            break;
                        case "A":
                            b = ["C"][J](La[H](0, [a.x, a.y][J](b.slice(1))));
                            break;
                        case "S":
                            "C" == d || "S" == d ? (d = 2 * a.x -
                                a.bx, a = 2 * a.y - a.by) : (d = a.x, a = a.y);
                            b = ["C", d, a][J](b.slice(1));
                            break;
                        case "T":
                            "Q" == d || "T" == d ? (a.qx = 2 * a.x - a.qx, a.qy = 2 * a.y - a.qy) : (a.qx = a.x, a.qy = a.y);
                            b = ["C"][J](Ka(a.x, a.y, a.qx, a.qy, b[1], b[2]));
                            break;
                        case "Q":
                            a.qx = b[1];
                            a.qy = b[2];
                            b = ["C"][J](Ka(a.x, a.y, b[1], b[2], b[3], b[4]));
                            break;
                        case "L":
                            b = ["C"][J]([a.x, a.y, b[1], b[2], b[1], b[2]]);
                            break;
                        case "H":
                            b = ["C"][J]([a.x, a.y, b[1], a.y, b[1], a.y]);
                            break;
                        case "V":
                            b = ["C"][J]([a.x, a.y, a.x, b[1], a.x, b[1]]);
                            break;
                        case "Z":
                            b = ["C"][J]([a.x, a.y, a.X, a.Y, a.X, a.Y])
                    }
                    return b
                },
                l = function(b,
                    a) {
                    if (7 < b[a].length) {
                        b[a].shift();
                        for (var d = b[a]; d.length;) n[a] = "A", e && (p[a] = "A"), b.splice(a++, 0, ["C"][J](d.splice(0, 6)));
                        b.splice(a, 1);
                        s = O(f.length, e && e.length || 0)
                    }
                },
                k = function(b, a, d, g, m) {
                    b && a && "M" == b[m][0] && "M" != a[m][0] && (a.splice(m, 0, ["M", g.x, g.y]), d.bx = 0, d.by = 0, d.x = b[m][1], d.y = b[m][2], s = O(f.length, e && e.length || 0))
                },
                n = [],
                p = [],
                t = "",
                u = "",
                w = 0,
                s = O(f.length, e && e.length || 0);
            for (; w < s; w++) {
                f[w] && (t = f[w][0]);
                "C" != t && (n[w] = t, w && (u = n[w - 1]));
                f[w] = h(f[w], g, u);
                "A" != n[w] && "C" == t && (n[w] = "C");
                l(f, w);
                e && (e[w] &&
                    (t = e[w][0]), "C" != t && (p[w] = t, w && (u = p[w - 1])), e[w] = h(e[w], m, u), "A" != p[w] && "C" == t && (p[w] = "C"), l(e, w));
                k(f, e, g, m, w);
                k(e, f, m, g, w);
                var D = f[w],
                    v = e && e[w],
                    q = D.length,
                    A = e && v.length;
                g.x = D[q - 2];
                g.y = D[q - 1];
                g.bx = U(D[q - 4]) || g.x;
                g.by = U(D[q - 3]) || g.y;
                m.bx = e && (U(v[A - 4]) || m.x);
                m.by = e && (U(v[A - 3]) || m.y);
                m.x = e && v[A - 2];
                m.y = e && v[A - 1]
            }
            e || (d.curve = ia(f));
            return e ? [f, e] : f
        }, null, ia);
    b._parseDots = f(function(a) {
        for (var d = [], f = 0, e = a.length; f < e; f++) {
            var g = {},
                m = a[f].match(/^([^:]*):?([\d\.]*)/);
            g.color = b.getRGB(m[1]);
            if (g.color.error) return null;
            g.color = g.color.hex;
            m[2] && (g.offset = m[2] + "%");
            d.push(g)
        }
        f = 1;
        for (e = d.length - 1; f < e; f++)
            if (!d[f].offset) {
                a = U(d[f - 1].offset || 0);
                m = 0;
                for (g = f + 1; g < e; g++)
                    if (d[g].offset) {
                        m = d[g].offset;
                        break
                    }
                m || (m = 100, g = e);
                m = U(m);
                for (m = (m - a) / (g - f + 1); f < g; f++) a += m, d[f].offset = a + "%"
            }
        return d
    });
    var Ra = b._tear = function(b, a) {
        b == a.top && (a.top = b.prev);
        b == a.bottom && (a.bottom = b.next);
        b.next && (b.next.prev = b.prev);
        b.prev && (b.prev.next = b.next)
    };
    b._tofront = function(b, a) {
        a.top !== b && (Ra(b, a), b.next = null, b.prev = a.top, a.top.next = b, a.top = b)
    };
    b._toback = function(b, a) {
        a.bottom !== b && (Ra(b, a), b.next = a.bottom, b.prev = null, a.bottom.prev = b, a.bottom = b)
    };
    b._insertafter = function(b, a, d) {
        Ra(b, d);
        a == d.top && (d.top = b);
        a.next && (a.next.prev = b);
        b.next = a.next;
        b.prev = a;
        a.next = b
    };
    b._insertbefore = function(b, a, d) {
        Ra(b, d);
        a == d.bottom && (d.bottom = b);
        a.prev && (a.prev.next = b);
        b.prev = a.prev;
        a.prev = b;
        b.next = a
    };
    var lb = b.toMatrix = function(b, a) {
        var d = Ia(b),
            f = {
                _: {
                    transform: ""
                },
                getBBox: function() {
                    return d
                }
            };
        ab(f, a);
        return f.matrix
    };
    b.transformPath = function(b, a) {
        return Ha(b,
            lb(b, a))
    };
    var ab = b._extractTransform = function(a, d) {
            if (null == d) return a._.transform;
            d = Q(d).replace(/\.{3}|\u2026/g, a._.transform || "");
            var f = b.parseTransformString(d),
                e = 0,
                g = 0,
                h = 0,
                l = 1,
                k = 1,
                n = a._,
                h = new m;
            n.transform = f || [];
            if (f)
                for (var g = 0, p = f.length; g < p; g++) {
                    var t = f[g],
                        u = t.length,
                        w = Q(t[0]).toLowerCase(),
                        s = t[0] != w,
                        D = s ? h.invert() : 0,
                        v;
                    "t" == w && 3 == u ? s ? (u = D.x(0, 0), w = D.y(0, 0), s = D.x(t[1], t[2]), D = D.y(t[1], t[2]), h.translate(s - u, D - w)) : h.translate(t[1], t[2]) : "r" == w ? 2 == u ? (v = v || a.getBBox(1), h.rotate(t[1], v.x + v.width /
                        2, v.y + v.height / 2), e += t[1]) : 4 == u && (s ? (s = D.x(t[2], t[3]), D = D.y(t[2], t[3]), h.rotate(t[1], s, D)) : h.rotate(t[1], t[2], t[3]), e += t[1]) : "s" == w ? 2 == u || 3 == u ? (v = v || a.getBBox(1), h.scale(t[1], t[u - 1], v.x + v.width / 2, v.y + v.height / 2), l *= t[1], k *= t[u - 1]) : 5 == u && (s ? (s = D.x(t[3], t[4]), D = D.y(t[3], t[4]), h.scale(t[1], t[2], s, D)) : h.scale(t[1], t[2], t[3], t[4]), l *= t[1], k *= t[2]) : "m" == w && 7 == u && h.add(t[1], t[2], t[3], t[4], t[5], t[6]);
                    n.dirtyT = 1;
                    a.matrix = h
                }
            a.matrix = h;
            n.sx = l;
            n.sy = k;
            n.deg = e;
            n.dx = g = h.e;
            n.dy = h = h.f;
            1 == l && 1 == k && !e && n.bbox ? (n.bbox.x +=
                +g, n.bbox.y += +h) : n.dirtyT = 1
        },
        db = function(b) {
            var a = b[0];
            switch (a.toLowerCase()) {
                case "t":
                    return [a, 0, 0];
                case "m":
                    return [a, 1, 0, 0, 1, 0, 0];
                case "r":
                    return 4 == b.length ? [a, 0, b[2], b[3]] : [a, 0];
                case "s":
                    return 5 == b.length ? [a, 1, 1, b[3], b[4]] : 3 == b.length ? [a, 1, 1] : [a, 1]
            }
        },
        jb = b._equaliseTransform = function(a, d) {
            d = Q(d).replace(/\.{3}|\u2026/g, a);
            a = b.parseTransformString(a) || [];
            d = b.parseTransformString(d) || [];
            for (var f = O(a.length, d.length), e = [], g = [], m = 0, h, l, k, n; m < f; m++) {
                k = a[m] || db(d[m]);
                n = d[m] || db(k);
                if (k[0] != n[0] ||
                    "r" == k[0].toLowerCase() && (k[2] != n[2] || k[3] != n[3]) || "s" == k[0].toLowerCase() && (k[3] != n[3] || k[4] != n[4])) return;
                e[m] = [];
                g[m] = [];
                h = 0;
                for (l = O(k.length, n.length); h < l; h++) h in k && (e[m][h] = k[h]), h in n && (g[m][h] = n[h])
            }
            return {
                from: e,
                to: g
            }
        };
    b._getContainer = function(a, d, f, e) {
        var g;
        g = null != e || b.is(a, "object") ? a : C.doc.getElementById(a);
        if (null != g) return g.tagName ? null == d ? {
            container: g,
            width: g.style.pixelWidth || g.offsetWidth,
            height: g.style.pixelHeight || g.offsetHeight
        } : {
            container: g,
            width: d,
            height: f
        } : {
            container: 1,
            x: a,
            y: d,
            width: f,
            height: e
        }
    };
    b.pathToRelative = Ja;
    b._engine = {};
    b.path2curve = Na;
    b.matrix = function(b, a, d, f, e, g) {
        return new m(b, a, d, f, e, g)
    };
    (function(a) {
        function d(b) {
            return b[0] * b[0] + b[1] * b[1]
        }

        function f(b) {
            var a = I.sqrt(d(b));
            b[0] && (b[0] /= a);
            b[1] && (b[1] /= a)
        }
        a.add = function(b, a, d, f, e, g) {
            var h = [
                    [],
                    [],
                    []
                ],
                l = [
                    [this.a, this.c, this.e],
                    [this.b, this.d, this.f],
                    [0, 0, 1]
                ];
            a = [
                [b, d, e],
                [a, f, g],
                [0, 0, 1]
            ];
            b && b instanceof m && (a = [
                [b.a, b.c, b.e],
                [b.b, b.d, b.f],
                [0, 0, 1]
            ]);
            for (b = 0; 3 > b; b++)
                for (d = 0; 3 > d; d++) {
                    for (f = e = 0; 3 > f; f++) e += l[b][f] *
                        a[f][d];
                    h[b][d] = e
                }
            this.a = h[0][0];
            this.b = h[1][0];
            this.c = h[0][1];
            this.d = h[1][1];
            this.e = h[0][2];
            this.f = h[1][2]
        };
        a.invert = function() {
            var b = this.a * this.d - this.b * this.c;
            return new m(this.d / b, -this.b / b, -this.c / b, this.a / b, (this.c * this.f - this.d * this.e) / b, (this.b * this.e - this.a * this.f) / b)
        };
        a.clone = function() {
            return new m(this.a, this.b, this.c, this.d, this.e, this.f)
        };
        a.translate = function(b, a) {
            this.add(1, 0, 0, 1, b, a)
        };
        a.scale = function(b, a, d, f) {
            null == a && (a = b);
            (d || f) && this.add(1, 0, 0, 1, d, f);
            this.add(b, 0, 0, a, 0, 0);
            (d ||
                f) && this.add(1, 0, 0, 1, -d, -f)
        };
        a.rotate = function(a, d, f) {
            a = b.rad(a);
            d = d || 0;
            f = f || 0;
            var e = +I.cos(a).toFixed(9);
            a = +I.sin(a).toFixed(9);
            this.add(e, a, -a, e, d, f);
            this.add(1, 0, 0, 1, -d, -f)
        };
        a.x = function(b, a) {
            return b * this.a + a * this.c + this.e
        };
        a.y = function(b, a) {
            return b * this.b + a * this.d + this.f
        };
        a.get = function(b) {
            return +this[Q.fromCharCode(97 + b)].toFixed(4)
        };
        a.toString = function() {
            return b.svg ? "matrix(" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + ")" : [this.get(0), this.get(2), this.get(1),
                this.get(3), 0, 0
            ].join()
        };
        a.toFilter = function() {
            return "progid:DXImageTransform.Microsoft.Matrix(M11=" + this.get(0) + ", M12=" + this.get(2) + ", M21=" + this.get(1) + ", M22=" + this.get(3) + ", Dx=" + this.get(4) + ", Dy=" + this.get(5) + ", sizingmethod='auto expand')"
        };
        a.offset = function() {
            return [this.e.toFixed(4), this.f.toFixed(4)]
        };
        a.split = function() {
            var a = {};
            a.dx = this.e;
            a.dy = this.f;
            var e = [
                [this.a, this.c],
                [this.b, this.d]
            ];
            a.scalex = I.sqrt(d(e[0]));
            f(e[0]);
            a.shear = e[0][0] * e[1][0] + e[0][1] * e[1][1];
            e[1] = [e[1][0] - e[0][0] *
                a.shear, e[1][1] - e[0][1] * a.shear
            ];
            a.scaley = I.sqrt(d(e[1]));
            f(e[1]);
            a.shear /= a.scaley;
            var g = -e[0][1],
                e = e[1][1];
            0 > e ? (a.rotate = b.deg(I.acos(e)), 0 > g && (a.rotate = 360 - a.rotate)) : a.rotate = b.deg(I.asin(g));
            a.isSimple = !+a.shear.toFixed(9) && (a.scalex.toFixed(9) == a.scaley.toFixed(9) || !a.rotate);
            a.isSuperSimple = !+a.shear.toFixed(9) && a.scalex.toFixed(9) == a.scaley.toFixed(9) && !a.rotate;
            a.noRotation = !+a.shear.toFixed(9) && !a.rotate;
            return a
        };
        a.toTransformString = function(b) {
            b = b || this[V]();
            return b.isSimple ? (b.scalex = +b.scalex.toFixed(4), b.scaley = +b.scaley.toFixed(4), b.rotate = +b.rotate.toFixed(4), (b.dx || b.dy ? "t" + [b.dx, b.dy] : "") + (1 != b.scalex || 1 != b.scaley ? "s" + [b.scalex, b.scaley, 0, 0] : "") + (b.rotate ? "r" + [b.rotate, 0, 0] : "")) : "m" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)]
        }
    })(m.prototype);
    for (var mb = function() {
            this.returnValue = !1
        }, nb = function() {
            return this.originalEvent.preventDefault()
        }, ob = function() {
            this.cancelBubble = !0
        }, pb = function() {
            return this.originalEvent.stopPropagation()
        }, eb = function(b) {
            return {
                x: b.clientX +
                    (C.doc.documentElement.scrollLeft || C.doc.body.scrollLeft),
                y: b.clientY + (C.doc.documentElement.scrollTop || C.doc.body.scrollTop)
            }
        }, qb = function() {
            if (C.doc.addEventListener) return function(b, a, d, f) {
                var e = function(b) {
                    var a = eb(b);
                    return d.call(f, b, a.x, a.y)
                };
                b.addEventListener(a, e, !1);
                if (P && K[a]) {
                    var g = function(a) {
                        for (var e = eb(a), g = a, m = 0, h = a.targetTouches && a.targetTouches.length; m < h; m++)
                            if (a.targetTouches[m].target == b) {
                                a = a.targetTouches[m];
                                a.originalEvent = g;
                                a.preventDefault = nb;
                                a.stopPropagation = pb;
                                break
                            }
                        return d.call(f,
                            a, e.x, e.y)
                    };
                    b.addEventListener(K[a], g, !1)
                }
                return function() {
                    b.removeEventListener(a, e, !1);
                    P && K[a] && b.removeEventListener(K[a], g, !1);
                    return !0
                }
            };
            if (C.doc.attachEvent) return function(b, a, d, f) {
                var e = function(b) {
                    b = b || C.win.event;
                    var a = b.clientX + (C.doc.documentElement.scrollLeft || C.doc.body.scrollLeft),
                        e = b.clientY + (C.doc.documentElement.scrollTop || C.doc.body.scrollTop);
                    b.preventDefault = b.preventDefault || mb;
                    b.stopPropagation = b.stopPropagation || ob;
                    return d.call(f, b, a, e)
                };
                b.attachEvent("on" + a, e);
                return function() {
                    b.detachEvent("on" +
                        a, e);
                    return !0
                }
            }
        }(), xa = [], Ua = function(b) {
            for (var a = b.clientX, f = b.clientY, e = C.doc.documentElement.scrollTop || C.doc.body.scrollTop, g = C.doc.documentElement.scrollLeft || C.doc.body.scrollLeft, m, h = xa.length; h--;) {
                m = xa[h];
                if (P && b.touches)
                    for (var l = b.touches.length, k; l--;) {
                        if (k = b.touches[l], k.identifier == m.el._drag.id) {
                            a = k.clientX;
                            f = k.clientY;
                            (b.originalEvent ? b.originalEvent : b).preventDefault();
                            break
                        }
                    } else b.preventDefault();
                var l = m.el.node,
                    n = l.nextSibling,
                    p = l.parentNode,
                    t = l.style.display;
                C.win.opera && p.removeChild(l);
                l.style.display = "none";
                k = m.el.paper.getElementByPoint(a, f);
                l.style.display = t;
                C.win.opera && (n ? p.insertBefore(l, n) : p.appendChild(l));
                k && d("raphael.drag.over." + m.el.id, m.el, k);
                a += g;
                f += e;
                d("raphael.drag.move." + m.el.id, m.move_scope || m.el, a - m.el._drag.x, f - m.el._drag.y, a, f, b)
            }
        }, Va = function(a) {
            b.unmousemove(Ua).unmouseup(Va);
            for (var f = xa.length, e; f--;) e = xa[f], e.el._drag = {}, d("raphael.drag.end." + e.el.id, e.end_scope || e.start_scope || e.move_scope || e.el, a);
            xa = []
        }, $ = b.el = {}, fb = R.length; fb--;)(function(a) {
        b[a] =
            $[a] = function(d, f) {
                b.is(d, "function") && (this.events = this.events || [], this.events.push({
                    name: a,
                    f: d,
                    unbind: qb(this.shape || this.node || C.doc, a, d, f || this)
                }));
                return this
            };
        b["un" + a] = $["un" + a] = function(d) {
            for (var f = this.events || [], e = f.length; e--;) f[e].name != a || !b.is(d, "undefined") && f[e].f != d || (f[e].unbind(), f.splice(e, 1), !f.length && delete this.events);
            return this
        }
    })(R[fb]);
    $.data = function(a, f) {
        var e = Ga[this.id] = Ga[this.id] || {};
        if (0 == arguments.length) return e;
        if (1 == arguments.length) {
            if (b.is(a, "object")) {
                for (var g in a) a[B](g) &&
                    this.data(g, a[g]);
                return this
            }
            d("raphael.data.get." + this.id, this, e[a], a);
            return e[a]
        }
        e[a] = f;
        d("raphael.data.set." + this.id, this, f, a);
        return this
    };
    $.removeData = function(b) {
        null == b ? Ga[this.id] = {} : Ga[this.id] && delete Ga[this.id][b];
        return this
    };
    $.getData = function() {
        return e(Ga[this.id] || {})
    };
    $.hover = function(b, a, d, f) {
        return this.mouseover(b, d).mouseout(a, f || d)
    };
    $.unhover = function(b, a) {
        return this.unmouseover(b).unmouseout(a)
    };
    var Ma = [];
    $.drag = function(a, f, e, g, m, h) {
        function l(k) {
            (k.originalEvent || k).preventDefault();
            var n = k.clientX,
                p = k.clientY,
                t = C.doc.documentElement.scrollTop || C.doc.body.scrollTop,
                u = C.doc.documentElement.scrollLeft || C.doc.body.scrollLeft;
            this._drag.id = k.identifier;
            if (P && k.touches)
                for (var w = k.touches.length, s; w--;)
                    if (s = k.touches[w], this._drag.id = s.identifier, s.identifier == this._drag.id) {
                        n = s.clientX;
                        p = s.clientY;
                        break
                    }
            this._drag.x = n + u;
            this._drag.y = p + t;
            !xa.length && b.mousemove(Ua).mouseup(Va);
            xa.push({
                el: this,
                move_scope: g,
                start_scope: m,
                end_scope: h
            });
            f && d.on("raphael.drag.start." + this.id, f);
            a && d.on("raphael.drag.move." +
                this.id, a);
            e && d.on("raphael.drag.end." + this.id, e);
            d("raphael.drag.start." + this.id, m || g || this, k.clientX + u, k.clientY + t, k)
        }
        this._drag = {};
        Ma.push({
            el: this,
            start: l
        });
        this.mousedown(l);
        return this
    };
    $.onDragOver = function(b) {
        b ? d.on("raphael.drag.over." + this.id, b) : d.unbind("raphael.drag.over." + this.id)
    };
    $.undrag = function() {
        for (var a = Ma.length; a--;) Ma[a].el == this && (this.unmousedown(Ma[a].start), Ma.splice(a, 1), d.unbind("raphael.drag.*." + this.id));
        !Ma.length && b.unmousemove(Ua).unmouseup(Va);
        xa = []
    };
    D.circle = function(a,
        d, f) {
        a = b._engine.circle(this, a || 0, d || 0, f || 0);
        this.__set__ && this.__set__.push(a);
        return a
    };
    D.rect = function(a, d, f, e, g) {
        a = b._engine.rect(this, a || 0, d || 0, f || 0, e || 0, g || 0);
        this.__set__ && this.__set__.push(a);
        return a
    };
    D.ellipse = function(a, d, f, e) {
        a = b._engine.ellipse(this, a || 0, d || 0, f || 0, e || 0);
        this.__set__ && this.__set__.push(a);
        return a
    };
    D.path = function(a) {
        a && !b.is(a, "string") && !b.is(a[0], M) && (a += "");
        var d = b._engine.path(b.format[H](b, arguments), this);
        this.__set__ && this.__set__.push(d);
        return d
    };
    D.image = function(a,
        d, f, e, g) {
        a = b._engine.image(this, a || "about:blank", d || 0, f || 0, e || 0, g || 0);
        this.__set__ && this.__set__.push(a);
        return a
    };
    D.text = function(a, d, f) {
        a = b._engine.text(this, a || 0, d || 0, Q(f));
        this.__set__ && this.__set__.push(a);
        return a
    };
    D.set = function(a) {
        !b.is(a, "array") && (a = Array.prototype.splice.call(arguments, 0, arguments.length));
        var d = new Pa(a);
        this.__set__ && this.__set__.push(d);
        d.paper = this;
        d.type = "set";
        return d
    };
    D.setStart = function(b) {
        this.__set__ = b || this.set()
    };
    D.setFinish = function(b) {
        b = this.__set__;
        delete this.__set__;
        return b
    };
    D.getSize = function() {
        var b = this.canvas.parentNode;
        return {
            width: b.offsetWidth,
            height: b.offsetHeight
        }
    };
    D.setSize = function(a, d) {
        return b._engine.setSize.call(this, a, d)
    };
    D.setViewBox = function(a, d, f, e, g) {
        return b._engine.setViewBox.call(this, a, d, f, e, g)
    };
    D.top = D.bottom = null;
    D.raphael = b;
    D.getElementByPoint = function(b, a) {
        var d, f, e = this.canvas,
            g = C.doc.elementFromPoint(b, a);
        if (C.win.opera && "svg" == g.tagName) {
            f = e.getBoundingClientRect();
            d = e.ownerDocument;
            var m = d.body,
                h = d.documentElement;
            d = f.top + (C.win.pageYOffset ||
                h.scrollTop || m.scrollTop) - (h.clientTop || m.clientTop || 0);
            f = f.left + (C.win.pageXOffset || h.scrollLeft || m.scrollLeft) - (h.clientLeft || m.clientLeft || 0);
            m = e.createSVGRect();
            m.x = b - f;
            m.y = a - d;
            m.width = m.height = 1;
            d = e.getIntersectionList(m, null);
            d.length && (g = d[d.length - 1])
        }
        if (!g) return null;
        for (; g.parentNode && g != e.parentNode && !g.raphael;) g = g.parentNode;
        g == this.canvas.parentNode && (g = e);
        return g = g && g.raphael ? this.getById(g.raphaelid) : null
    };
    D.getElementsByBBox = function(a) {
        var d = this.set();
        this.forEach(function(f) {
            b.isBBoxIntersect(f.getBBox(),
                a) && d.push(f)
        });
        return d
    };
    D.getById = function(b) {
        for (var a = this.bottom; a;) {
            if (a.id == b) return a;
            a = a.next
        }
        return null
    };
    D.forEach = function(b, a) {
        for (var d = this.bottom; d && !1 !== b.call(a, d);) d = d.next;
        return this
    };
    D.getElementsByPoint = function(b, a) {
        var d = this.set();
        this.forEach(function(f) {
            f.isPointInside(b, a) && d.push(f)
        });
        return d
    };
    $.isPointInside = function(a, d) {
        var f = this.realPath = Aa[this.type](this);
        this.attr("transform") && this.attr("transform").length && (f = b.transformPath(f, this.attr("transform")));
        return b.isPointInsidePath(f,
            a, d)
    };
    $.getBBox = function(b) {
        if (this.removed) return {};
        var a = this._;
        if (b) {
            if (a.dirty || !a.bboxwt) this.realPath = Aa[this.type](this), a.bboxwt = Ia(this.realPath), a.bboxwt.toString = p, a.dirty = 0;
            return a.bboxwt
        }
        if (a.dirty || a.dirtyT || !a.bbox) {
            if (a.dirty || !this.realPath) a.bboxwt = 0, this.realPath = Aa[this.type](this);
            a.bbox = Ia(Ha(this.realPath, this.matrix));
            a.bbox.toString = p;
            a.dirty = a.dirtyT = 0
        }
        return a.bbox
    };
    $.clone = function() {
        if (this.removed) return null;
        var b = this.paper[this.type]().attr(this.attr());
        this.__set__ &&
            this.__set__.push(b);
        return b
    };
    $.glow = function(b) {
        if ("text" == this.type) return null;
        b = b || {};
        var a = (b.width || 10) + (+this.attr("stroke-width") || 1),
            d = b.fill || !1,
            f = b.opacity || 0.5,
            e = b.offsetx || 0,
            g = b.offsety || 0;
        b = b.color || "#000";
        for (var m = a / 2, h = this.paper, l = h.set(), k = this.realPath || Aa[this.type](this), k = this.matrix ? Ha(k, this.matrix) : k, n = 1; n < m + 1; n++) l.push(h.path(k).attr({
            stroke: b,
            fill: d ? b : "none",
            "stroke-linejoin": "round",
            "stroke-linecap": "round",
            "stroke-width": +(a / m * n).toFixed(3),
            opacity: +(f / m).toFixed(3)
        }));
        return l.insertBefore(this).translate(e, g)
    };
    var Wa = function(a, d, f, e, g, m, h, n, p) {
            return null == p ? k(a, d, f, e, g, m, h, n) : b.findDotsAtSegment(a, d, f, e, g, m, h, n, l(a, d, f, e, g, m, h, n, p))
        },
        Xa = function(a, d) {
            return function(f, e, g) {
                f = Na(f);
                for (var m, h, l, k, n = "", p = {}, t = 0, u = 0, w = f.length; u < w; u++) {
                    l = f[u];
                    if ("M" == l[0]) m = +l[1], h = +l[2];
                    else {
                        k = Wa(m, h, l[1], l[2], l[3], l[4], l[5], l[6]);
                        if (t + k > e) {
                            if (d && !p.start) {
                                m = Wa(m, h, l[1], l[2], l[3], l[4], l[5], l[6], e - t);
                                n += ["C" + m.start.x, m.start.y, m.m.x, m.m.y, m.x, m.y];
                                if (g) return n;
                                p.start = n;
                                n = ["M" +
                                    m.x, m.y + "C" + m.n.x, m.n.y, m.end.x, m.end.y, l[5], l[6]
                                ].join();
                                t += k;
                                m = +l[5];
                                h = +l[6];
                                continue
                            }
                            if (!a && !d) return m = Wa(m, h, l[1], l[2], l[3], l[4], l[5], l[6], e - t), {
                                x: m.x,
                                y: m.y,
                                alpha: m.alpha
                            }
                        }
                        t += k;
                        m = +l[5];
                        h = +l[6]
                    }
                    n += l.shift() + l
                }
                p.end = n;
                m = a ? t : d ? p : b.findDotsAtSegment(m, h, l[0], l[1], l[2], l[3], l[4], l[5], 1);
                m.alpha && (m = {
                    x: m.x,
                    y: m.y,
                    alpha: m.alpha
                });
                return m
            }
        },
        gb = Xa(1),
        hb = Xa(),
        Ya = Xa(0, 1);
    b.getTotalLength = gb;
    b.getPointAtLength = hb;
    b.getSubpath = function(b, a, d) {
        if (1E-6 > this.getTotalLength(b) - d) return Ya(b, a).end;
        b = Ya(b, d, 1);
        return a ? Ya(b, a).end : b
    };
    $.getTotalLength = function() {
        var b = this.getPath();
        if (b) return this.node.getTotalLength ? this.node.getTotalLength() : gb(b)
    };
    $.getPointAtLength = function(b) {
        var a = this.getPath();
        if (a) return hb(a, b)
    };
    $.getPath = function() {
        var a, d = b._getPath[this.type];
        if ("text" != this.type && "set" != this.type) return d && (a = d(this)), a
    };
    $.getSubpath = function(a, d) {
        var f = this.getPath();
        if (f) return b.getSubpath(f, a, d)
    };
    var na = b.easing_formulas = {
        linear: function(b) {
            return b
        },
        "<": function(b) {
            return aa(b, 1.7)
        },
        ">": function(b) {
            return aa(b, 0.48)
        },
        "<>": function(b) {
            var a = 0.48 - b / 1.04,
                d = I.sqrt(0.1734 + a * a);
            b = d - a;
            b = aa(Z(b), 1 / 3) * (0 > b ? -1 : 1);
            a = -d - a;
            a = aa(Z(a), 1 / 3) * (0 > a ? -1 : 1);
            b = b + a + 0.5;
            return 3 * (1 - b) * b * b + b * b * b
        },
        backIn: function(b) {
            return b * b * (2.70158 * b - 1.70158)
        },
        backOut: function(b) {
            b -= 1;
            return b * b * (2.70158 * b + 1.70158) + 1
        },
        elastic: function(b) {
            return b == !!b ? b : aa(2, -10 * b) * I.sin(2 * (b - 0.075) * S / 0.3) + 1
        },
        bounce: function(b) {
            b < 1 / 2.75 ? b *= 7.5625 * b : b < 2 / 2.75 ? (b -= 1.5 / 2.75, b = 7.5625 * b * b + 0.75) : b < 2.5 / 2.75 ? (b -= 2.25 / 2.75, b = 7.5625 * b * b + 0.9375) :
                (b -= 2.625 / 2.75, b = 7.5625 * b * b + 0.984375);
            return b
        }
    };
    na.easeIn = na["ease-in"] = na["<"];
    na.easeOut = na["ease-out"] = na[">"];
    na.easeInOut = na["ease-in-out"] = na["<>"];
    na["back-in"] = na.backIn;
    na["back-out"] = na.backOut;
    var Y = [],
        bb = a.requestAnimationFrame || a.webkitRequestAnimationFrame || a.mozRequestAnimationFrame || a.oRequestAnimationFrame || a.msRequestAnimationFrame || function(b) {
            setTimeout(b, 16)
        },
        Ta = function() {
            for (var a = +new Date, f = 0; f < Y.length; f++) {
                var e = Y[f];
                if (!e.el.removed && !e.paused) {
                    var g = a - e.start,
                        m = e.ms,
                        h = e.easing,
                        l = e.from,
                        k = e.diff,
                        n = e.to,
                        p = e.el,
                        t = {},
                        u, w = {},
                        s;
                    e.initstatus ? (g = (e.initstatus * e.anim.top - e.prev) / (e.percent - e.prev) * m, e.status = e.initstatus, delete e.initstatus, e.stop && Y.splice(f--, 1)) : e.status = (e.prev + (e.percent - e.prev) * (g / m)) / e.anim.top;
                    if (!(0 > g))
                        if (g < m) {
                            var D = h(g / m),
                                q;
                            for (q in l)
                                if (l[B](q)) {
                                    switch (ba[q]) {
                                        case T:
                                            u = +l[q] + D * m * k[q];
                                            break;
                                        case "colour":
                                            u = "rgb(" + [Za(X(l[q].r + D * m * k[q].r)), Za(X(l[q].g + D * m * k[q].g)), Za(X(l[q].b + D * m * k[q].b))].join() + ")";
                                            break;
                                        case "path":
                                            u = [];
                                            g = 0;
                                            for (h = l[q].length; g <
                                                h; g++) {
                                                u[g] = [l[q][g][0]];
                                                n = 1;
                                                for (w = l[q][g].length; n < w; n++) u[g][n] = +l[q][g][n] + D * m * k[q][g][n];
                                                u[g] = u[g].join(N)
                                            }
                                            u = u.join(N);
                                            break;
                                        case "transform":
                                            if (k[q].real)
                                                for (u = [], g = 0, h = l[q].length; g < h; g++)
                                                    for (u[g] = [l[q][g][0]], n = 1, w = l[q][g].length; n < w; n++) u[g][n] = l[q][g][n] + D * m * k[q][g][n];
                                            else u = function(b) {
                                                return +l[q][b] + D * m * k[q][b]
                                            }, u = [
                                                ["m", u(0), u(1), u(2), u(3), u(4), u(5)]
                                            ];
                                            break;
                                        case "csv":
                                            if ("clip-rect" == q)
                                                for (u = [], g = 4; g--;) u[g] = +l[q][g] + D * m * k[q][g];
                                            break;
                                        default:
                                            for (h = [][J](l[q]), u = [], g = p.paper.customAttributes[q].length; g--;) u[g] = +h[g] + D * m * k[q][g]
                                    }
                                    t[q] = u
                                }
                            p.attr(t);
                            (function(b, a, e) {
                                setTimeout(function() {
                                    d("raphael.anim.frame." + b, a, e)
                                })
                            })(p.id, p, e.anim)
                        } else {
                            (function(a, e, f) {
                                setTimeout(function() {
                                    d("raphael.anim.frame." + e.id, e, f);
                                    d("raphael.anim.finish." + e.id, e, f);
                                    b.is(a, "function") && a.call(e)
                                })
                            })(e.callback, p, e.anim);
                            p.attr(n);
                            Y.splice(f--, 1);
                            if (1 < e.repeat && !e.next) {
                                for (s in n) n[B](s) && (w[s] = e.totalOrigin[s]);
                                e.el.attr(w);
                                v(e.anim, e.el, e.anim.percents[0], null, e.totalOrigin, e.repeat - 1)
                            }
                            e.next && !e.stop && v(e.anim, e.el, e.next,
                                null, e.totalOrigin, e.repeat)
                        }
                }
            }
            Y.length && bb(Ta)
        },
        Za = function(b) {
            return 255 < b ? 255 : 0 > b ? 0 : b
        };
    $.animateWith = function(a, d, e, f, g, m) {
        if (this.removed) return m && m.call(this), this;
        e = e instanceof q ? e : b.animation(e, f, g, m);
        v(e, this, e.percents[0], null, this.attr());
        e = 0;
        for (f = Y.length; e < f; e++)
            if (Y[e].anim == d && Y[e].el == a) {
                Y[f - 1].start = Y[e].start;
                break
            }
        return this
    };
    $.onAnimation = function(b) {
        b ? d.on("raphael.anim.frame." + this.id, b) : d.unbind("raphael.anim.frame." + this.id);
        return this
    };
    q.prototype.delay = function(b) {
        var a =
            new q(this.anim, this.ms);
        a.times = this.times;
        a.del = +b || 0;
        return a
    };
    q.prototype.repeat = function(b) {
        var a = new q(this.anim, this.ms);
        a.del = this.del;
        a.times = I.floor(O(b, 0)) || 1;
        return a
    };
    b.animation = function(a, d, e, f) {
        if (a instanceof q) return a;
        if (b.is(e, "function") || !e) f = f || e || null, e = null;
        a = Object(a);
        d = +d || 0;
        var g = {},
            m, h;
        for (h in a) a[B](h) && U(h) != h && U(h) + "%" != h && (m = !0, g[h] = a[h]);
        if (m) return e && (g.easing = e), f && (g.callback = f), new q({
            100: g
        }, d);
        if (f) {
            e = 0;
            for (var l in a) g = ca(l), a[B](l) && g > e && (e = g);
            e += "%";
            !a[e].callback &&
                (a[e].callback = f)
        }
        return new q(a, d)
    };
    $.animate = function(a, d, e, f) {
        if (this.removed) return f && f.call(this), this;
        a = a instanceof q ? a : b.animation(a, d, e, f);
        v(a, this, a.percents[0], null, this.attr());
        return this
    };
    $.setTime = function(b, a) {
        b && null != a && this.status(b, W(a, b.ms) / b.ms);
        return this
    };
    $.status = function(b, a) {
        var d = [],
            e = 0,
            f, g;
        if (null != a) return v(b, this, -1, W(a, 1)), this;
        for (f = Y.length; e < f; e++)
            if (g = Y[e], g.el.id == this.id && (!b || g.anim == b)) {
                if (b) return g.status;
                d.push({
                    anim: g.anim,
                    status: g.status
                })
            }
        return b ?
            0 : d
    };
    $.pause = function(b) {
        for (var a = 0; a < Y.length; a++) Y[a].el.id != this.id || b && Y[a].anim != b || !1 === d("raphael.anim.pause." + this.id, this, Y[a].anim) || (Y[a].paused = !0);
        return this
    };
    $.resume = function(b) {
        for (var a = 0; a < Y.length; a++)
            if (Y[a].el.id == this.id && (!b || Y[a].anim == b)) {
                var e = Y[a];
                !1 !== d("raphael.anim.resume." + this.id, this, e.anim) && (delete e.paused, this.status(e.anim, e.status))
            }
        return this
    };
    $.stop = function(b) {
        for (var a = 0; a < Y.length; a++) Y[a].el.id != this.id || b && Y[a].anim != b || !1 !== d("raphael.anim.stop." +
            this.id, this, Y[a].anim) && Y.splice(a--, 1);
        return this
    };
    d.on("raphael.remove", z);
    d.on("raphael.clear", z);
    $.toString = function() {
        return "Rapha\u00ebl\u2019s object"
    };
    var Pa = function(b) {
            this.items = [];
            this.length = 0;
            this.type = "set";
            if (b)
                for (var a = 0, d = b.length; a < d; a++) !b[a] || b[a].constructor != $.constructor && b[a].constructor != Pa || (this[this.items.length] = this.items[this.items.length] = b[a], this.length++)
        },
        ja = Pa.prototype;
    ja.push = function() {
        for (var b, a, d = 0, e = arguments.length; d < e; d++) !(b = arguments[d]) || b.constructor !=
            $.constructor && b.constructor != Pa || (a = this.items.length, this[a] = this.items[a] = b, this.length++);
        return this
    };
    ja.pop = function() {
        this.length && delete this[this.length--];
        return this.items.pop()
    };
    ja.forEach = function(b, a) {
        for (var d = 0, e = this.items.length; d < e && !1 !== b.call(a, this.items[d], d); d++);
        return this
    };
    for (var $a in $) $[B]($a) && (ja[$a] = function(b) {
        return function() {
            var a = arguments;
            return this.forEach(function(d) {
                d[b][H](d, a)
            })
        }
    }($a));
    ja.attr = function(a, d) {
        if (a && b.is(a, M) && b.is(a[0], "object"))
            for (var e =
                    0, f = a.length; e < f; e++) this.items[e].attr(a[e]);
        else
            for (e = 0, f = this.items.length; e < f; e++) this.items[e].attr(a, d);
        return this
    };
    ja.clear = function() {
        for (; this.length;) this.pop()
    };
    ja.splice = function(b, a, d) {
        b = 0 > b ? O(this.length + b, 0) : b;
        a = O(0, W(this.length - b, a));
        var e = [],
            f = [],
            g = [],
            m;
        for (m = 2; m < arguments.length; m++) g.push(arguments[m]);
        for (m = 0; m < a; m++) f.push(this[b + m]);
        for (; m < this.length - b; m++) e.push(this[b + m]);
        var h = g.length;
        for (m = 0; m < h + e.length; m++) this.items[b + m] = this[b + m] = m < h ? g[m] : e[m - h];
        for (m = this.items.length =
            this.length -= a - h; this[m];) delete this[m++];
        return new Pa(f)
    };
    ja.exclude = function(b) {
        for (var a = 0, d = this.length; a < d; a++)
            if (this[a] == b) return this.splice(a, 1), !0
    };
    ja.animate = function(a, d, e, f) {
        !b.is(e, "function") && e || (f = e || null);
        var g = this.items.length,
            m = g,
            h = this,
            l;
        if (!g) return this;
        f && (l = function() {
            !--g && f.call(h)
        });
        e = b.is(e, "string") ? e : l;
        d = b.animation(a, d, e, l);
        for (a = this.items[--m].animate(d); m--;) this.items[m] && !this.items[m].removed && this.items[m].animateWith(a, d, d), this.items[m] && !this.items[m].removed ||
            g--;
        return this
    };
    ja.insertAfter = function(b) {
        for (var a = this.items.length; a--;) this.items[a].insertAfter(b);
        return this
    };
    ja.getBBox = function() {
        for (var b = [], a = [], d = [], e = [], f = this.items.length; f--;)
            if (!this.items[f].removed) {
                var g = this.items[f].getBBox();
                b.push(g.x);
                a.push(g.y);
                d.push(g.x + g.width);
                e.push(g.y + g.height)
            }
        b = W[H](0, b);
        a = W[H](0, a);
        d = O[H](0, d);
        e = O[H](0, e);
        return {
            x: b,
            y: a,
            x2: d,
            y2: e,
            width: d - b,
            height: e - a
        }
    };
    ja.clone = function(b) {
        b = this.paper.set();
        for (var a = 0, d = this.items.length; a < d; a++) b.push(this.items[a].clone());
        return b
    };
    ja.toString = function() {
        return "Rapha\u00ebl\u2018s set"
    };
    ja.glow = function(b) {
        var a = this.paper.set();
        this.forEach(function(d, e) {
            var f = d.glow(b);
            null != f && f.forEach(function(b, d) {
                a.push(b)
            })
        });
        return a
    };
    ja.isPointInside = function(b, a) {
        var d = !1;
        this.forEach(function(e) {
            if (e.isPointInside(b, a)) return d = !0, !1
        });
        return d
    };
    b.registerFont = function(b) {
        if (!b.face) return b;
        this.fonts = this.fonts || {};
        var a = {
                w: b.w,
                face: {},
                glyphs: {}
            },
            d = b.face["font-family"],
            e;
        for (e in b.face) b.face[B](e) && (a.face[e] = b.face[e]);
        this.fonts[d] ? this.fonts[d].push(a) : this.fonts[d] = [a];
        if (!b.svg) {
            a.face["units-per-em"] = ca(b.face["units-per-em"], 10);
            for (var f in b.glyphs)
                if (b.glyphs[B](f) && (d = b.glyphs[f], a.glyphs[f] = {
                        w: d.w,
                        k: {},
                        d: d.d && "M" + d.d.replace(/[mlcxtrv]/g, function(b) {
                            return {
                                l: "L",
                                c: "C",
                                x: "z",
                                t: "m",
                                r: "l",
                                v: "c"
                            }[b] || "M"
                        }) + "z"
                    }, d.k))
                    for (var g in d.k) d[B](g) && (a.glyphs[f].k[g] = d.k[g])
        }
        return b
    };
    D.getFont = function(a, d, e, f) {
        f = f || "normal";
        e = e || "normal";
        d = +d || {
            normal: 400,
            bold: 700,
            lighter: 300,
            bolder: 800
        }[d] || 400;
        if (b.fonts) {
            var g =
                b.fonts[a];
            if (!g) {
                a = RegExp("(^|\\s)" + a.replace(/[^\w\d\s+!~.:_-]/g, "") + "(\\s|$)", "i");
                for (var m in b.fonts)
                    if (b.fonts[B](m) && a.test(m)) {
                        g = b.fonts[m];
                        break
                    }
            }
            var h;
            if (g)
                for (m = 0, a = g.length; m < a && (h = g[m], h.face["font-weight"] != d || h.face["font-style"] != e && h.face["font-style"] || h.face["font-stretch"] != f); m++);
            return h
        }
    };
    D.print = function(a, d, e, f, g, m, h, l) {
        m = m || "middle";
        h = O(W(h || 0, 1), -1);
        l = O(W(l || 1, 3), 1);
        e = Q(e)[V]("");
        var k = 0,
            n = 0,
            p = "";
        b.is(f, "string") && (f = this.getFont(f));
        if (f) {
            g = (g || 16) / f.face["units-per-em"];
            var t = f.face.bbox[V](F),
                u = +t[0],
                w = t[3] - t[1],
                s = 0;
            m = +t[1] + ("baseline" == m ? w + +f.face.descent : w / 2);
            for (var t = 0, D = e.length; t < D; t++) {
                if ("\n" == e[t]) n = q = k = 0, s += w * l;
                else var v = n && f.glyphs[e[t - 1]] || {},
                    q = f.glyphs[e[t]],
                    k = k + (n ? (v.w || f.w) + (v.k && v.k[e[t]] || 0) + f.w * h : 0),
                    n = 1;
                q && q.d && (p += b.transformPath(q.d, ["t", k * g, s * g, "s", g, g, u, m, "t", (a - u) / g, (d - m) / g]))
            }
        }
        return this.path(p).attr({
            fill: "#000",
            stroke: "none"
        })
    };
    D.add = function(a) {
        if (b.is(a, "array"))
            for (var d = this.set(), e = 0, f = a.length, g; e < f; e++) g = a[e] || {}, G[B](g.type) &&
                d.push(this[g.type]().attr(g));
        return d
    };
    b.format = function(a, d) {
        var e = b.is(d, M) ? [0][J](d) : arguments;
        a && b.is(a, "string") && e.length - 1 && (a = a.replace(A, function(b, a) {
            return null == e[++a] ? "" : e[a]
        }));
        return a || ""
    };
    b.fullfill = function() {
        var b = /\{([^\}]+)\}/g,
            a = /(?:(?:^|\.)(.+?)(?=\[|\.|$|\()|\[('|")(.+?)\2\])(\(\))?/g,
            d = function(b, d, e) {
                var f = e;
                d.replace(a, function(b, a, d, e, g) {
                    a = a || e;
                    f && (a in f && (f = f[a]), "function" == typeof f && g && (f = f()))
                });
                return f = (null == f || f == e ? b : f) + ""
            };
        return function(a, e) {
            return String(a).replace(b,
                function(b, a) {
                    return d(b, a, e)
                })
        }
    }();
    b.ninja = function() {
        u ? C.win.Raphael = w : delete Raphael;
        return b
    };
    b.st = ja;
    d.on("raphael.DOMload", function() {
        E = !0
    });
    (function(a, d, e) {
        function f() {
            /in/.test(a.readyState) ? setTimeout(f, 9) : b.eve("raphael.DOMload")
        }
        null == a.readyState && a.addEventListener && (a.addEventListener(d, e = function() {
            a.removeEventListener(d, e, !1);
            a.readyState = "complete"
        }, !1), a.readyState = "loading");
        f()
    })(document, "DOMContentLoaded");
    (function() {
        if (b.svg) {
            var a = String,
                d = parseFloat,
                e = parseInt,
                f = Math,
                g = f.max,
                m = f.abs,
                h = f.pow,
                l = /[, ]+/,
                k = b.eve,
                n = {
                    block: "M5,0 0,2.5 5,5z",
                    classic: "M5,0 0,2.5 5,5 3.5,3 3.5,2z",
                    diamond: "M2.5,0 5,2.5 2.5,5 0,2.5z",
                    open: "M6,1 1,3.5 6,6",
                    oval: "M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z"
                },
                p = {};
            b.toString = function() {
                return "Your browser supports SVG.\nYou are running Rapha\u00ebl " + this.version
            };
            var t = function(d, e) {
                    if (e) {
                        "string" == typeof d && (d = t(d));
                        for (var f in e) e.hasOwnProperty(f) && ("xlink:" == f.substring(0, 6) ? d.setAttributeNS("http://www.w3.org/1999/xlink", f.substring(6),
                            a(e[f])) : d.setAttribute(f, a(e[f])))
                    } else d = b._g.doc.createElementNS("http://www.w3.org/2000/svg", d), d.style && (d.style.webkitTapHighlightColor = "rgba(0,0,0,0)");
                    return d
                },
                u = function(e, l) {
                    var k = "linear",
                        n = e.id + l,
                        p = 0.5,
                        u = 0.5,
                        w = e.node,
                        s = e.paper,
                        D = w.style,
                        v = b._g.doc.getElementById(n);
                    if (!v) {
                        l = a(l).replace(b._radial_gradient, function(b, a, e) {
                            k = "radial";
                            a && e && (p = d(a), u = d(e), b = 2 * (0.5 < u) - 1, 0.25 < h(p - 0.5, 2) + h(u - 0.5, 2) && (u = f.sqrt(0.25 - h(p - 0.5, 2)) * b + 0.5) && 0.5 != u && (u = u.toFixed(5) - 1E-5 * b));
                            return ""
                        });
                        l = l.split(/\s*\-\s*/);
                        if ("linear" == k) {
                            v = l.shift();
                            v = -d(v);
                            if (isNaN(v)) return null;
                            var q = [0, 0, f.cos(b.rad(v)), f.sin(b.rad(v))],
                                v = 1 / (g(m(q[2]), m(q[3])) || 1);
                            q[2] *= v;
                            q[3] *= v;
                            0 > q[2] && (q[0] = -q[2], q[2] = 0);
                            0 > q[3] && (q[1] = -q[3], q[3] = 0)
                        }
                        var H = b._parseDots(l);
                        if (!H) return null;
                        n = n.replace(/[\(\)\s,\xb0#]/g, "_");
                        e.gradient && n != e.gradient.id && (s.defs.removeChild(e.gradient), delete e.gradient);
                        if (!e.gradient)
                            for (v = t(k + "Gradient", {
                                    id: n
                                }), e.gradient = v, t(v, "radial" == k ? {
                                    fx: p,
                                    fy: u
                                } : {
                                    x1: q[0],
                                    y1: q[1],
                                    x2: q[2],
                                    y2: q[3],
                                    gradientTransform: e.matrix.invert()
                                }),
                                s.defs.appendChild(v), s = 0, q = H.length; s < q; s++) v.appendChild(t("stop", {
                                offset: H[s].offset ? H[s].offset : s ? "100%" : "0%",
                                "stop-color": H[s].color || "#fff"
                            }))
                    }
                    t(w, {
                        fill: "url('" + document.location + "#" + n + "')",
                        opacity: 1,
                        "fill-opacity": 1
                    });
                    D.fill = "";
                    D.opacity = 1;
                    return D.fillOpacity = 1
                },
                w = function(b) {
                    var a = b.getBBox(1);
                    t(b.pattern, {
                        patternTransform: b.matrix.invert() + " translate(" + a.x + "," + a.y + ")"
                    })
                },
                s = function(d, e, f) {
                    if ("path" == d.type) {
                        for (var g = a(e).toLowerCase().split("-"), m = d.paper, h = f ? "end" : "start", l = d.node, k =
                                d.attrs, u = k["stroke-width"], w = g.length, s = "classic", D, v, q = 3, H = 3, A = 5; w--;) switch (g[w]) {
                            case "block":
                            case "classic":
                            case "oval":
                            case "diamond":
                            case "open":
                            case "none":
                                s = g[w];
                                break;
                            case "wide":
                                H = 5;
                                break;
                            case "narrow":
                                H = 2;
                                break;
                            case "long":
                                q = 5;
                                break;
                            case "short":
                                q = 2
                        }
                        "open" == s ? (q += 2, H += 2, A += 2, D = 1, v = f ? 4 : 1, g = {
                            fill: "none",
                            stroke: k.stroke
                        }) : (v = D = q / 2, g = {
                            fill: k.stroke,
                            stroke: "none"
                        });
                        d._.arrows ? f ? (d._.arrows.endPath && p[d._.arrows.endPath]--, d._.arrows.endMarker && p[d._.arrows.endMarker]--) : (d._.arrows.startPath &&
                            p[d._.arrows.startPath]--, d._.arrows.startMarker && p[d._.arrows.startMarker]--) : d._.arrows = {};
                        if ("none" != s) {
                            var w = "raphael-marker-" + s,
                                C = "raphael-marker-" + h + s + q + H + "-obj" + d.id;
                            b._g.doc.getElementById(w) ? p[w]++ : (m.defs.appendChild(t(t("path"), {
                                "stroke-linecap": "round",
                                d: n[s],
                                id: w
                            })), p[w] = 1);
                            var z = b._g.doc.getElementById(C);
                            z ? (p[C]++, q = z.getElementsByTagName("use")[0]) : (z = t(t("marker"), {
                                id: C,
                                markerHeight: H,
                                markerWidth: q,
                                orient: "auto",
                                refX: v,
                                refY: H / 2
                            }), q = t(t("use"), {
                                "xlink:href": "#" + w,
                                transform: (f ? "rotate(180 " +
                                    q / 2 + " " + H / 2 + ") " : "") + "scale(" + q / A + "," + H / A + ")",
                                "stroke-width": (1 / ((q / A + H / A) / 2)).toFixed(4)
                            }), z.appendChild(q), m.defs.appendChild(z), p[C] = 1);
                            t(q, g);
                            m = D * ("diamond" != s && "oval" != s);
                            f ? (f = d._.arrows.startdx * u || 0, u = b.getTotalLength(k.path) - m * u) : (f = m * u, u = b.getTotalLength(k.path) - (d._.arrows.enddx * u || 0));
                            g = {};
                            g["marker-" + h] = "url(#" + ("undefined" == C ? null : C) + ")";
                            if (u || f) g.d = b.getSubpath(k.path, f, u);
                            t(l, g);
                            d._.arrows[h + "Path"] = w;
                            d._.arrows[h + "Marker"] = C;
                            d._.arrows[h + "dx"] = m;
                            d._.arrows[h + "Type"] = s;
                            d._.arrows[h +
                                "String"] = e
                        } else f ? (f = d._.arrows.startdx * u || 0, u = b.getTotalLength(k.path) - f) : (f = 0, u = b.getTotalLength(k.path) - (d._.arrows.enddx * u || 0)), d._.arrows[h + "Path"] && t(l, {
                            d: b.getSubpath(k.path, f, u)
                        }), delete d._.arrows[h + "Path"], delete d._.arrows[h + "Marker"], delete d._.arrows[h + "dx"], delete d._.arrows[h + "Type"], delete d._.arrows[h + "String"];
                        for (g in p) p.hasOwnProperty(g) && !p[g] && (d = b._g.doc.getElementById(g)) && d.parentNode.removeChild(d)
                    }
                },
                D = {
                    "-": [3, 1],
                    ".": [1, 1],
                    "-.": [3, 1, 1, 1],
                    "-..": [3, 1, 1, 1, 1, 1],
                    ". ": [1, 3],
                    "- ": [4, 3],
                    "--": [8, 3],
                    "- .": [4, 3, 1, 3],
                    "--.": [8, 3, 1, 3],
                    "--..": [8, 3, 1, 3, 1, 3]
                },
                v = function(b, d, e) {
                    if (d = D[a(d).toLowerCase()]) {
                        var f = b.attrs["stroke-width"] || "1";
                        e = {
                            round: f,
                            square: f,
                            butt: 0
                        }[b.attrs["stroke-linecap"] || e["stroke-linecap"]] || 0;
                        for (var g = [], m = d.length; m--;) g[m] = d[m] * f + (m % 2 ? 1 : -1) * e;
                        t(b.node, {
                            "stroke-dasharray": g.join(",")
                        })
                    } else t(b.node, {
                        "stroke-dasharray": "none"
                    })
                },
                q = function(d, f) {
                    var h = d.node,
                        k = d.attrs,
                        n = h.style.visibility;
                    h.style.visibility = "hidden";
                    for (var p in f)
                        if (f.hasOwnProperty(p) &&
                            b._availableAttrs.hasOwnProperty(p)) {
                            var D = f[p];
                            k[p] = D;
                            switch (p) {
                                case "blur":
                                    d.blur(D);
                                    break;
                                case "title":
                                    var q = h.getElementsByTagName("title");
                                    q.length && (q = q[0]) ? q.firstChild.nodeValue = D : (q = t("title"), D = b._g.doc.createTextNode(D), q.appendChild(D), h.appendChild(q));
                                    break;
                                case "href":
                                case "target":
                                    q = h.parentNode;
                                    if ("a" != q.tagName.toLowerCase()) {
                                        var H = t("a");
                                        q.insertBefore(H, h);
                                        H.appendChild(h);
                                        q = H
                                    }
                                    "target" == p ? q.setAttributeNS("http://www.w3.org/1999/xlink", "show", "blank" == D ? "new" : D) : q.setAttributeNS("http://www.w3.org/1999/xlink",
                                        p, D);
                                    break;
                                case "cursor":
                                    h.style.cursor = D;
                                    break;
                                case "transform":
                                    d.transform(D);
                                    break;
                                case "arrow-start":
                                    s(d, D);
                                    break;
                                case "arrow-end":
                                    s(d, D, 1);
                                    break;
                                case "clip-rect":
                                    q = a(D).split(l);
                                    if (4 == q.length) {
                                        d.clip && d.clip.parentNode.parentNode.removeChild(d.clip.parentNode);
                                        var H = t("clipPath"),
                                            C = t("rect");
                                        H.id = b.createUUID();
                                        t(C, {
                                            x: q[0],
                                            y: q[1],
                                            width: q[2],
                                            height: q[3]
                                        });
                                        H.appendChild(C);
                                        d.paper.defs.appendChild(H);
                                        t(h, {
                                            "clip-path": "url(#" + H.id + ")"
                                        });
                                        d.clip = C
                                    }!D && (D = h.getAttribute("clip-path")) && ((D = b._g.doc.getElementById(D.replace(/(^url\(#|\)$)/g,
                                        ""))) && D.parentNode.removeChild(D), t(h, {
                                        "clip-path": ""
                                    }), delete d.clip);
                                    break;
                                case "path":
                                    "path" == d.type && (t(h, {
                                        d: D ? k.path = b._pathToAbsolute(D) : "M0,0"
                                    }), d._.dirty = 1, d._.arrows && ("startString" in d._.arrows && s(d, d._.arrows.startString), "endString" in d._.arrows && s(d, d._.arrows.endString, 1)));
                                    break;
                                case "width":
                                    if (h.setAttribute(p, D), d._.dirty = 1, k.fx) p = "x", D = k.x;
                                    else break;
                                case "x":
                                    k.fx && (D = -k.x - (k.width || 0));
                                case "rx":
                                    if ("rx" == p && "rect" == d.type) break;
                                case "cx":
                                    h.setAttribute(p, D);
                                    d.pattern && w(d);
                                    d._.dirty =
                                        1;
                                    break;
                                case "height":
                                    if (h.setAttribute(p, D), d._.dirty = 1, k.fy) p = "y", D = k.y;
                                    else break;
                                case "y":
                                    k.fy && (D = -k.y - (k.height || 0));
                                case "ry":
                                    if ("ry" == p && "rect" == d.type) break;
                                case "cy":
                                    h.setAttribute(p, D);
                                    d.pattern && w(d);
                                    d._.dirty = 1;
                                    break;
                                case "r":
                                    "rect" == d.type ? t(h, {
                                        rx: D,
                                        ry: D
                                    }) : h.setAttribute(p, D);
                                    d._.dirty = 1;
                                    break;
                                case "src":
                                    "image" == d.type && h.setAttributeNS("http://www.w3.org/1999/xlink", "href", D);
                                    break;
                                case "stroke-width":
                                    if (1 != d._.sx || 1 != d._.sy) D /= g(m(d._.sx), m(d._.sy)) || 1;
                                    h.setAttribute(p, D);
                                    k["stroke-dasharray"] &&
                                        v(d, k["stroke-dasharray"], f);
                                    d._.arrows && ("startString" in d._.arrows && s(d, d._.arrows.startString), "endString" in d._.arrows && s(d, d._.arrows.endString, 1));
                                    break;
                                case "stroke-dasharray":
                                    v(d, D, f);
                                    break;
                                case "fill":
                                    var z = a(D).match(b._ISURL);
                                    if (z) {
                                        var H = t("pattern"),
                                            F = t("image");
                                        H.id = b.createUUID();
                                        t(H, {
                                            x: 0,
                                            y: 0,
                                            patternUnits: "userSpaceOnUse",
                                            height: 1,
                                            width: 1
                                        });
                                        t(F, {
                                            x: 0,
                                            y: 0,
                                            "xlink:href": z[1]
                                        });
                                        H.appendChild(F);
                                        (function(a) {
                                            b._preload(z[1], function() {
                                                var b = this.offsetWidth,
                                                    d = this.offsetHeight;
                                                t(a, {
                                                    width: b,
                                                    height: d
                                                });
                                                t(F, {
                                                    width: b,
                                                    height: d
                                                })
                                            })
                                        })(H);
                                        d.paper.defs.appendChild(H);
                                        t(h, {
                                            fill: "url(#" + H.id + ")"
                                        });
                                        d.pattern = H;
                                        d.pattern && w(d);
                                        break
                                    }
                                    q = b.getRGB(D);
                                    if (!q.error) delete f.gradient, delete k.gradient, !b.is(k.opacity, "undefined") && b.is(f.opacity, "undefined") && t(h, {
                                        opacity: k.opacity
                                    }), !b.is(k["fill-opacity"], "undefined") && b.is(f["fill-opacity"], "undefined") && t(h, {
                                        "fill-opacity": k["fill-opacity"]
                                    });
                                    else if (("circle" == d.type || "ellipse" == d.type || "r" != a(D).charAt()) && u(d, D)) {
                                        if ("opacity" in k || "fill-opacity" in
                                            k)
                                            if (q = b._g.doc.getElementById(h.getAttribute("fill").replace(/^url\(#|\)$/g, ""))) q = q.getElementsByTagName("stop"), t(q[q.length - 1], {
                                                "stop-opacity": ("opacity" in k ? k.opacity : 1) * ("fill-opacity" in k ? k["fill-opacity"] : 1)
                                            });
                                        k.gradient = D;
                                        k.fill = "none";
                                        break
                                    }
                                    q.hasOwnProperty("opacity") && t(h, {
                                        "fill-opacity": 1 < q.opacity ? q.opacity / 100 : q.opacity
                                    });
                                case "stroke":
                                    q = b.getRGB(D);
                                    h.setAttribute(p, q.hex);
                                    "stroke" == p && q.hasOwnProperty("opacity") && t(h, {
                                        "stroke-opacity": 1 < q.opacity ? q.opacity / 100 : q.opacity
                                    });
                                    "stroke" ==
                                    p && d._.arrows && ("startString" in d._.arrows && s(d, d._.arrows.startString), "endString" in d._.arrows && s(d, d._.arrows.endString, 1));
                                    break;
                                case "gradient":
                                    "circle" != d.type && "ellipse" != d.type && "r" == a(D).charAt() || u(d, D);
                                    break;
                                case "opacity":
                                    k.gradient && !k.hasOwnProperty("stroke-opacity") && t(h, {
                                        "stroke-opacity": 1 < D ? D / 100 : D
                                    });
                                case "fill-opacity":
                                    if (k.gradient) {
                                        if (q = b._g.doc.getElementById(h.getAttribute("fill").replace(/^url\(#|\)$/g, ""))) q = q.getElementsByTagName("stop"), t(q[q.length - 1], {
                                            "stop-opacity": D
                                        });
                                        break
                                    }
                                default:
                                    "font-size" == p && (D = e(D, 10) + "px"), q = p.replace(/(\-.)/g, function(b) {
                                        return b.substring(1).toUpperCase()
                                    }), h.style[q] = D, d._.dirty = 1, h.setAttribute(p, D)
                            }
                        }
                    A(d, f);
                    h.style.visibility = n
                },
                A = function(d, f) {
                    if ("text" == d.type && (f.hasOwnProperty("text") || f.hasOwnProperty("font") || f.hasOwnProperty("font-size") || f.hasOwnProperty("x") || f.hasOwnProperty("y"))) {
                        var g = d.attrs,
                            m = d.node,
                            h = m.firstChild ? e(b._g.doc.defaultView.getComputedStyle(m.firstChild, "").getPropertyValue("font-size"), 10) : 10;
                        if (f.hasOwnProperty("text")) {
                            for (g.text =
                                f.text; m.firstChild;) m.removeChild(m.firstChild);
                            for (var l = a(f.text).split("\n"), k = [], n, p = 0, u = l.length; p < u; p++) n = t("tspan"), p && t(n, {
                                dy: 1.2 * h,
                                x: g.x
                            }), n.appendChild(b._g.doc.createTextNode(l[p])), m.appendChild(n), k[p] = n
                        } else
                            for (k = m.getElementsByTagName("tspan"), p = 0, u = k.length; p < u; p++) p ? t(k[p], {
                                dy: 1.2 * h,
                                x: g.x
                            }) : t(k[0], {
                                dy: 0
                            });
                        t(m, {
                            x: g.x,
                            y: g.y
                        });
                        d._.dirty = 1;
                        m = d._getBBox();
                        (g = g.y - (m.y + m.height / 2)) && b.is(g, "finite") && t(k[0], {
                            dy: g
                        })
                    }
                },
                H = function(b) {
                    return b.parentNode && "a" === b.parentNode.tagName.toLowerCase() ?
                        b.parentNode : b
                },
                z = function(a, d) {
                    this[0] = this.node = a;
                    a.raphael = !0;
                    this.id = b._oid++;
                    a.raphaelid = this.id;
                    this.matrix = b.matrix();
                    this.realPath = null;
                    this.paper = d;
                    this.attrs = this.attrs || {};
                    this._ = {
                        transform: [],
                        sx: 1,
                        sy: 1,
                        deg: 0,
                        dx: 0,
                        dy: 0,
                        dirty: 1
                    };
                    !d.bottom && (d.bottom = this);
                    (this.prev = d.top) && (d.top.next = this);
                    d.top = this;
                    this.next = null
                },
                C = b.el;
            z.prototype = C;
            C.constructor = z;
            b._engine.path = function(b, a) {
                var d = t("path");
                a.canvas && a.canvas.appendChild(d);
                d = new z(d, a);
                d.type = "path";
                q(d, {
                    fill: "none",
                    stroke: "#000",
                    path: b
                });
                return d
            };
            C.rotate = function(b, e, f) {
                if (this.removed) return this;
                b = a(b).split(l);
                b.length - 1 && (e = d(b[1]), f = d(b[2]));
                b = d(b[0]);
                null == f && (e = f);
                if (null == e || null == f) f = this.getBBox(1), e = f.x + f.width / 2, f = f.y + f.height / 2;
                this.transform(this._.transform.concat([
                    ["r", b, e, f]
                ]));
                return this
            };
            C.scale = function(b, e, f, g) {
                if (this.removed) return this;
                b = a(b).split(l);
                b.length - 1 && (e = d(b[1]), f = d(b[2]), g = d(b[3]));
                b = d(b[0]);
                null == e && (e = b);
                null == g && (f = g);
                if (null == f || null == g) var m = this.getBBox(1);
                f = null == f ? m.x + m.width /
                    2 : f;
                g = null == g ? m.y + m.height / 2 : g;
                this.transform(this._.transform.concat([
                    ["s", b, e, f, g]
                ]));
                return this
            };
            C.translate = function(b, e) {
                if (this.removed) return this;
                b = a(b).split(l);
                b.length - 1 && (e = d(b[1]));
                b = d(b[0]) || 0;
                this.transform(this._.transform.concat([
                    ["t", b, +e || 0]
                ]));
                return this
            };
            C.transform = function(a) {
                var d = this._;
                if (null == a) return d.transform;
                b._extractTransform(this, a);
                this.clip && t(this.clip, {
                    transform: this.matrix.invert()
                });
                this.pattern && w(this);
                this.node && t(this.node, {
                    transform: this.matrix
                });
                if (1 !=
                    d.sx || 1 != d.sy) a = this.attrs.hasOwnProperty("stroke-width") ? this.attrs["stroke-width"] : 1, this.attr({
                    "stroke-width": a
                });
                return this
            };
            C.hide = function() {
                this.removed || (this.node.style.display = "none");
                return this
            };
            C.show = function() {
                this.removed || (this.node.style.display = "");
                return this
            };
            C.remove = function() {
                var a = H(this.node);
                if (!this.removed && a.parentNode) {
                    var d = this.paper;
                    d.__set__ && d.__set__.exclude(this);
                    k.unbind("raphael.*.*." + this.id);
                    this.gradient && d.defs.removeChild(this.gradient);
                    b._tear(this, d);
                    a.parentNode.removeChild(a);
                    this.removeData();
                    for (var e in this) this[e] = "function" == typeof this[e] ? b._removedFactory(e) : null;
                    this.removed = !0
                }
            };
            C._getBBox = function() {
                if ("none" == this.node.style.display) {
                    this.show();
                    var b = !0
                }
                var a = !1,
                    d;
                this.paper.canvas.parentElement ? d = this.paper.canvas.parentElement.style : this.paper.canvas.parentNode && (d = this.paper.canvas.parentNode.style);
                d && "none" == d.display && (a = !0, d.display = "");
                var e = {};
                try {
                    e = this.node.getBBox()
                } catch (f) {
                    e = {
                        x: this.node.clientLeft,
                        y: this.node.clientTop,
                        width: this.node.clientWidth,
                        height: this.node.clientHeight
                    }
                } finally {
                    e = e || {}, a && (d.display = "none")
                }
                b && this.hide();
                return e
            };
            C.attr = function(a, d) {
                if (this.removed) return this;
                if (null == a) {
                    var e = {},
                        f;
                    for (f in this.attrs) this.attrs.hasOwnProperty(f) && (e[f] = this.attrs[f]);
                    e.gradient && "none" == e.fill && (e.fill = e.gradient) && delete e.gradient;
                    e.transform = this._.transform;
                    return e
                }
                if (null == d && b.is(a, "string")) {
                    if ("fill" == a && "none" == this.attrs.fill && this.attrs.gradient) return this.attrs.gradient;
                    if ("transform" ==
                        a) return this._.transform;
                    f = a.split(l);
                    for (var e = {}, g = 0, m = f.length; g < m; g++) a = f[g], a in this.attrs ? e[a] = this.attrs[a] : b.is(this.paper.customAttributes[a], "function") ? e[a] = this.paper.customAttributes[a].def : e[a] = b._availableAttrs[a];
                    return m - 1 ? e : e[f[0]]
                }
                if (null == d && b.is(a, "array")) {
                    e = {};
                    g = 0;
                    for (m = a.length; g < m; g++) e[a[g]] = this.attr(a[g]);
                    return e
                }
                null != d ? (e = {}, e[a] = d) : null != a && b.is(a, "object") && (e = a);
                for (g in e) k("raphael.attr." + g + "." + this.id, this, e[g]);
                for (g in this.paper.customAttributes)
                    if (this.paper.customAttributes.hasOwnProperty(g) &&
                        e.hasOwnProperty(g) && b.is(this.paper.customAttributes[g], "function"))
                        for (m in f = this.paper.customAttributes[g].apply(this, [].concat(e[g])), this.attrs[g] = e[g], f) f.hasOwnProperty(m) && (e[m] = f[m]);
                q(this, e);
                return this
            };
            C.toFront = function() {
                if (this.removed) return this;
                var a = H(this.node);
                a.parentNode.appendChild(a);
                a = this.paper;
                a.top != this && b._tofront(this, a);
                return this
            };
            C.toBack = function() {
                if (this.removed) return this;
                var a = H(this.node),
                    d = a.parentNode;
                d.insertBefore(a, d.firstChild);
                b._toback(this, this.paper);
                return this
            };
            C.insertAfter = function(a) {
                if (this.removed || !a) return this;
                var d = H(this.node),
                    e = H(a.node || a[a.length - 1].node);
                e.nextSibling ? e.parentNode.insertBefore(d, e.nextSibling) : e.parentNode.appendChild(d);
                b._insertafter(this, a, this.paper);
                return this
            };
            C.insertBefore = function(a) {
                if (this.removed || !a) return this;
                var d = H(this.node),
                    e = H(a.node || a[0].node);
                e.parentNode.insertBefore(d, e);
                b._insertbefore(this, a, this.paper);
                return this
            };
            C.blur = function(a) {
                if (0 !== +a) {
                    var d = t("filter"),
                        e = t("feGaussianBlur");
                    this.attrs.blur = a;
                    d.id = b.createUUID();
                    t(e, {
                        stdDeviation: +a || 1.5
                    });
                    d.appendChild(e);
                    this.paper.defs.appendChild(d);
                    this._blur = d;
                    t(this.node, {
                        filter: "url(#" + d.id + ")"
                    })
                } else this._blur && (this._blur.parentNode.removeChild(this._blur), delete this._blur, delete this.attrs.blur), this.node.removeAttribute("filter");
                return this
            };
            b._engine.circle = function(b, a, d, e) {
                var f = t("circle");
                b.canvas && b.canvas.appendChild(f);
                b = new z(f, b);
                b.attrs = {
                    cx: a,
                    cy: d,
                    r: e,
                    fill: "none",
                    stroke: "#000"
                };
                b.type = "circle";
                t(f, b.attrs);
                return b
            };
            b._engine.rect = function(b, a, d, e, f, g) {
                var m = t("rect");
                b.canvas && b.canvas.appendChild(m);
                b = new z(m, b);
                b.attrs = {
                    x: a,
                    y: d,
                    width: e,
                    height: f,
                    rx: g || 0,
                    ry: g || 0,
                    fill: "none",
                    stroke: "#000"
                };
                b.type = "rect";
                t(m, b.attrs);
                return b
            };
            b._engine.ellipse = function(b, a, d, e, f) {
                var g = t("ellipse");
                b.canvas && b.canvas.appendChild(g);
                b = new z(g, b);
                b.attrs = {
                    cx: a,
                    cy: d,
                    rx: e,
                    ry: f,
                    fill: "none",
                    stroke: "#000"
                };
                b.type = "ellipse";
                t(g, b.attrs);
                return b
            };
            b._engine.image = function(b, a, d, e, f, g) {
                var m = t("image");
                t(m, {
                    x: d,
                    y: e,
                    width: f,
                    height: g,
                    preserveAspectRatio: "none"
                });
                m.setAttributeNS("http://www.w3.org/1999/xlink", "href", a);
                b.canvas && b.canvas.appendChild(m);
                b = new z(m, b);
                b.attrs = {
                    x: d,
                    y: e,
                    width: f,
                    height: g,
                    src: a
                };
                b.type = "image";
                return b
            };
            b._engine.text = function(a, d, e, f) {
                var g = t("text");
                a.canvas && a.canvas.appendChild(g);
                a = new z(g, a);
                a.attrs = {
                    x: d,
                    y: e,
                    "text-anchor": "middle",
                    text: f,
                    "font-family": b._availableAttrs["font-family"],
                    "font-size": b._availableAttrs["font-size"],
                    stroke: "none",
                    fill: "#000"
                };
                a.type = "text";
                q(a, a.attrs);
                return a
            };
            b._engine.setSize = function(b, a) {
                this.width =
                    b || this.width;
                this.height = a || this.height;
                this.canvas.setAttribute("width", this.width);
                this.canvas.setAttribute("height", this.height);
                this._viewBox && this.setViewBox.apply(this, this._viewBox);
                return this
            };
            b._engine.create = function() {
                var a = b._getContainer.apply(0, arguments),
                    d = a && a.container,
                    e = a.x,
                    f = a.y,
                    g = a.width,
                    a = a.height;
                if (!d) throw Error("SVG container not found.");
                var m = t("svg"),
                    h, e = e || 0,
                    f = f || 0,
                    g = g || 512,
                    a = a || 342;
                t(m, {
                    height: a,
                    version: 1.1,
                    width: g,
                    xmlns: "http://www.w3.org/2000/svg",
                    "xmlns:xlink": "http://www.w3.org/1999/xlink"
                });
                1 == d ? (m.style.cssText = "overflow:hidden;position:absolute;left:" + e + "px;top:" + f + "px", b._g.doc.body.appendChild(m), h = 1) : (m.style.cssText = "overflow:hidden;position:relative", d.firstChild ? d.insertBefore(m, d.firstChild) : d.appendChild(m));
                d = new b._Paper;
                d.width = g;
                d.height = a;
                d.canvas = m;
                d.clear();
                d._left = d._top = 0;
                h && (d.renderfix = function() {});
                d.renderfix();
                return d
            };
            b._engine.setViewBox = function(b, a, d, e, f) {
                k("raphael.setViewBox", this, this._viewBox, [b, a, d, e, f]);
                var m = this.getSize(),
                    m = g(d / m.width, e / m.height),
                    h = this.top,
                    l = f ? "xMidYMid meet" : "xMinYMin",
                    n;
                null == b ? (this._vbSize && (m = 1), delete this._vbSize, n = "0 0 " + this.width + " " + this.height) : (this._vbSize = m, n = b + " " + a + " " + d + " " + e);
                for (t(this.canvas, {
                        viewBox: n,
                        preserveAspectRatio: l
                    }); m && h;) l = "stroke-width" in h.attrs ? h.attrs["stroke-width"] : 1, h.attr({
                    "stroke-width": l
                }), h._.dirty = 1, h._.dirtyT = 1, h = h.prev;
                this._viewBox = [b, a, d, e, !!f];
                return this
            };
            b.prototype.renderfix = function() {
                var b = this.canvas,
                    a = b.style,
                    d;
                try {
                    d = b.getScreenCTM() || b.createSVGMatrix()
                } catch (e) {
                    d =
                        b.createSVGMatrix()
                }
                b = -d.e % 1;
                d = -d.f % 1;
                if (b || d) b && (this._left = (this._left + b) % 1, a.left = this._left + "px"), d && (this._top = (this._top + d) % 1, a.top = this._top + "px")
            };
            b.prototype.clear = function() {
                b.eve("raphael.clear", this);
                for (var a = this.canvas; a.firstChild;) a.removeChild(a.firstChild);
                this.bottom = this.top = null;
                (this.desc = t("desc")).appendChild(b._g.doc.createTextNode("Created with Rapha\u00ebl " + b.version));
                a.appendChild(this.desc);
                a.appendChild(this.defs = t("defs"))
            };
            b.prototype.remove = function() {
                k("raphael.remove",
                    this);
                this.canvas.parentNode && this.canvas.parentNode.removeChild(this.canvas);
                for (var a in this) this[a] = "function" == typeof this[a] ? b._removedFactory(a) : null
            };
            var F = b.st,
                B;
            for (B in C) C.hasOwnProperty(B) && !F.hasOwnProperty(B) && (F[B] = function(b) {
                return function() {
                    var a = arguments;
                    return this.forEach(function(d) {
                        d[b].apply(d, a)
                    })
                }
            }(B))
        }
    })();
    (function() {
        if (b.vml) {
            var a = String,
                d = parseFloat,
                e = Math,
                f = e.round,
                g = e.max,
                m = e.min,
                h = e.abs,
                l = /[, ]+/,
                k = b.eve,
                n = {
                    M: "m",
                    L: "l",
                    C: "c",
                    Z: "x",
                    m: "t",
                    l: "r",
                    c: "v",
                    z: "x"
                },
                p = /([clmz]),?([^clmz]*)/gi,
                t = / progid:\S+Blur\([^\)]+\)/g,
                u = /-?[^,\s-]+/g,
                w = {
                    path: 1,
                    rect: 1,
                    image: 1
                },
                s = {
                    circle: 1,
                    ellipse: 1
                },
                D = function(d) {
                    var e = /[ahqstv]/ig,
                        g = b._pathToAbsolute;
                    a(d).match(e) && (g = b._path2curve);
                    e = /[clmz]/g;
                    if (g == b._pathToAbsolute && !a(d).match(e)) return d = a(d).replace(p, function(a, b, d) {
                        var e = [],
                            g = "m" == b.toLowerCase(),
                            m = n[b];
                        d.replace(u, function(a) {
                            g && 2 == e.length && (m += e + n["m" == b ? "l" : "L"], e = []);
                            e.push(f(21600 * a))
                        });
                        return m + e
                    });
                    var e = g(d),
                        m;
                    d = [];
                    for (var h = 0, l = e.length; h < l; h++) {
                        g = e[h];
                        m = e[h][0].toLowerCase();
                        "z" ==
                        m && (m = "x");
                        for (var k = 1, t = g.length; k < t; k++) m += f(21600 * g[k]) + (k != t - 1 ? "," : "");
                        d.push(m)
                    }
                    return d.join(" ")
                },
                q = function(a, d, e) {
                    var f = b.matrix();
                    f.rotate(-a, 0.5, 0.5);
                    return {
                        dx: f.x(d, e),
                        dy: f.y(d, e)
                    }
                },
                v = function(a, b, d, e, f, g) {
                    var m = a._,
                        l = a.matrix,
                        k = m.fillpos;
                    a = a.node;
                    var n = a.style,
                        p = 1,
                        t = "",
                        u = 21600 / b,
                        w = 21600 / d;
                    n.visibility = "hidden";
                    if (b && d) {
                        a.coordsize = h(u) + " " + h(w);
                        n.rotation = g * (0 > b * d ? -1 : 1);
                        g && (f = q(g, e, f), e = f.dx, f = f.dy);
                        0 > b && (t += "x");
                        0 > d && (t += " y") && (p = -1);
                        n.flip = t;
                        a.coordorigin = e * -u + " " + f * -w;
                        if (k || m.fillsize) e =
                            (e = a.getElementsByTagName("fill")) && e[0], a.removeChild(e), k && (f = q(g, l.x(k[0], k[1]), l.y(k[0], k[1])), e.position = f.dx * p + " " + f.dy * p), m.fillsize && (e.size = m.fillsize[0] * h(b) + " " + m.fillsize[1] * h(d)), a.appendChild(e);
                        n.visibility = "visible"
                    }
                };
            b.toString = function() {
                return "Your browser doesn\u2019t support SVG. Falling down to VML.\nYou are running Rapha\u00ebl " + this.version
            };
            var H = function(b, d, e) {
                    d = a(d).toLowerCase().split("-");
                    e = e ? "end" : "start";
                    for (var f = d.length, g = "classic", m = "medium", h = "medium"; f--;) switch (d[f]) {
                        case "block":
                        case "classic":
                        case "oval":
                        case "diamond":
                        case "open":
                        case "none":
                            g =
                                d[f];
                            break;
                        case "wide":
                        case "narrow":
                            h = d[f];
                            break;
                        case "long":
                        case "short":
                            m = d[f]
                    }
                    b = b.node.getElementsByTagName("stroke")[0];
                    b[e + "arrow"] = g;
                    b[e + "arrowlength"] = m;
                    b[e + "arrowwidth"] = h
                },
                A = function(e, h) {
                    e.attrs = e.attrs || {};
                    var k = e.node,
                        n = e.attrs,
                        p = k.style,
                        t = w[e.type] && (h.x != n.x || h.y != n.y || h.width != n.width || h.height != n.height || h.cx != n.cx || h.cy != n.cy || h.rx != n.rx || h.ry != n.ry || h.r != n.r),
                        u = s[e.type] && (n.cx != h.cx || n.cy != h.cy || n.r != h.r || n.rx != h.rx || n.ry != h.ry),
                        q;
                    for (q in h) h.hasOwnProperty(q) && (n[q] = h[q]);
                    t &&
                        (n.path = b._getPath[e.type](e), e._.dirty = 1);
                    h.href && (k.href = h.href);
                    h.title && (k.title = h.title);
                    h.target && (k.target = h.target);
                    h.cursor && (p.cursor = h.cursor);
                    "blur" in h && e.blur(h.blur);
                    if (h.path && "path" == e.type || t) k.path = D(~a(n.path).toLowerCase().indexOf("r") ? b._pathToAbsolute(n.path) : n.path), e._.dirty = 1, "image" == e.type && (e._.fillpos = [n.x, n.y], e._.fillsize = [n.width, n.height], v(e, 1, 1, 0, 0, 0));
                    "transform" in h && e.transform(h.transform);
                    u && (p = +n.cx, t = +n.cy, u = +n.rx || +n.r || 0, q = +n.ry || +n.r || 0, k.path = b.format("ar{0},{1},{2},{3},{4},{1},{4},{1}x",
                        f(21600 * (p - u)), f(21600 * (t - q)), f(21600 * (p + u)), f(21600 * (t + q)), f(21600 * p)), e._.dirty = 1);
                    "clip-rect" in h && (p = a(h["clip-rect"]).split(l), 4 == p.length && (p[2] = +p[2] + +p[0], p[3] = +p[3] + +p[1], t = k.clipRect || b._g.doc.createElement("div"), u = t.style, u.clip = b.format("rect({1}px {2}px {3}px {0}px)", p), k.clipRect || (u.position = "absolute", u.top = 0, u.left = 0, u.width = e.paper.width + "px", u.height = e.paper.height + "px", k.parentNode.insertBefore(t, k), t.appendChild(k), k.clipRect = t)), h["clip-rect"] || k.clipRect && (k.clipRect.style.clip =
                        "auto"));
                    e.textpath && (p = e.textpath.style, h.font && (p.font = h.font), h["font-family"] && (p.fontFamily = '"' + h["font-family"].split(",")[0].replace(/^['"]+|['"]+$/g, "") + '"'), h["font-size"] && (p.fontSize = h["font-size"]), h["font-weight"] && (p.fontWeight = h["font-weight"]), h["font-style"] && (p.fontStyle = h["font-style"]));
                    "arrow-start" in h && H(e, h["arrow-start"]);
                    "arrow-end" in h && H(e, h["arrow-end"], 1);
                    if (null != h.opacity || null != h["stroke-width"] || null != h.fill || null != h.src || null != h.stroke || null != h["stroke-width"] ||
                        null != h["stroke-opacity"] || null != h["fill-opacity"] || null != h["stroke-dasharray"] || null != h["stroke-miterlimit"] || null != h["stroke-linejoin"] || null != h["stroke-linecap"]) {
                        p = (p = k.getElementsByTagName("fill")) && p[0];
                        !p && (p = B("fill"));
                        "image" == e.type && h.src && (p.src = h.src);
                        h.fill && (p.on = !0);
                        if (null == p.on || "none" == h.fill || null === h.fill) p.on = !1;
                        p.on && h.fill && ((t = a(h.fill).match(b._ISURL)) ? (p.parentNode == k && k.removeChild(p), p.rotate = !0, p.src = t[1], p.type = "tile", u = e.getBBox(1), p.position = u.x + " " + u.y, e._.fillpos = [u.x, u.y], b._preload(t[1], function() {
                            e._.fillsize = [this.offsetWidth, this.offsetHeight]
                        })) : (p.color = b.getRGB(h.fill).hex, p.src = "", p.type = "solid", b.getRGB(h.fill).error && (e.type in {
                            circle: 1,
                            ellipse: 1
                        } || "r" != a(h.fill).charAt()) && C(e, h.fill, p) && (n.fill = "none", n.gradient = h.fill, p.rotate = !1)));
                        if ("fill-opacity" in h || "opacity" in h) u = ((+n["fill-opacity"] + 1 || 2) - 1) * ((+n.opacity + 1 || 2) - 1) * ((+b.getRGB(h.fill).o + 1 || 2) - 1), u = m(g(u, 0), 1), p.opacity = u, p.src && (p.color = "none");
                        k.appendChild(p);
                        p = k.getElementsByTagName("stroke") &&
                            k.getElementsByTagName("stroke")[0];
                        t = !1;
                        !p && (t = p = B("stroke"));
                        if (h.stroke && "none" != h.stroke || h["stroke-width"] || null != h["stroke-opacity"] || h["stroke-dasharray"] || h["stroke-miterlimit"] || h["stroke-linejoin"] || h["stroke-linecap"]) p.on = !0;
                        "none" != h.stroke && null !== h.stroke && null != p.on && 0 != h.stroke && 0 != h["stroke-width"] || (p.on = !1);
                        u = b.getRGB(h.stroke);
                        p.on && h.stroke && (p.color = u.hex);
                        u = ((+n["stroke-opacity"] + 1 || 2) - 1) * ((+n.opacity + 1 || 2) - 1) * ((+u.o + 1 || 2) - 1);
                        q = 0.75 * (d(h["stroke-width"]) || 1);
                        u = m(g(u, 0), 1);
                        null == h["stroke-width"] && (q = n["stroke-width"]);
                        h["stroke-width"] && (p.weight = q);
                        q && 1 > q && (u *= q) && (p.weight = 1);
                        p.opacity = u;
                        h["stroke-linejoin"] && (p.joinstyle = h["stroke-linejoin"] || "miter");
                        p.miterlimit = h["stroke-miterlimit"] || 8;
                        h["stroke-linecap"] && (p.endcap = "butt" == h["stroke-linecap"] ? "flat" : "square" == h["stroke-linecap"] ? "square" : "round");
                        "stroke-dasharray" in h && (u = {
                            "-": "shortdash",
                            ".": "shortdot",
                            "-.": "shortdashdot",
                            "-..": "shortdashdotdot",
                            ". ": "dot",
                            "- ": "dash",
                            "--": "longdash",
                            "- .": "dashdot",
                            "--.": "longdashdot",
                            "--..": "longdashdotdot"
                        }, p.dashstyle = u.hasOwnProperty(h["stroke-dasharray"]) ? u[h["stroke-dasharray"]] : "");
                        t && k.appendChild(p)
                    }
                    if ("text" == e.type) {
                        e.paper.canvas.style.display = "";
                        k = e.paper.span;
                        t = n.font && n.font.match(/\d+(?:\.\d*)?(?=px)/);
                        p = k.style;
                        n.font && (p.font = n.font);
                        n["font-family"] && (p.fontFamily = n["font-family"]);
                        n["font-weight"] && (p.fontWeight = n["font-weight"]);
                        n["font-style"] && (p.fontStyle = n["font-style"]);
                        t = d(n["font-size"] || t && t[0]) || 10;
                        p.fontSize = 100 * t + "px";
                        e.textpath.string && (k.innerHTML =
                            a(e.textpath.string).replace(/</g, "&#60;").replace(/&/g, "&#38;").replace(/\n/g, "<br>"));
                        k = k.getBoundingClientRect();
                        e.W = n.w = (k.right - k.left) / 100;
                        e.H = n.h = (k.bottom - k.top) / 100;
                        e.X = n.x;
                        e.Y = n.y + e.H / 2;
                        ("x" in h || "y" in h) && (e.path.v = b.format("m{0},{1}l{2},{1}", f(21600 * n.x), f(21600 * n.y), f(21600 * n.x) + 1));
                        k = "x y text font font-family font-weight font-style font-size".split(" ");
                        p = 0;
                        for (t = k.length; p < t; p++)
                            if (k[p] in h) {
                                e._.dirty = 1;
                                break
                            }
                        switch (n["text-anchor"]) {
                            case "start":
                                e.textpath.style["v-text-align"] = "left";
                                e.bbx = e.W / 2;
                                break;
                            case "end":
                                e.textpath.style["v-text-align"] = "right";
                                e.bbx = -e.W / 2;
                                break;
                            default:
                                e.textpath.style["v-text-align"] = "center", e.bbx = 0
                        }
                        e.textpath.style["v-text-kern"] = !0
                    }
                },
                C = function(f, g, h) {
                    f.attrs = f.attrs || {};
                    var m = Math.pow,
                        l = "linear",
                        k = ".5 .5";
                    f.attrs.gradient = g;
                    g = a(g).replace(b._radial_gradient, function(a, b, f) {
                        l = "radial";
                        b && f && (b = d(b), f = d(f), 0.25 < m(b - 0.5, 2) + m(f - 0.5, 2) && (f = e.sqrt(0.25 - m(b - 0.5, 2)) * (2 * (0.5 < f) - 1) + 0.5), k = b + " " + f);
                        return ""
                    });
                    g = g.split(/\s*\-\s*/);
                    if ("linear" == l) {
                        var n = g.shift(),
                            n = -d(n);
                        if (isNaN(n)) return null
                    }
                    g = b._parseDots(g);
                    if (!g) return null;
                    f = f.shape || f.node;
                    if (g.length) {
                        f.removeChild(h);
                        h.on = !0;
                        h.method = "none";
                        h.color = g[0].color;
                        h.color2 = g[g.length - 1].color;
                        for (var p = [], t = 0, u = g.length; t < u; t++) g[t].offset && p.push(g[t].offset + " " + g[t].color);
                        h.colors = p.length ? p.join() : "0% " + h.color;
                        "radial" == l ? (h.type = "gradientTitle", h.focus = "100%", h.focussize = "0 0", h.focusposition = k, h.angle = 0) : (h.type = "gradient", h.angle = (270 - n) % 360);
                        f.appendChild(h)
                    }
                    return 1
                },
                z = function(a, d) {
                    this[0] =
                        this.node = a;
                    a.raphael = !0;
                    this.id = b._oid++;
                    a.raphaelid = this.id;
                    this.Y = this.X = 0;
                    this.attrs = {};
                    this.paper = d;
                    this.matrix = b.matrix();
                    this._ = {
                        transform: [],
                        sx: 1,
                        sy: 1,
                        dx: 0,
                        dy: 0,
                        deg: 0,
                        dirty: 1,
                        dirtyT: 1
                    };
                    !d.bottom && (d.bottom = this);
                    (this.prev = d.top) && (d.top.next = this);
                    d.top = this;
                    this.next = null
                },
                F = b.el;
            z.prototype = F;
            F.constructor = z;
            F.transform = function(d) {
                if (null == d) return this._.transform;
                var e = this.paper._viewBoxShift,
                    f = e ? "s" + [e.scale, e.scale] + "-1-1t" + [e.dx, e.dy] : "",
                    g;
                e && (g = d = a(d).replace(/\.{3}|\u2026/g, this._.transform ||
                    ""));
                b._extractTransform(this, f + d);
                var e = this.matrix.clone(),
                    h = this.skew;
                d = this.node;
                var f = ~a(this.attrs.fill).indexOf("-"),
                    m = !a(this.attrs.fill).indexOf("url(");
                e.translate(1, 1);
                m || f || "image" == this.type ? (h.matrix = "1 0 0 1", h.offset = "0 0", h = e.split(), f && h.noRotation || !h.isSimple ? (d.style.filter = e.toFilter(), f = this.getBBox(), h = this.getBBox(1), e = f.x - h.x, f = f.y - h.y, d.coordorigin = -21600 * e + " " + -21600 * f, v(this, 1, 1, e, f, 0)) : (d.style.filter = "", v(this, h.scalex, h.scaley, h.dx, h.dy, h.rotate))) : (d.style.filter =
                    "", h.matrix = a(e), h.offset = e.offset());
                null !== g && (this._.transform = g, b._extractTransform(this, g));
                return this
            };
            F.rotate = function(b, e, f) {
                if (this.removed) return this;
                if (null != b) {
                    b = a(b).split(l);
                    b.length - 1 && (e = d(b[1]), f = d(b[2]));
                    b = d(b[0]);
                    null == f && (e = f);
                    if (null == e || null == f) f = this.getBBox(1), e = f.x + f.width / 2, f = f.y + f.height / 2;
                    this._.dirtyT = 1;
                    this.transform(this._.transform.concat([
                        ["r", b, e, f]
                    ]));
                    return this
                }
            };
            F.translate = function(b, e) {
                if (this.removed) return this;
                b = a(b).split(l);
                b.length - 1 && (e = d(b[1]));
                b =
                    d(b[0]) || 0;
                e = +e || 0;
                this._.bbox && (this._.bbox.x += b, this._.bbox.y += e);
                this.transform(this._.transform.concat([
                    ["t", b, e]
                ]));
                return this
            };
            F.scale = function(b, e, f, g) {
                if (this.removed) return this;
                b = a(b).split(l);
                b.length - 1 && (e = d(b[1]), f = d(b[2]), g = d(b[3]), isNaN(f) && (f = null), isNaN(g) && (g = null));
                b = d(b[0]);
                null == e && (e = b);
                null == g && (f = g);
                if (null == f || null == g) var h = this.getBBox(1);
                f = null == f ? h.x + h.width / 2 : f;
                g = null == g ? h.y + h.height / 2 : g;
                this.transform(this._.transform.concat([
                    ["s", b, e, f, g]
                ]));
                this._.dirtyT = 1;
                return this
            };
            F.hide = function() {
                !this.removed && (this.node.style.display = "none");
                return this
            };
            F.show = function() {
                !this.removed && (this.node.style.display = "");
                return this
            };
            F.auxGetBBox = b.el.getBBox;
            F.getBBox = function() {
                var b = this.auxGetBBox();
                if (this.paper && this.paper._viewBoxShift) {
                    var a = {},
                        d = 1 / this.paper._viewBoxShift.scale;
                    a.x = b.x - this.paper._viewBoxShift.dx;
                    a.x *= d;
                    a.y = b.y - this.paper._viewBoxShift.dy;
                    a.y *= d;
                    a.width = b.width * d;
                    a.height = b.height * d;
                    a.x2 = a.x + a.width;
                    a.y2 = a.y + a.height;
                    return a
                }
                return b
            };
            F._getBBox = function() {
                return this.removed ? {} : {
                    x: this.X + (this.bbx || 0) - this.W / 2,
                    y: this.Y - this.H,
                    width: this.W,
                    height: this.H
                }
            };
            F.remove = function() {
                if (!this.removed && this.node.parentNode) {
                    this.paper.__set__ && this.paper.__set__.exclude(this);
                    b.eve.unbind("raphael.*.*." + this.id);
                    b._tear(this, this.paper);
                    this.node.parentNode.removeChild(this.node);
                    this.shape && this.shape.parentNode.removeChild(this.shape);
                    for (var a in this) this[a] = "function" == typeof this[a] ? b._removedFactory(a) : null;
                    this.removed = !0
                }
            };
            F.attr = function(a, d) {
                if (this.removed) return this;
                if (null == a) {
                    var e = {},
                        f;
                    for (f in this.attrs) this.attrs.hasOwnProperty(f) && (e[f] = this.attrs[f]);
                    e.gradient && "none" == e.fill && (e.fill = e.gradient) && delete e.gradient;
                    e.transform = this._.transform;
                    return e
                }
                if (null == d && b.is(a, "string")) {
                    if ("fill" == a && "none" == this.attrs.fill && this.attrs.gradient) return this.attrs.gradient;
                    f = a.split(l);
                    for (var e = {}, g = 0, h = f.length; g < h; g++) a = f[g], a in this.attrs ? e[a] = this.attrs[a] : b.is(this.paper.customAttributes[a], "function") ? e[a] = this.paper.customAttributes[a].def : e[a] = b._availableAttrs[a];
                    return h - 1 ? e : e[f[0]]
                }
                if (this.attrs && null == d && b.is(a, "array")) {
                    e = {};
                    g = 0;
                    for (h = a.length; g < h; g++) e[a[g]] = this.attr(a[g]);
                    return e
                }
                null != d && (e = {}, e[a] = d);
                null == d && b.is(a, "object") && (e = a);
                for (g in e) k("raphael.attr." + g + "." + this.id, this, e[g]);
                if (e) {
                    for (g in this.paper.customAttributes)
                        if (this.paper.customAttributes.hasOwnProperty(g) && e.hasOwnProperty(g) && b.is(this.paper.customAttributes[g], "function"))
                            for (h in f = this.paper.customAttributes[g].apply(this, [].concat(e[g])), this.attrs[g] = e[g], f) f.hasOwnProperty(h) &&
                                (e[h] = f[h]);
                    e.text && "text" == this.type && (this.textpath.string = e.text);
                    A(this, e)
                }
                return this
            };
            F.toFront = function() {
                !this.removed && this.node.parentNode.appendChild(this.node);
                this.paper && this.paper.top != this && b._tofront(this, this.paper);
                return this
            };
            F.toBack = function() {
                if (this.removed) return this;
                this.node.parentNode.firstChild != this.node && (this.node.parentNode.insertBefore(this.node, this.node.parentNode.firstChild), b._toback(this, this.paper));
                return this
            };
            F.insertAfter = function(a) {
                if (this.removed) return this;
                a.constructor == b.st.constructor && (a = a[a.length - 1]);
                a.node.nextSibling ? a.node.parentNode.insertBefore(this.node, a.node.nextSibling) : a.node.parentNode.appendChild(this.node);
                b._insertafter(this, a, this.paper);
                return this
            };
            F.insertBefore = function(a) {
                if (this.removed) return this;
                a.constructor == b.st.constructor && (a = a[0]);
                a.node.parentNode.insertBefore(this.node, a.node);
                b._insertbefore(this, a, this.paper);
                return this
            };
            F.blur = function(a) {
                var d = this.node.runtimeStyle,
                    e = d.filter,
                    e = e.replace(t, "");
                0 !== +a ? (this.attrs.blur =
                    a, d.filter = e + "  progid:DXImageTransform.Microsoft.Blur(pixelradius=" + (+a || 1.5) + ")", d.margin = b.format("-{0}px 0 0 -{0}px", f(+a || 1.5))) : (d.filter = e, d.margin = 0, delete this.attrs.blur);
                return this
            };
            b._engine.path = function(a, b) {
                var d = B("shape");
                d.style.cssText = "position:absolute;left:0;top:0;width:1px;height:1px;behavior:url(#default#VML)";
                d.coordsize = "21600 21600";
                d.coordorigin = b.coordorigin;
                var e = new z(d, b),
                    f = {
                        fill: "none",
                        stroke: "#000"
                    };
                a && (f.path = a);
                e.type = "path";
                e.path = [];
                e.Path = "";
                A(e, f);
                b.canvas.appendChild(d);
                f = B("skew");
                f.on = !0;
                d.appendChild(f);
                e.skew = f;
                e.transform("");
                return e
            };
            b._engine.rect = function(a, d, e, f, g, h) {
                var m = b._rectPath(d, e, f, g, h);
                a = a.path(m);
                var l = a.attrs;
                a.X = l.x = d;
                a.Y = l.y = e;
                a.W = l.width = f;
                a.H = l.height = g;
                l.r = h;
                l.path = m;
                a.type = "rect";
                return a
            };
            b._engine.ellipse = function(a, b, d, e, f) {
                a = a.path();
                a.X = b - e;
                a.Y = d - f;
                a.W = 2 * e;
                a.H = 2 * f;
                a.type = "ellipse";
                A(a, {
                    cx: b,
                    cy: d,
                    rx: e,
                    ry: f
                });
                return a
            };
            b._engine.circle = function(a, b, d, e) {
                a = a.path();
                a.X = b - e;
                a.Y = d - e;
                a.W = a.H = 2 * e;
                a.type = "circle";
                A(a, {
                    cx: b,
                    cy: d,
                    r: e
                });
                return a
            };
            b._engine.image = function(a, d, e, f, g, h) {
                var m = b._rectPath(e, f, g, h);
                a = a.path(m).attr({
                    stroke: "none"
                });
                var l = a.attrs,
                    k = a.node,
                    n = k.getElementsByTagName("fill")[0];
                l.src = d;
                a.X = l.x = e;
                a.Y = l.y = f;
                a.W = l.width = g;
                a.H = l.height = h;
                l.path = m;
                a.type = "image";
                n.parentNode == k && k.removeChild(n);
                n.rotate = !0;
                n.src = d;
                n.type = "tile";
                a._.fillpos = [e, f];
                a._.fillsize = [g, h];
                k.appendChild(n);
                v(a, 1, 1, 0, 0, 0);
                return a
            };
            b._engine.text = function(d, e, g, h) {
                var m = B("shape"),
                    l = B("path"),
                    k = B("textpath");
                e = e || 0;
                g = g || 0;
                h = h || "";
                l.v = b.format("m{0},{1}l{2},{1}",
                    f(21600 * e), f(21600 * g), f(21600 * e) + 1);
                l.textpathok = !0;
                k.string = a(h);
                k.on = !0;
                m.style.cssText = "position:absolute;left:0;top:0;width:1px;height:1px;behavior:url(#default#VML)";
                m.coordsize = "21600 21600";
                m.coordorigin = "0 0";
                var n = new z(m, d),
                    p = {
                        fill: "#000",
                        stroke: "none",
                        font: b._availableAttrs.font,
                        text: h
                    };
                n.shape = m;
                n.path = l;
                n.textpath = k;
                n.type = "text";
                n.attrs.text = a(h);
                n.attrs.x = e;
                n.attrs.y = g;
                n.attrs.w = 1;
                n.attrs.h = 1;
                A(n, p);
                m.appendChild(k);
                m.appendChild(l);
                d.canvas.appendChild(m);
                d = B("skew");
                d.on = !0;
                m.appendChild(d);
                n.skew = d;
                n.transform("");
                return n
            };
            b._engine.setSize = function(a, d) {
                var e = this.canvas.style;
                this.width = a;
                this.height = d;
                a == +a && (a += "px");
                d == +d && (d += "px");
                e.width = a;
                e.height = d;
                e.clip = "rect(0 " + a + " " + d + " 0)";
                this._viewBox && b._engine.setViewBox.apply(this, this._viewBox);
                return this
            };
            b._engine.setViewBox = function(a, d, e, f, g) {
                b.eve("raphael.setViewBox", this, this._viewBox, [a, d, e, f, g]);
                var h = this.getSize(),
                    m = h.width,
                    l = h.height,
                    k, n;
                g && (k = l / f, n = m / e, e * k < m && (a -= (m - e * k) / 2 / k), f * n < l && (d -= (l - f * n) / 2 / n));
                this._viewBox = [a, d, e, f, !!g];
                this._viewBoxShift = {
                    dx: -a,
                    dy: -d,
                    scale: h
                };
                this.forEach(function(a) {
                    a.transform("...")
                });
                return this
            };
            var B;
            b._engine.initWin = function(a) {
                var b = a.document;
                31 > b.styleSheets.length ? b.createStyleSheet().addRule(".rvml", "behavior:url(#default#VML)") : b.styleSheets[0].addRule(".rvml", "behavior:url(#default#VML)");
                try {
                    !b.namespaces.rvml && b.namespaces.add("rvml", "urn:schemas-microsoft-com:vml"), B = function(a) {
                        return b.createElement("<rvml:" + a + ' class="rvml">')
                    }
                } catch (d) {
                    B = function(a) {
                        return b.createElement("<" +
                            a + ' xmlns="urn:schemas-microsoft.com:vml" class="rvml">')
                    }
                }
            };
            b._engine.initWin(b._g.win);
            b._engine.create = function() {
                var a = b._getContainer.apply(0, arguments),
                    d = a.container,
                    e = a.height,
                    f = a.width,
                    g = a.x,
                    a = a.y;
                if (!d) throw Error("VML container not found.");
                var h = new b._Paper,
                    m = h.canvas = b._g.doc.createElement("div"),
                    l = m.style,
                    g = g || 0,
                    a = a || 0,
                    f = f || 512,
                    e = e || 342;
                h.width = f;
                h.height = e;
                f == +f && (f += "px");
                e == +e && (e += "px");
                h.coordsize = "21600000 21600000";
                h.coordorigin = "0 0";
                h.span = b._g.doc.createElement("span");
                h.span.style.cssText =
                    "position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;";
                m.appendChild(h.span);
                l.cssText = b.format("top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden", f, e);
                1 == d ? (b._g.doc.body.appendChild(m), l.left = g + "px", l.top = a + "px", l.position = "absolute") : d.firstChild ? d.insertBefore(m, d.firstChild) : d.appendChild(m);
                h.renderfix = function() {};
                return h
            };
            b.prototype.clear = function() {
                b.eve("raphael.clear", this);
                this.canvas.innerHTML = "";
                this.span = b._g.doc.createElement("span");
                this.span.style.cssText = "position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;";
                this.canvas.appendChild(this.span);
                this.bottom = this.top = null
            };
            b.prototype.remove = function() {
                b.eve("raphael.remove", this);
                this.canvas.parentNode.removeChild(this.canvas);
                for (var a in this) this[a] = "function" == typeof this[a] ? b._removedFactory(a) : null;
                return !0
            };
            var J = b.st,
                G;
            for (G in F) F.hasOwnProperty(G) && !J.hasOwnProperty(G) && (J[G] = function(a) {
                return function() {
                    var b =
                        arguments;
                    return this.forEach(function(d) {
                        d[a].apply(d, b)
                    })
                }
            }(G))
        }
    })();
    u ? C.win.Raphael = b : Raphael = b;
    "object" == typeof exports && (module.exports = b);
    return b
});
var TGOS = TGOS || {};
TGOS.MVCObject = function() {
    this.binds_ = [];
    this.events_ = []
};
TGOS.MVCObject.prototype.addListener = function(a, d) {};
TGOS.MVCObject.prototype.bindTo = function(a, d, b, e) {
    e = {
        key: a,
        target: d,
        targetKey: b ? b : a,
        noNotify: e ? !0 : !1,
        eventName: a + "_changed"
    };
    this.binds_.push(e);
    this[a] !== e.target[e.targetKey] && (e.target[e.targetKey] = this[a], this.notify_(d, b))
};
TGOS.MVCObject.prototype.changed = function(a) {};
TGOS.MVCObject.prototype.get = function(a) {
    return this[a]
};
TGOS.MVCObject.prototype.notifyAll = function(a) {
    this.notify_(this, a);
    for (var d = 0; d < this.binds_.length; d++) this.binds_[d].key === a && this.notify_(this.binds_[d].target, this.binds_[d].targetKey)
};
TGOS.MVCObject.prototype.notify_ = function(a, d) {
    if ("function" == typeof a[d + "_changed"]) a[d + "_changed"]();
    "function" == typeof a.changed && a.changed(d)
};
TGOS.MVCObject.prototype.set = function(a, d) {
    if (this[a] !== d) {
        this[a] = d;
        for (var b = 0; b < this.binds_.length; b++) {
            var e = this.binds_[b],
                f = e.target,
                g = e.targetKey,
                e = e.noNotify;
            g == a && (f[a] = d);
            e || this.notify_(f, g)
        }
        this.notify_(this, a)
    }
};
TGOS.MVCObject.prototype.setValues = function(a) {
    for (var d in a) this.set(d, a[d])
};
TGOS.MVCObject.prototype.unbind = function(a) {
    for (var d = this.binds_[d].length; d--;) this.binds_[d].key === a && this.binds_.splice(d, 1)
};
TGOS.MVCObject.prototype.unbindAll = function() {
    this.binds_ = []
};
TGOS.fx = TGOS.fx || function() {
    var a = {},
        d = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;
    window.requestAnimationFrame = d;
    var b = window.cancelAnimationFrame || window.mozCancelAnimationFrame;
    window.cancelAnimationFrame = b;
    a.easing = {
        linear: function(a) {
            return a
        },
        quadIn: function(a) {
            return a * a
        },
        quadOut: function(a) {
            return a * (2 - a)
        },
        quadInOut: function(a) {
            return 0.5 > a ? 2 * a * a : -1 + (4 - 2 * a) * a
        },
        cubicIn: function(a) {
            return a * a * a
        },
        cubicOut: function(a) {
            return --a *
                a * a + 1
        },
        cubicInOut: function(a) {
            return 0.5 > a ? 4 * a * a * a : (a - 1) * (2 * a - 2) * (2 * a - 2) + 1
        },
        quartIn: function(a) {
            return a * a * a * a
        },
        quartOut: function(a) {
            return 1 - --a * a * a * a
        },
        quartInOut: function(a) {
            return 0.5 > a ? 8 * a * a * a * a : 1 - 8 * --a * a * a * a
        },
        quintIn: function(a) {
            return a * a * a * a * a
        },
        quintOut: function(a) {
            return 1 + --a * a * a * a * a
        },
        quintInOut: function(a) {
            return 0.5 > a ? 16 * a * a * a * a * a : 1 + 16 * --a * a * a * a * a
        }
    };
    a.createAnimation = function(e) {
        var f = e.easing ? e.easing : a.easing.linear,
            g = "number" == typeof e.duration ? e.duration : 350,
            h = "function" == typeof e.onAnimation ?
            e.onAnimation : null,
            k = "function" == typeof e.onEnd ? e.onEnd : null,
            l = "function" == typeof e.onStart ? e.onStart : null,
            n = e.type ? e.type : "setTimeout",
            m = "boolean" == typeof e.repeat ? e.repeat : !1,
            p = e.rate ? e.rate : 20,
            s = e.delay ? e.delay : 0,
            q, v = null,
            z, E = !1,
            F = function(a) {
                if (!E) {
                    null === v && (l && l.call(this), v = "setTimeout" == n ? new Date : a);
                    z = "setTimeout" == n ? new Date : a;
                    var b = "setTimeout" == n ? Math.abs(z.getTime() - v.getTime()) : Math.abs(a - v);
                    percent = f(b / g);
                    h && h.call(this, percent);
                    1 > percent && b < g ? q = "setTimeout" == n ? setTimeout(F, p) : d(F) :
                        m ? (percent %= 1, v = "setTimeout" == n ? new Date : a, q = "setTimeout" == n ? setTimeout(F, p) : d(F)) : k && k.call(this)
                }
            };
        return {
            play: function() {
                v = null;
                "setTimeout" != n && d ? s ? setTimeout(function() {
                    d(F)
                }, s) : d(F) : s ? setTimeout(F, s) : F()
            },
            stop: function() {
                E = !0;
                q && ("setTimeout" == n ? clearTimeout(q) : b(q))
            }
        }
    };
    return a
}();
/*

  proj4js.js -- Javascript reprojection library. 

  Authors:      Mike Adair madairATdmsolutions.ca
                Richard Greenwood richATgreenwoodmap.com
                Didier Richard didier.richardATign.fr
                Stephen Irons stephen.ironsATclear.net.nz
                Olivier Terral oterralATgmail.com

  License:      
 Copyright (c) 2012, Mike Adair, Richard Greenwood, Didier Richard, 
                     Stephen Irons and Olivier Terral

 Permission is hereby granted, free of charge, to any person obtaining a
 copy of this software and associated documentation files (the "Software"),
 to deal in the Software without restriction, including without limitation
 the rights to use, copy, modify, merge, publish, distribute, sublicense,
 and/or sell copies of the Software, and to permit persons to whom the
 Software is furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included
 in all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 DEALINGS IN THE SOFTWARE.

 Note: This program is an almost direct port of the C library PROJ.4.
*/
var Proj4js = {
    defaultDatum: "WGS84",
    transform: function(a, d, b) {
        if (!a.readyToUse) return this.reportError("Proj4js initialization for:" + a.srsCode + " not yet complete"), b;
        if (!d.readyToUse) return this.reportError("Proj4js initialization for:" + d.srsCode + " not yet complete"), b;
        if (a.datum && d.datum && ((a.datum.datum_type == Proj4js.common.PJD_3PARAM || a.datum.datum_type == Proj4js.common.PJD_7PARAM) && "WGS84" != d.datumCode || (d.datum.datum_type == Proj4js.common.PJD_3PARAM || d.datum.datum_type == Proj4js.common.PJD_7PARAM) &&
                "WGS84" != a.datumCode)) {
            var e = Proj4js.WGS84;
            this.transform(a, e, b);
            a = e
        }
        "enu" != a.axis && this.adjust_axis(a, !1, b);
        "longlat" == a.projName ? (b.x *= Proj4js.common.D2R, b.y *= Proj4js.common.D2R) : (a.to_meter && (b.x *= a.to_meter, b.y *= a.to_meter), a.inverse(b));
        a.from_greenwich && (b.x += a.from_greenwich);
        b = this.datum_transform(a.datum, d.datum, b);
        d.from_greenwich && (b.x -= d.from_greenwich);
        "longlat" == d.projName ? (b.x *= Proj4js.common.R2D, b.y *= Proj4js.common.R2D) : (d.forward(b), d.to_meter && (b.x /= d.to_meter, b.y /= d.to_meter));
        "enu" != d.axis && this.adjust_axis(d, !0, b);
        return b
    },
    datum_transform: function(a, d, b) {
        if (a.compare_datums(d) || a.datum_type == Proj4js.common.PJD_NODATUM || d.datum_type == Proj4js.common.PJD_NODATUM) return b;
        if (a.es != d.es || a.a != d.a || a.datum_type == Proj4js.common.PJD_3PARAM || a.datum_type == Proj4js.common.PJD_7PARAM || d.datum_type == Proj4js.common.PJD_3PARAM || d.datum_type == Proj4js.common.PJD_7PARAM) a.geodetic_to_geocentric(b), a.datum_type != Proj4js.common.PJD_3PARAM && a.datum_type != Proj4js.common.PJD_7PARAM || a.geocentric_to_wgs84(b),
            d.datum_type != Proj4js.common.PJD_3PARAM && d.datum_type != Proj4js.common.PJD_7PARAM || d.geocentric_from_wgs84(b), d.geocentric_to_geodetic(b);
        return b
    },
    adjust_axis: function(a, d, b) {
        for (var e = b.x, f = b.y, g = b.z || 0, h, k, l = 0; 3 > l; l++)
            if (!d || 2 != l || void 0 !== b.z) switch (0 == l ? (h = e, k = "x") : 1 == l ? (h = f, k = "y") : (h = g, k = "z"), a.axis[l]) {
                case "e":
                    b[k] = h;
                    break;
                case "w":
                    b[k] = -h;
                    break;
                case "n":
                    b[k] = h;
                    break;
                case "s":
                    b[k] = -h;
                    break;
                case "u":
                    void 0 !== b[k] && (b.z = h);
                    break;
                case "d":
                    void 0 !== b[k] && (b.z = -h);
                    break;
                default:
                    return alert("ERROR: unknow axis (" +
                        a.axis[l] + ") - check definition of " + a.projName), null
            }
            return b
    },
    reportError: function() {},
    extend: function(a, d) {
        a = a || {};
        if (d)
            for (var b in d) {
                var e = d[b];
                void 0 !== e && (a[b] = e)
            }
        return a
    },
    Class: function() {
        for (var a = function() {
                this.initialize.apply(this, arguments)
            }, d = {}, b, e = 0; e < arguments.length; ++e) b = "function" == typeof arguments[e] ? arguments[e].prototype : arguments[e], Proj4js.extend(d, b);
        a.prototype = d;
        return a
    },
    bind: function(a, d) {
        var b = Array.prototype.slice.apply(arguments, [2]);
        return function() {
            var e = b.concat(Array.prototype.slice.apply(arguments, [0]));
            return a.apply(d, e)
        }
    },
    scriptName: "proj4js-compressed.js",
    defsLookupService: "http://spatialreference.org/ref",
    libPath: null,
    getScriptLocation: function() {
        if (this.libPath) return this.libPath;
        for (var a = this.scriptName, d = a.length, b = document.getElementsByTagName("script"), e = 0; e < b.length; e++) {
            var f = b[e].getAttribute("src");
            if (f) {
                var g = f.lastIndexOf(a);
                if (-1 < g && g + d == f.length) {
                    this.libPath = f.slice(0, -d);
                    break
                }
            }
        }
        return this.libPath || ""
    },
    loadScript: function(a, d, b, e) {
        var f = document.createElement("script");
        f.defer = !1;
        f.type = "text/javascript";
        f.id = a;
        f.src = a;
        f.onload = d;
        f.onerror = b;
        f.loadCheck = e;
        /MSIE/.test(navigator.userAgent) && (f.onreadystatechange = this.checkReadyState);
        document.getElementsByTagName("head")[0].appendChild(f)
    },
    checkReadyState: function() {
        if ("loaded" == this.readyState)
            if (this.loadCheck()) this.onload();
            else this.onerror()
    }
};
Proj4js.Proj = Proj4js.Class({
    readyToUse: !1,
    title: null,
    projName: null,
    units: null,
    datum: null,
    x0: 0,
    y0: 0,
    localCS: !1,
    queue: null,
    initialize: function(a, d) {
        this.srsCodeInput = a;
        this.queue = [];
        d && this.queue.push(d);
        if (0 <= a.indexOf("GEOGCS") || 0 <= a.indexOf("GEOCCS") || 0 <= a.indexOf("PROJCS") || 0 <= a.indexOf("LOCAL_CS")) this.parseWKT(a), this.deriveConstants(), this.loadProjCode(this.projName);
        else {
            if (0 == a.indexOf("urn:")) {
                var b = a.split(":");
                "ogc" != b[1] && "x-ogc" != b[1] || "def" != b[2] || "crs" != b[3] || (a = b[4] + ":" + b[b.length -
                    1])
            } else 0 == a.indexOf("http://") && (b = a.split("#"), b[0].match(/epsg.org/) ? a = "EPSG:" + b[1] : b[0].match(/RIG.xml/) && (a = "IGNF:" + b[1]));
            this.srsCode = a.toUpperCase();
            0 == this.srsCode.indexOf("EPSG") ? (this.srsCode = this.srsCode, this.srsAuth = "epsg", this.srsProjNumber = this.srsCode.substring(5)) : 0 == this.srsCode.indexOf("IGNF") ? (this.srsCode = this.srsCode, this.srsAuth = "IGNF", this.srsProjNumber = this.srsCode.substring(5)) : 0 == this.srsCode.indexOf("CRS") ? (this.srsCode = this.srsCode, this.srsAuth = "CRS", this.srsProjNumber =
                this.srsCode.substring(4)) : (this.srsAuth = "", this.srsProjNumber = this.srsCode);
            this.loadProjDefinition()
        }
    },
    loadProjDefinition: function() {
        if (Proj4js.defs[this.srsCode]) this.defsLoaded();
        else {
            var a = Proj4js.getScriptLocation() + "defs/" + this.srsAuth.toUpperCase() + this.srsProjNumber + ".js";
            Proj4js.loadScript(a, Proj4js.bind(this.defsLoaded, this), Proj4js.bind(this.loadFromService, this), Proj4js.bind(this.checkDefsLoaded, this))
        }
    },
    loadFromService: function() {
        Proj4js.loadScript(Proj4js.defsLookupService + "/" + this.srsAuth +
            "/" + this.srsProjNumber + "/proj4js/", Proj4js.bind(this.defsLoaded, this), Proj4js.bind(this.defsFailed, this), Proj4js.bind(this.checkDefsLoaded, this))
    },
    defsLoaded: function() {
        this.parseDefs();
        this.loadProjCode(this.projName)
    },
    checkDefsLoaded: function() {
        return Proj4js.defs[this.srsCode] ? !0 : !1
    },
    defsFailed: function() {
        Proj4js.reportError("failed to load projection definition for: " + this.srsCode);
        Proj4js.defs[this.srsCode] = Proj4js.defs.WGS84;
        this.defsLoaded()
    },
    loadProjCode: function(a) {
        if (Proj4js.Proj[a]) this.initTransforms();
        else {
            var d = Proj4js.getScriptLocation() + "projCode/" + a + ".js";
            Proj4js.loadScript(d, Proj4js.bind(this.loadProjCodeSuccess, this, a), Proj4js.bind(this.loadProjCodeFailure, this, a), Proj4js.bind(this.checkCodeLoaded, this, a))
        }
    },
    loadProjCodeSuccess: function(a) {
        Proj4js.Proj[a].dependsOn ? this.loadProjCode(Proj4js.Proj[a].dependsOn) : this.initTransforms()
    },
    loadProjCodeFailure: function(a) {
        Proj4js.reportError("failed to find projection file for: " + a)
    },
    checkCodeLoaded: function(a) {
        return Proj4js.Proj[a] ? !0 : !1
    },
    initTransforms: function() {
        Proj4js.extend(this,
            Proj4js.Proj[this.projName]);
        this.init();
        this.readyToUse = !0;
        if (this.queue)
            for (var a; a = this.queue.shift();) a.call(this, this)
    },
    wktRE: /^(\w+)\[(.*)\]$/,
    parseWKT: function(a) {
        if (a = a.match(this.wktRE)) {
            var d = a[1],
                b = a[2].split(","),
                e;
            e = "TOWGS84" == d.toUpperCase() ? d : b.shift();
            e = e.replace(/^\"/, "");
            e = e.replace(/\"$/, "");
            a = [];
            for (var f = 0, g = "", h = 0; h < b.length; ++h) {
                for (var k = b[h], l = 0; l < k.length; ++l) "[" == k.charAt(l) && ++f, "]" == k.charAt(l) && --f;
                g += k;
                0 === f ? (a.push(g), g = "") : g += ","
            }
            switch (d) {
                case "LOCAL_CS":
                    this.projName =
                        "identity";
                    this.localCS = !0;
                    this.srsCode = e;
                    break;
                case "GEOGCS":
                    this.projName = "longlat";
                    this.geocsCode = e;
                    this.srsCode || (this.srsCode = e);
                    break;
                case "PROJCS":
                    this.srsCode = e;
                    break;
                case "PROJECTION":
                    this.projName = Proj4js.wktProjections[e];
                    break;
                case "DATUM":
                    this.datumName = e;
                    break;
                case "LOCAL_DATUM":
                    this.datumCode = "none";
                    break;
                case "SPHEROID":
                    this.ellps = e;
                    this.a = parseFloat(a.shift());
                    this.rf = parseFloat(a.shift());
                    break;
                case "PRIMEM":
                    this.from_greenwich = parseFloat(a.shift());
                    break;
                case "UNIT":
                    this.units =
                        e;
                    this.unitsPerMeter = parseFloat(a.shift());
                    break;
                case "PARAMETER":
                    d = e.toLowerCase();
                    b = parseFloat(a.shift());
                    switch (d) {
                        case "false_easting":
                            this.x0 = b;
                            break;
                        case "false_northing":
                            this.y0 = b;
                            break;
                        case "scale_factor":
                            this.k0 = b;
                            break;
                        case "central_meridian":
                            this.long0 = b * Proj4js.common.D2R;
                            break;
                        case "latitude_of_origin":
                            this.lat0 = b * Proj4js.common.D2R
                    }
                    break;
                case "TOWGS84":
                    this.datum_params = a;
                    break;
                case "AXIS":
                    d = e.toLowerCase();
                    b = a.shift();
                    switch (b) {
                        case "EAST":
                            b = "e";
                            break;
                        case "WEST":
                            b = "w";
                            break;
                        case "NORTH":
                            b =
                                "n";
                            break;
                        case "SOUTH":
                            b = "s";
                            break;
                        case "UP":
                            b = "u";
                            break;
                        case "DOWN":
                            b = "d";
                            break;
                        default:
                            b = " "
                    }
                    this.axis || (this.axis = "enu");
                    switch (d) {
                        case "x":
                            this.axis = b + this.axis.substr(1, 2);
                            break;
                        case "y":
                            this.axis = this.axis.substr(0, 1) + b + this.axis.substr(2, 1);
                            break;
                        case "z":
                            this.axis = this.axis.substr(0, 2) + b
                    }
            }
            for (h = 0; h < a.length; ++h) this.parseWKT(a[h])
        }
    },
    parseDefs: function() {
        this.defData = Proj4js.defs[this.srsCode];
        var a, d;
        if (this.defData) {
            for (var b = this.defData.split("+"), e = 0; e < b.length; e++) switch (d = b[e].split("="),
                a = d[0].toLowerCase(), d = d[1], a.replace(/\s/gi, "")) {
                case "title":
                    this.title = d;
                    break;
                case "proj":
                    this.projName = d.replace(/\s/gi, "");
                    break;
                case "units":
                    this.units = d.replace(/\s/gi, "");
                    break;
                case "datum":
                    this.datumCode = d.replace(/\s/gi, "");
                    break;
                case "nadgrids":
                    this.nagrids = d.replace(/\s/gi, "");
                    break;
                case "ellps":
                    this.ellps = d.replace(/\s/gi, "");
                    break;
                case "a":
                    this.a = parseFloat(d);
                    break;
                case "b":
                    this.b = parseFloat(d);
                    break;
                case "rf":
                    this.rf = parseFloat(d);
                    break;
                case "lat_0":
                    this.lat0 = d * Proj4js.common.D2R;
                    break;
                case "lat_1":
                    this.lat1 = d * Proj4js.common.D2R;
                    break;
                case "lat_2":
                    this.lat2 = d * Proj4js.common.D2R;
                    break;
                case "lat_ts":
                    this.lat_ts = d * Proj4js.common.D2R;
                    break;
                case "lon_0":
                    this.long0 = d * Proj4js.common.D2R;
                    break;
                case "alpha":
                    this.alpha = parseFloat(d) * Proj4js.common.D2R;
                    break;
                case "lonc":
                    this.longc = d * Proj4js.common.D2R;
                    break;
                case "x_0":
                    this.x0 = parseFloat(d);
                    break;
                case "y_0":
                    this.y0 = parseFloat(d);
                    break;
                case "k_0":
                    this.k0 = parseFloat(d);
                    break;
                case "k":
                    this.k0 = parseFloat(d);
                    break;
                case "r_a":
                    this.R_A = !0;
                    break;
                case "zone":
                    this.zone = parseInt(d, 10);
                    break;
                case "south":
                    this.utmSouth = !0;
                    break;
                case "towgs84":
                    this.datum_params = d.split(",");
                    break;
                case "to_meter":
                    this.to_meter = parseFloat(d);
                    break;
                case "from_greenwich":
                    this.from_greenwich = d * Proj4js.common.D2R;
                    break;
                case "pm":
                    d = d.replace(/\s/gi, "");
                    this.from_greenwich = Proj4js.PrimeMeridian[d] ? Proj4js.PrimeMeridian[d] : parseFloat(d);
                    this.from_greenwich *= Proj4js.common.D2R;
                    break;
                case "axis":
                    d = d.replace(/\s/gi, ""), 3 == d.length && -1 != "ewnsud".indexOf(d.substr(0, 1)) && -1 !=
                        "ewnsud".indexOf(d.substr(1, 1)) && -1 != "ewnsud".indexOf(d.substr(2, 1)) && (this.axis = d)
            }
            this.deriveConstants()
        }
    },
    deriveConstants: function() {
        "@null" == this.nagrids && (this.datumCode = "none");
        if (this.datumCode && "none" != this.datumCode) {
            var a = Proj4js.Datum[this.datumCode];
            a && (this.datum_params = a.towgs84 ? a.towgs84.split(",") : null, this.ellps = a.ellipse, this.datumName = a.datumName ? a.datumName : this.datumCode)
        }
        this.a || Proj4js.extend(this, Proj4js.Ellipsoid[this.ellps] ? Proj4js.Ellipsoid[this.ellps] : Proj4js.Ellipsoid.WGS84);
        this.rf && !this.b && (this.b = (1 - 1 / this.rf) * this.a);
        if (0 === this.rf || Math.abs(this.a - this.b) < Proj4js.common.EPSLN) this.sphere = !0, this.b = this.a;
        this.a2 = this.a * this.a;
        this.b2 = this.b * this.b;
        this.es = (this.a2 - this.b2) / this.a2;
        this.e = Math.sqrt(this.es);
        this.R_A && (this.a *= 1 - this.es * (Proj4js.common.SIXTH + this.es * (Proj4js.common.RA4 + this.es * Proj4js.common.RA6)), this.a2 = this.a * this.a, this.b2 = this.b * this.b, this.es = 0);
        this.ep2 = (this.a2 - this.b2) / this.b2;
        this.k0 || (this.k0 = 1);
        this.axis || (this.axis = "enu");
        this.datum =
            new Proj4js.datum(this)
    }
});
Proj4js.Proj.longlat = {
    init: function() {},
    forward: function(a) {
        return a
    },
    inverse: function(a) {
        return a
    }
};
Proj4js.Proj.identity = Proj4js.Proj.longlat;
Proj4js.defs = {
    WGS84: "+title=long/lat:WGS84 +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees",
    "EPSG:4326": "+title=long/lat:WGS84 +proj=longlat +a=6378137.0 +b=6356752.31424518 +ellps=WGS84 +datum=WGS84 +units=degrees",
    "EPSG:4269": "+title=long/lat:NAD83 +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees",
    "EPSG:3875": "+title= Google Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs"
};
Proj4js.defs["EPSG:3785"] = Proj4js.defs["EPSG:3875"];
Proj4js.defs.GOOGLE = Proj4js.defs["EPSG:3875"];
Proj4js.defs["EPSG:900913"] = Proj4js.defs["EPSG:3875"];
Proj4js.defs["EPSG:102113"] = Proj4js.defs["EPSG:3875"];
Proj4js.common = {
    PI: 3.141592653589793,
    HALF_PI: 1.5707963267948966,
    TWO_PI: 6.283185307179586,
    FORTPI: 0.7853981633974483,
    R2D: 57.29577951308232,
    D2R: 0.017453292519943295,
    SEC_TO_RAD: 4.84813681109536E-6,
    EPSLN: 1E-10,
    MAX_ITER: 20,
    COS_67P5: 0.3826834323650898,
    AD_C: 1.0026,
    PJD_UNKNOWN: 0,
    PJD_3PARAM: 1,
    PJD_7PARAM: 2,
    PJD_GRIDSHIFT: 3,
    PJD_WGS84: 4,
    PJD_NODATUM: 5,
    SRS_WGS84_SEMIMAJOR: 6378137,
    SIXTH: 0.16666666666666666,
    RA4: 0.04722222222222222,
    RA6: 0.022156084656084655,
    RV4: 0.06944444444444445,
    RV6: 0.04243827160493827,
    msfnz: function(a,
        d, b) {
        a *= d;
        return b / Math.sqrt(1 - a * a)
    },
    tsfnz: function(a, d, b) {
        b *= a;
        b = Math.pow((1 - b) / (1 + b), 0.5 * a);
        return Math.tan(0.5 * (this.HALF_PI - d)) / b
    },
    phi2z: function(a, d) {
        for (var b = 0.5 * a, e, f = this.HALF_PI - 2 * Math.atan(d), g = 0; 15 >= g; g++)
            if (e = a * Math.sin(f), e = this.HALF_PI - 2 * Math.atan(d * Math.pow((1 - e) / (1 + e), b)) - f, f += e, 1E-10 >= Math.abs(e)) return f;
        alert("phi2z has NoConvergence");
        return -9999
    },
    qsfnz: function(a, d) {
        var b;
        return 1E-7 < a ? (b = a * d, (1 - a * a) * (d / (1 - b * b) - 0.5 / a * Math.log((1 - b) / (1 + b)))) : 2 * d
    },
    asinz: function(a) {
        1 < Math.abs(a) &&
            (a = 1 < a ? 1 : -1);
        return Math.asin(a)
    },
    e0fn: function(a) {
        return 1 - 0.25 * a * (1 + a / 16 * (3 + 1.25 * a))
    },
    e1fn: function(a) {
        return 0.375 * a * (1 + 0.25 * a * (1 + 0.46875 * a))
    },
    e2fn: function(a) {
        return 0.05859375 * a * a * (1 + 0.75 * a)
    },
    e3fn: function(a) {
        return a * a * a * (35 / 3072)
    },
    mlfn: function(a, d, b, e, f) {
        return a * f - d * Math.sin(2 * f) + b * Math.sin(4 * f) - e * Math.sin(6 * f)
    },
    srat: function(a, d) {
        return Math.pow((1 - a) / (1 + a), d)
    },
    sign: function(a) {
        return 0 > a ? -1 : 1
    },
    adjust_lon: function(a) {
        return Math.abs(a) < this.PI ? a : a - this.sign(a) * this.TWO_PI
    },
    adjust_lat: function(a) {
        return Math.abs(a) <
            this.HALF_PI ? a : a - this.sign(a) * this.PI
    },
    latiso: function(a, d, b) {
        if (Math.abs(d) > this.HALF_PI) return +Number.NaN;
        if (d == this.HALF_PI) return Number.POSITIVE_INFINITY;
        if (d == -1 * this.HALF_PI) return -1 * Number.POSITIVE_INFINITY;
        b *= a;
        return Math.log(Math.tan((this.HALF_PI + d) / 2)) + a * Math.log((1 - b) / (1 + b)) / 2
    },
    fL: function(a, d) {
        return 2 * Math.atan(a * Math.exp(d)) - this.HALF_PI
    },
    invlatiso: function(a, d) {
        var b = this.fL(1, d),
            e = 0,
            f = 0;
        do e = b, f = a * Math.sin(e), b = this.fL(Math.exp(a * Math.log((1 + f) / (1 - f)) / 2), d); while (1E-12 < Math.abs(b -
                e));
        return b
    },
    sinh: function(a) {
        a = Math.exp(a);
        return (a - 1 / a) / 2
    },
    cosh: function(a) {
        a = Math.exp(a);
        return (a + 1 / a) / 2
    },
    tanh: function(a) {
        a = Math.exp(a);
        return (a - 1 / a) / (a + 1 / a)
    },
    asinh: function(a) {
        return (0 <= a ? 1 : -1) * Math.log(Math.abs(a) + Math.sqrt(a * a + 1))
    },
    acosh: function(a) {
        return 2 * Math.log(Math.sqrt((a + 1) / 2) + Math.sqrt((a - 1) / 2))
    },
    atanh: function(a) {
        return Math.log((a - 1) / (a + 1)) / 2
    },
    gN: function(a, d, b) {
        d *= b;
        return a / Math.sqrt(1 - d * d)
    },
    pj_enfn: function(a) {
        var d = [];
        d[0] = this.C00 - a * (this.C02 + a * (this.C04 + a * (this.C06 + a * this.C08)));
        d[1] = a * (this.C22 - a * (this.C04 + a * (this.C06 + a * this.C08)));
        var b = a * a;
        d[2] = b * (this.C44 - a * (this.C46 + a * this.C48));
        b *= a;
        d[3] = b * (this.C66 - a * this.C68);
        d[4] = b * a * this.C88;
        return d
    },
    pj_mlfn: function(a, d, b, e) {
        b *= d;
        d *= d;
        return e[0] * a - b * (e[1] + d * (e[2] + d * (e[3] + d * e[4])))
    },
    pj_inv_mlfn: function(a, d, b) {
        for (var e = 1 / (1 - d), f = a, g = Proj4js.common.MAX_ITER; g; --g) {
            var h = Math.sin(f),
                k = 1 - d * h * h,
                k = (this.pj_mlfn(f, h, Math.cos(f), b) - a) * k * Math.sqrt(k) * e,
                f = f - k;
            if (Math.abs(k) < Proj4js.common.EPSLN) return f
        }
        Proj4js.reportError("cass:pj_inv_mlfn: Convergence error");
        return f
    },
    C00: 1,
    C02: 0.25,
    C04: 0.046875,
    C06: 0.01953125,
    C08: 0.01068115234375,
    C22: 0.75,
    C44: 0.46875,
    C46: 0.013020833333333334,
    C48: 0.007120768229166667,
    C66: 0.3645833333333333,
    C68: 0.005696614583333333,
    C88: 0.3076171875
};
Proj4js.datum = Proj4js.Class({
    initialize: function(a) {
        this.datum_type = Proj4js.common.PJD_WGS84;
        a.datumCode && "none" == a.datumCode && (this.datum_type = Proj4js.common.PJD_NODATUM);
        if (a && a.datum_params) {
            for (var d = 0; d < a.datum_params.length; d++) a.datum_params[d] = parseFloat(a.datum_params[d]);
            if (0 != a.datum_params[0] || 0 != a.datum_params[1] || 0 != a.datum_params[2]) this.datum_type = Proj4js.common.PJD_3PARAM;
            3 < a.datum_params.length && (0 != a.datum_params[3] || 0 != a.datum_params[4] || 0 != a.datum_params[5] || 0 != a.datum_params[6]) &&
                (this.datum_type = Proj4js.common.PJD_7PARAM, a.datum_params[3] *= Proj4js.common.SEC_TO_RAD, a.datum_params[4] *= Proj4js.common.SEC_TO_RAD, a.datum_params[5] *= Proj4js.common.SEC_TO_RAD, a.datum_params[6] = a.datum_params[6] / 1E6 + 1)
        }
        a && (this.a = a.a, this.b = a.b, this.es = a.es, this.ep2 = a.ep2, this.datum_params = a.datum_params)
    },
    compare_datums: function(a) {
        return this.datum_type != a.datum_type || this.a != a.a || 5E-11 < Math.abs(this.es - a.es) ? !1 : this.datum_type == Proj4js.common.PJD_3PARAM ? this.datum_params[0] == a.datum_params[0] &&
            this.datum_params[1] == a.datum_params[1] && this.datum_params[2] == a.datum_params[2] : this.datum_type == Proj4js.common.PJD_7PARAM ? this.datum_params[0] == a.datum_params[0] && this.datum_params[1] == a.datum_params[1] && this.datum_params[2] == a.datum_params[2] && this.datum_params[3] == a.datum_params[3] && this.datum_params[4] == a.datum_params[4] && this.datum_params[5] == a.datum_params[5] && this.datum_params[6] == a.datum_params[6] : this.datum_type == Proj4js.common.PJD_GRIDSHIFT || a.datum_type == Proj4js.common.PJD_GRIDSHIFT ? (alert("ERROR: Grid shift transformations are not implemented."), !1) : !0
    },
    geodetic_to_geocentric: function(a) {
        var d = a.x,
            b = a.y,
            e = a.z ? a.z : 0,
            f, g, h;
        if (b < -Proj4js.common.HALF_PI && b > -1.001 * Proj4js.common.HALF_PI) b = -Proj4js.common.HALF_PI;
        else if (b > Proj4js.common.HALF_PI && b < 1.001 * Proj4js.common.HALF_PI) b = Proj4js.common.HALF_PI;
        else if (b < -Proj4js.common.HALF_PI || b > Proj4js.common.HALF_PI) return Proj4js.reportError("geocent:lat out of range:" + b), null;
        d > Proj4js.common.PI && (d -= 2 * Proj4js.common.PI);
        g = Math.sin(b);
        h = Math.cos(b);
        f = this.a / Math.sqrt(1 - this.es * g * g);
        b = (f + e) * h * Math.cos(d);
        d = (f + e) * h * Math.sin(d);
        e = (f * (1 - this.es) + e) * g;
        a.x = b;
        a.y = d;
        a.z = e;
        return 0
    },
    geocentric_to_geodetic: function(a) {
        var d, b, e, f, g, h, k, l, n, m, p = a.x;
        e = a.y;
        var s = a.z ? a.z : 0;
        d = Math.sqrt(p * p + e * e);
        b = Math.sqrt(p * p + e * e + s * s);
        if (1E-12 > d / this.a) {
            if (p = 0, 1E-12 > b / this.a) return
        } else p = Math.atan2(e, p);
        e = s / b;
        f = d / b;
        g = 1 / Math.sqrt(1 - this.es * (2 - this.es) * f * f);
        k = f * (1 - this.es) * g;
        l = e * g;
        m = 0;
        do m++, h = this.a / Math.sqrt(1 - this.es * l * l), b = d * k + s * l - h * (1 - this.es * l * l), h = this.es * h / (h + b), g = 1 / Math.sqrt(1 - h * (2 - h) * f * f), h = f * (1 - h) * g, g *= e, n = g * k - h * l, k =
            h, l = g; while (1E-24 < n * n && 30 > m);
        d = Math.atan(g / Math.abs(h));
        a.x = p;
        a.y = d;
        a.z = b;
        return a
    },
    geocentric_to_geodetic_noniter: function(a) {
        var d = a.x,
            b = a.y,
            e = a.z ? a.z : 0,
            f, g, h, k, l, d = parseFloat(d),
            b = parseFloat(b),
            e = parseFloat(e);
        l = !1;
        if (0 != d) f = Math.atan2(b, d);
        else if (0 < b) f = Proj4js.common.HALF_PI;
        else if (0 > b) f = -Proj4js.common.HALF_PI;
        else if (l = !0, f = 0, 0 < e) g = Proj4js.common.HALF_PI;
        else if (0 > e) g = -Proj4js.common.HALF_PI;
        else return;
        h = d * d + b * b;
        d = Math.sqrt(h);
        b = e * Proj4js.common.AD_C;
        h = Math.sqrt(b * b + h);
        b /= h;
        h = d / h;
        b = e + this.b *
            this.ep2 * b * b * b;
        k = d - this.a * this.es * h * h * h;
        h = Math.sqrt(b * b + k * k);
        b /= h;
        h = k / h;
        k = this.a / Math.sqrt(1 - this.es * b * b);
        e = h >= Proj4js.common.COS_67P5 ? d / h - k : h <= -Proj4js.common.COS_67P5 ? d / -h - k : e / b + k * (this.es - 1);
        !1 == l && (g = Math.atan(b / h));
        a.x = f;
        a.y = g;
        a.z = e;
        return a
    },
    geocentric_to_wgs84: function(a) {
        if (this.datum_type == Proj4js.common.PJD_3PARAM) a.x += this.datum_params[0], a.y += this.datum_params[1], a.z += this.datum_params[2];
        else if (this.datum_type == Proj4js.common.PJD_7PARAM) {
            var d = this.datum_params[3],
                b = this.datum_params[4],
                e = this.datum_params[5],
                f = this.datum_params[6],
                g = f * (e * a.x + a.y - d * a.z) + this.datum_params[1],
                d = f * (-b * a.x + d * a.y + a.z) + this.datum_params[2];
            a.x = f * (a.x - e * a.y + b * a.z) + this.datum_params[0];
            a.y = g;
            a.z = d
        }
    },
    geocentric_from_wgs84: function(a) {
        if (this.datum_type == Proj4js.common.PJD_3PARAM) a.x -= this.datum_params[0], a.y -= this.datum_params[1], a.z -= this.datum_params[2];
        else if (this.datum_type == Proj4js.common.PJD_7PARAM) {
            var d = this.datum_params[3],
                b = this.datum_params[4],
                e = this.datum_params[5],
                f = this.datum_params[6],
                g = (a.x -
                    this.datum_params[0]) / f,
                h = (a.y - this.datum_params[1]) / f,
                f = (a.z - this.datum_params[2]) / f;
            a.x = g + e * h - b * f;
            a.y = -e * g + h + d * f;
            a.z = b * g - d * h + f
        }
    }
});
Proj4js.Point = Proj4js.Class({
    initialize: function(a, d, b) {
        "object" == typeof a ? (this.x = a[0], this.y = a[1], this.z = a[2] || 0) : "string" == typeof a && "undefined" == typeof d ? (a = a.split(","), this.x = parseFloat(a[0]), this.y = parseFloat(a[1]), this.z = parseFloat(a[2]) || 0) : (this.x = a, this.y = d, this.z = b || 0)
    },
    clone: function() {
        return new Proj4js.Point(this.x, this.y, this.z)
    },
    toString: function() {
        return "x=" + this.x + ",y=" + this.y
    },
    toShortString: function() {
        return this.x + ", " + this.y
    }
});
Proj4js.PrimeMeridian = {
    greenwich: 0,
    lisbon: -9.131906111111,
    paris: 2.337229166667,
    bogota: -74.080916666667,
    madrid: -3.687938888889,
    rome: 12.452333333333,
    bern: 7.439583333333,
    jakarta: 106.807719444444,
    ferro: -17.666666666667,
    brussels: 4.367975,
    stockholm: 18.058277777778,
    athens: 23.7163375,
    oslo: 10.722916666667
};
Proj4js.Ellipsoid = {
    MERIT: {
        a: 6378137,
        rf: 298.257,
        ellipseName: "MERIT 1983"
    },
    SGS85: {
        a: 6378136,
        rf: 298.257,
        ellipseName: "Soviet Geodetic System 85"
    },
    GRS80: {
        a: 6378137,
        rf: 298.257222101,
        ellipseName: "GRS 1980(IUGG, 1980)"
    },
    IAU76: {
        a: 6378140,
        rf: 298.257,
        ellipseName: "IAU 1976"
    },
    airy: {
        a: 6377563.396,
        b: 6356256.91,
        ellipseName: "Airy 1830"
    },
    "APL4.": {
        a: 6378137,
        rf: 298.25,
        ellipseName: "Appl. Physics. 1965"
    },
    NWL9D: {
        a: 6378145,
        rf: 298.25,
        ellipseName: "Naval Weapons Lab., 1965"
    },
    mod_airy: {
        a: 6377340.189,
        b: 6356034.446,
        ellipseName: "Modified Airy"
    },
    andrae: {
        a: 6377104.43,
        rf: 300,
        ellipseName: "Andrae 1876 (Den., Iclnd.)"
    },
    aust_SA: {
        a: 6378160,
        rf: 298.25,
        ellipseName: "Australian Natl & S. Amer. 1969"
    },
    GRS67: {
        a: 6378160,
        rf: 298.247167427,
        ellipseName: "GRS 67(IUGG 1967)"
    },
    bessel: {
        a: 6377397.155,
        rf: 299.1528128,
        ellipseName: "Bessel 1841"
    },
    bess_nam: {
        a: 6377483.865,
        rf: 299.1528128,
        ellipseName: "Bessel 1841 (Namibia)"
    },
    clrk66: {
        a: 6378206.4,
        b: 6356583.8,
        ellipseName: "Clarke 1866"
    },
    clrk80: {
        a: 6378249.145,
        rf: 293.4663,
        ellipseName: "Clarke 1880 mod."
    },
    CPM: {
        a: 6375738.7,
        rf: 334.29,
        ellipseName: "Comm. des Poids et Mesures 1799"
    },
    delmbr: {
        a: 6376428,
        rf: 311.5,
        ellipseName: "Delambre 1810 (Belgium)"
    },
    engelis: {
        a: 6378136.05,
        rf: 298.2566,
        ellipseName: "Engelis 1985"
    },
    evrst30: {
        a: 6377276.345,
        rf: 300.8017,
        ellipseName: "Everest 1830"
    },
    evrst48: {
        a: 6377304.063,
        rf: 300.8017,
        ellipseName: "Everest 1948"
    },
    evrst56: {
        a: 6377301.243,
        rf: 300.8017,
        ellipseName: "Everest 1956"
    },
    evrst69: {
        a: 6377295.664,
        rf: 300.8017,
        ellipseName: "Everest 1969"
    },
    evrstSS: {
        a: 6377298.556,
        rf: 300.8017,
        ellipseName: "Everest (Sabah & Sarawak)"
    },
    fschr60: {
        a: 6378166,
        rf: 298.3,
        ellipseName: "Fischer (Mercury Datum) 1960"
    },
    fschr60m: {
        a: 6378155,
        rf: 298.3,
        ellipseName: "Fischer 1960"
    },
    fschr68: {
        a: 6378150,
        rf: 298.3,
        ellipseName: "Fischer 1968"
    },
    helmert: {
        a: 6378200,
        rf: 298.3,
        ellipseName: "Helmert 1906"
    },
    hough: {
        a: 6378270,
        rf: 297,
        ellipseName: "Hough"
    },
    intl: {
        a: 6378388,
        rf: 297,
        ellipseName: "International 1909 (Hayford)"
    },
    kaula: {
        a: 6378163,
        rf: 298.24,
        ellipseName: "Kaula 1961"
    },
    lerch: {
        a: 6378139,
        rf: 298.257,
        ellipseName: "Lerch 1979"
    },
    mprts: {
        a: 6397300,
        rf: 191,
        ellipseName: "Maupertius 1738"
    },
    new_intl: {
        a: 6378157.5,
        b: 6356772.2,
        ellipseName: "New International 1967"
    },
    plessis: {
        a: 6376523,
        rf: 6355863,
        ellipseName: "Plessis 1817 (France)"
    },
    krass: {
        a: 6378245,
        rf: 298.3,
        ellipseName: "Krassovsky, 1942"
    },
    SEasia: {
        a: 6378155,
        b: 6356773.3205,
        ellipseName: "Southeast Asia"
    },
    walbeck: {
        a: 6376896,
        b: 6355834.8467,
        ellipseName: "Walbeck"
    },
    WGS60: {
        a: 6378165,
        rf: 298.3,
        ellipseName: "WGS 60"
    },
    WGS66: {
        a: 6378145,
        rf: 298.25,
        ellipseName: "WGS 66"
    },
    WGS72: {
        a: 6378135,
        rf: 298.26,
        ellipseName: "WGS 72"
    },
    WGS84: {
        a: 6378137,
        rf: 298.257223563,
        ellipseName: "WGS 84"
    },
    sphere: {
        a: 6370997,
        b: 6370997,
        ellipseName: "Normal Sphere (r=6370997)"
    }
};
Proj4js.Datum = {
    WGS84: {
        towgs84: "0,0,0",
        ellipse: "WGS84",
        datumName: "WGS84"
    },
    GGRS87: {
        towgs84: "-199.87,74.79,246.62",
        ellipse: "GRS80",
        datumName: "Greek_Geodetic_Reference_System_1987"
    },
    NAD83: {
        towgs84: "0,0,0",
        ellipse: "GRS80",
        datumName: "North_American_Datum_1983"
    },
    NAD27: {
        nadgrids: "@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat",
        ellipse: "clrk66",
        datumName: "North_American_Datum_1927"
    },
    potsdam: {
        towgs84: "606.0,23.0,413.0",
        ellipse: "bessel",
        datumName: "Potsdam Rauenberg 1950 DHDN"
    },
    carthage: {
        towgs84: "-263.0,6.0,431.0",
        ellipse: "clark80",
        datumName: "Carthage 1934 Tunisia"
    },
    hermannskogel: {
        towgs84: "653.0,-212.0,449.0",
        ellipse: "bessel",
        datumName: "Hermannskogel"
    },
    ire65: {
        towgs84: "482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15",
        ellipse: "mod_airy",
        datumName: "Ireland 1965"
    },
    nzgd49: {
        towgs84: "59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993",
        ellipse: "intl",
        datumName: "New Zealand Geodetic Datum 1949"
    },
    OSGB36: {
        towgs84: "446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894",
        ellipse: "airy",
        datumName: "Airy 1830"
    }
};
Proj4js.WGS84 = new Proj4js.Proj("WGS84");
Proj4js.Datum.OSB36 = Proj4js.Datum.OSGB36;
Proj4js.wktProjections = {
    "Lambert Tangential Conformal Conic Projection": "lcc",
    Mercator: "merc",
    "Popular Visualisation Pseudo Mercator": "merc",
    Mercator_1SP: "merc",
    Transverse_Mercator: "tmerc",
    "Transverse Mercator": "tmerc",
    "Lambert Azimuthal Equal Area": "laea",
    "Universal Transverse Mercator System": "utm"
};
Proj4js.Proj.aea = {
    init: function() {
        Math.abs(this.lat1 + this.lat2) < Proj4js.common.EPSLN ? Proj4js.reportError("aeaInitEqualLatitudes") : (this.temp = this.b / this.a, this.es = 1 - Math.pow(this.temp, 2), this.e3 = Math.sqrt(this.es), this.sin_po = Math.sin(this.lat1), this.cos_po = Math.cos(this.lat1), this.con = this.t1 = this.sin_po, this.ms1 = Proj4js.common.msfnz(this.e3, this.sin_po, this.cos_po), this.qs1 = Proj4js.common.qsfnz(this.e3, this.sin_po, this.cos_po), this.sin_po = Math.sin(this.lat2), this.cos_po = Math.cos(this.lat2), this.t2 =
            this.sin_po, this.ms2 = Proj4js.common.msfnz(this.e3, this.sin_po, this.cos_po), this.qs2 = Proj4js.common.qsfnz(this.e3, this.sin_po, this.cos_po), this.sin_po = Math.sin(this.lat0), this.cos_po = Math.cos(this.lat0), this.t3 = this.sin_po, this.qs0 = Proj4js.common.qsfnz(this.e3, this.sin_po, this.cos_po), this.ns0 = Math.abs(this.lat1 - this.lat2) > Proj4js.common.EPSLN ? (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1) : this.con, this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1, this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) /
            this.ns0)
    },
    forward: function(a) {
        var d = a.x,
            b = a.y;
        this.sin_phi = Math.sin(b);
        this.cos_phi = Math.cos(b);
        var b = Proj4js.common.qsfnz(this.e3, this.sin_phi, this.cos_phi),
            b = this.a * Math.sqrt(this.c - this.ns0 * b) / this.ns0,
            e = this.ns0 * Proj4js.common.adjust_lon(d - this.long0),
            d = b * Math.sin(e) + this.x0,
            b = this.rh - b * Math.cos(e) + this.y0;
        a.x = d;
        a.y = b;
        return a
    },
    inverse: function(a) {
        var d, b, e;
        a.x -= this.x0;
        a.y = this.rh - a.y + this.y0;
        0 <= this.ns0 ? (d = Math.sqrt(a.x * a.x + a.y * a.y), b = 1) : (d = -Math.sqrt(a.x * a.x + a.y * a.y), b = -1);
        e = 0;
        0 != d && (e = Math.atan2(b *
            a.x, b * a.y));
        b = d * this.ns0 / this.a;
        d = (this.c - b * b) / this.ns0;
        1E-10 <= this.e3 ? (b = 1 - 0.5 * (1 - this.es) * Math.log((1 - this.e3) / (1 + this.e3)) / this.e3, b = 1E-10 < Math.abs(Math.abs(b) - Math.abs(d)) ? this.phi1z(this.e3, d) : 0 <= d ? 0.5 * Proj4js.common.PI : -0.5 * Proj4js.common.PI) : b = this.phi1z(this.e3, d);
        e = Proj4js.common.adjust_lon(e / this.ns0 + this.long0);
        a.x = e;
        a.y = b;
        return a
    },
    phi1z: function(a, d) {
        var b, e, f, g, h = Proj4js.common.asinz(0.5 * d);
        if (a < Proj4js.common.EPSLN) return h;
        for (var k = a * a, l = 1; 25 >= l; l++)
            if (b = Math.sin(h), e = Math.cos(h),
                f = a * b, g = 1 - f * f, b = 0.5 * g * g / e * (d / (1 - k) - b / g + 0.5 / a * Math.log((1 - f) / (1 + f))), h += b, 1E-7 >= Math.abs(b)) return h;
        Proj4js.reportError("aea:phi1z:Convergence error");
        return null
    }
};
Proj4js.Proj.sterea = {
    dependsOn: "gauss",
    init: function() {
        Proj4js.Proj.gauss.init.apply(this);
        this.rc ? (this.sinc0 = Math.sin(this.phic0), this.cosc0 = Math.cos(this.phic0), this.R2 = 2 * this.rc, this.title || (this.title = "Oblique Stereographic Alternative")) : Proj4js.reportError("sterea:init:E_ERROR_0")
    },
    forward: function(a) {
        var d, b, e, f;
        a.x = Proj4js.common.adjust_lon(a.x - this.long0);
        Proj4js.Proj.gauss.forward.apply(this, [a]);
        d = Math.sin(a.y);
        b = Math.cos(a.y);
        e = Math.cos(a.x);
        f = this.k0 * this.R2 / (1 + this.sinc0 * d + this.cosc0 *
            b * e);
        a.x = f * b * Math.sin(a.x);
        a.y = f * (this.cosc0 * d - this.sinc0 * b * e);
        a.x = this.a * a.x + this.x0;
        a.y = this.a * a.y + this.y0;
        return a
    },
    inverse: function(a) {
        var d, b, e, f;
        a.x = (a.x - this.x0) / this.a;
        a.y = (a.y - this.y0) / this.a;
        a.x /= this.k0;
        a.y /= this.k0;
        (f = Math.sqrt(a.x * a.x + a.y * a.y)) ? (e = 2 * Math.atan2(f, this.R2), d = Math.sin(e), b = Math.cos(e), e = Math.asin(b * this.sinc0 + a.y * d * this.cosc0 / f), d = Math.atan2(a.x * d, f * this.cosc0 * b - a.y * this.sinc0 * d)) : (e = this.phic0, d = 0);
        a.x = d;
        a.y = e;
        Proj4js.Proj.gauss.inverse.apply(this, [a]);
        a.x = Proj4js.common.adjust_lon(a.x +
            this.long0);
        return a
    }
};

function phi4z(a, d, b, e, f, g, h, k, l) {
    var n, m, p, s, q, v;
    l = g;
    for (v = 1; 15 >= v; v++)
        if (n = Math.sin(l), p = Math.tan(l), k = p * Math.sqrt(1 - a * n * n), m = Math.sin(2 * l), s = d * l - b * m + e * Math.sin(4 * l) - f * Math.sin(6 * l), q = d - 2 * b * Math.cos(2 * l) + 4 * e * Math.cos(4 * l) - 6 * f * Math.cos(6 * l), n = 2 * s + k * (s * s + h) - 2 * g * (k * s + 1), p = a * m * (s * s + h - 2 * g * s) / (2 * k), k = 2 * (g - s) * (k * q - 2 / m) - 2 * q, n /= p + k, l += n, 1E-10 >= Math.abs(n)) return l;
    Proj4js.reportError("phi4z: No convergence");
    return null
}

function e4fn(a) {
    var d;
    d = 1 + a;
    a = 1 - a;
    return Math.sqrt(Math.pow(d, d) * Math.pow(a, a))
}
Proj4js.Proj.poly = {
    init: function() {
        0 == this.lat0 && (this.lat0 = 90);
        this.temp = this.b / this.a;
        this.es = 1 - Math.pow(this.temp, 2);
        this.e = Math.sqrt(this.es);
        this.e0 = Proj4js.common.e0fn(this.es);
        this.e1 = Proj4js.common.e1fn(this.es);
        this.e2 = Proj4js.common.e2fn(this.es);
        this.e3 = Proj4js.common.e3fn(this.es);
        this.ml0 = Proj4js.common.mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0)
    },
    forward: function(a) {
        var d, b, e, f, g;
        e = a.y;
        b = Proj4js.common.adjust_lon(a.x - this.long0);
        1E-7 >= Math.abs(e) ? (g = this.x0 + this.a * b, d = this.y0 - this.a *
            this.ml0) : (d = Math.sin(e), b = Math.cos(e), e = Proj4js.common.mlfn(this.e0, this.e1, this.e2, this.e3, e), f = Proj4js.common.msfnz(this.e, d, b), b = d, g = this.x0 + this.a * f * Math.sin(b) / d, d = this.y0 + this.a * (e - this.ml0 + f * (1 - Math.cos(b)) / d));
        a.x = g;
        a.y = d;
        return a
    },
    inverse: function(a) {
        var d, b;
        a.x -= this.x0;
        a.y -= this.y0;
        d = this.ml0 + a.y / this.a;
        if (1E-7 >= Math.abs(d)) d = a.x / this.a + this.long0, b = 0;
        else {
            d = d * d + a.x / this.a * (a.x / this.a);
            d = phi4z(this.es, this.e0, this.e1, this.e2, this.e3, this.al, d, void 0, b);
            if (1 != d) return d;
            d = Proj4js.common.adjust_lon(Proj4js.common.asinz(NaN *
                a.x / this.a) / Math.sin(b) + this.long0)
        }
        a.x = d;
        a.y = b;
        return a
    }
};
Proj4js.Proj.equi = {
    init: function() {
        this.x0 || (this.x0 = 0);
        this.y0 || (this.y0 = 0);
        this.lat0 || (this.lat0 = 0);
        this.long0 || (this.long0 = 0)
    },
    forward: function(a) {
        var d = a.y,
            b = this.x0 + this.a * Proj4js.common.adjust_lon(a.x - this.long0) * Math.cos(this.lat0),
            d = this.y0 + this.a * d;
        this.t1 = b;
        this.t2 = Math.cos(this.lat0);
        a.x = b;
        a.y = d;
        return a
    },
    inverse: function(a) {
        a.x -= this.x0;
        a.y -= this.y0;
        var d = a.y / this.a;
        Math.abs(d) > Proj4js.common.HALF_PI && Proj4js.reportError("equi:Inv:DataError");
        var b = Proj4js.common.adjust_lon(this.long0 +
            a.x / (this.a * Math.cos(this.lat0)));
        a.x = b;
        a.y = d
    }
};
Proj4js.Proj.merc = {
    init: function() {
        this.lat_ts && (this.k0 = this.sphere ? Math.cos(this.lat_ts) : Proj4js.common.msfnz(this.es, Math.sin(this.lat_ts), Math.cos(this.lat_ts)))
    },
    forward: function(a) {
        var d = a.x,
            b = a.y;
        if (90 < b * Proj4js.common.R2D && -90 > b * Proj4js.common.R2D && 180 < d * Proj4js.common.R2D && -180 > d * Proj4js.common.R2D) return Proj4js.reportError("merc:forward: llInputOutOfRange: " + d + " : " + b), null;
        if (Math.abs(Math.abs(b) - Proj4js.common.HALF_PI) <= Proj4js.common.EPSLN) return Proj4js.reportError("merc:forward: ll2mAtPoles"), null;
        if (this.sphere) d = this.x0 + this.a * this.k0 * Proj4js.common.adjust_lon(d - this.long0), b = this.y0 + this.a * this.k0 * Math.log(Math.tan(Proj4js.common.FORTPI + 0.5 * b));
        else var e = Math.sin(b),
            b = Proj4js.common.tsfnz(this.e, b, e),
            d = this.x0 + this.a * this.k0 * Proj4js.common.adjust_lon(d - this.long0),
            b = this.y0 - this.a * this.k0 * Math.log(b);
        a.x = d;
        a.y = b;
        return a
    },
    inverse: function(a) {
        var d = a.x - this.x0,
            b = a.y - this.y0;
        if (this.sphere) b = Proj4js.common.HALF_PI - 2 * Math.atan(Math.exp(-b / this.a * this.k0));
        else if (b = Math.exp(-b / (this.a * this.k0)),
            b = Proj4js.common.phi2z(this.e, b), -9999 == b) return Proj4js.reportError("merc:inverse: lat = -9999"), null;
        d = Proj4js.common.adjust_lon(this.long0 + d / (this.a * this.k0));
        a.x = d;
        a.y = b;
        return a
    }
};
Proj4js.Proj.utm = {
    dependsOn: "tmerc",
    init: function() {
        this.zone ? (this.lat0 = 0, this.long0 = (6 * Math.abs(this.zone) - 183) * Proj4js.common.D2R, this.x0 = 5E5, this.y0 = this.utmSouth ? 1E7 : 0, this.k0 = 0.9996, Proj4js.Proj.tmerc.init.apply(this), this.forward = Proj4js.Proj.tmerc.forward, this.inverse = Proj4js.Proj.tmerc.inverse) : Proj4js.reportError("utm:init: zone must be specified for UTM")
    }
};
Proj4js.Proj.eqdc = {
    init: function() {
        this.mode || (this.mode = 0);
        this.temp = this.b / this.a;
        this.es = 1 - Math.pow(this.temp, 2);
        this.e = Math.sqrt(this.es);
        this.e0 = Proj4js.common.e0fn(this.es);
        this.e1 = Proj4js.common.e1fn(this.es);
        this.e2 = Proj4js.common.e2fn(this.es);
        this.e3 = Proj4js.common.e3fn(this.es);
        this.sinphi = Math.sin(this.lat1);
        this.cosphi = Math.cos(this.lat1);
        this.ms1 = Proj4js.common.msfnz(this.e, this.sinphi, this.cosphi);
        this.ml1 = Proj4js.common.mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);
        0 != this.mode ?
            (Math.abs(this.lat1 + this.lat2) < Proj4js.common.EPSLN && Proj4js.reportError("eqdc:Init:EqualLatitudes"), this.sinphi = Math.sin(this.lat2), this.cosphi = Math.cos(this.lat2), this.ms2 = Proj4js.common.msfnz(this.e, this.sinphi, this.cosphi), this.ml2 = Proj4js.common.mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2), this.ns = Math.abs(this.lat1 - this.lat2) >= Proj4js.common.EPSLN ? (this.ms1 - this.ms2) / (this.ml2 - this.ml1) : this.sinphi) : this.ns = this.sinphi;
        this.g = this.ml1 + this.ms1 / this.ns;
        this.ml0 = Proj4js.common.mlfn(this.e0,
            this.e1, this.e2, this.e3, this.lat0);
        this.rh = this.a * (this.g - this.ml0)
    },
    forward: function(a) {
        var d = a.x,
            b = this.a * (this.g - Proj4js.common.mlfn(this.e0, this.e1, this.e2, this.e3, a.y)),
            e = this.ns * Proj4js.common.adjust_lon(d - this.long0),
            d = this.x0 + b * Math.sin(e),
            b = this.y0 + this.rh - b * Math.cos(e);
        a.x = d;
        a.y = b;
        return a
    },
    inverse: function(a) {
        a.x -= this.x0;
        a.y = this.rh - a.y + this.y0;
        var d, b;
        0 <= this.ns ? (b = Math.sqrt(a.x * a.x + a.y * a.y), d = 1) : (b = -Math.sqrt(a.x * a.x + a.y * a.y), d = -1);
        var e = 0;
        0 != b && (e = Math.atan2(d * a.x, d * a.y));
        d = this.phi3z(this.g -
            b / this.a, this.e0, this.e1, this.e2, this.e3);
        e = Proj4js.common.adjust_lon(this.long0 + e / this.ns);
        a.x = e;
        a.y = d;
        return a
    },
    phi3z: function(a, d, b, e, f) {
        var g, h;
        g = a;
        for (var k = 0; 15 > k; k++)
            if (h = (a + b * Math.sin(2 * g) - e * Math.sin(4 * g) + f * Math.sin(6 * g)) / d - g, g += h, 1E-10 >= Math.abs(h)) return g;
        Proj4js.reportError("PHI3Z-CONV:Latitude failed to converge after 15 iterations");
        return null
    }
};
Proj4js.Proj.tmerc = {
    init: function() {
        this.e0 = Proj4js.common.e0fn(this.es);
        this.e1 = Proj4js.common.e1fn(this.es);
        this.e2 = Proj4js.common.e2fn(this.es);
        this.e3 = Proj4js.common.e3fn(this.es);
        this.ml0 = this.a * Proj4js.common.mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0)
    },
    forward: function(a) {
        var d = a.y,
            b = Proj4js.common.adjust_lon(a.x - this.long0),
            e, f;
        e = Math.sin(d);
        var g = Math.cos(d);
        if (this.sphere) {
            var h = g * Math.sin(b);
            if (1E-10 > Math.abs(Math.abs(h) - 1)) return Proj4js.reportError("tmerc:forward: Point projects into infinity"),
                93;
            f = 0.5 * this.a * this.k0 * Math.log((1 + h) / (1 - h));
            e = Math.acos(g * Math.cos(b) / Math.sqrt(1 - h * h));
            0 > d && (e = -e);
            d = this.a * this.k0 * (e - this.lat0)
        } else {
            f = g * b;
            var b = Math.pow(f, 2),
                g = this.ep2 * Math.pow(g, 2),
                h = Math.tan(d),
                k = Math.pow(h, 2);
            e = 1 - this.es * Math.pow(e, 2);
            e = this.a / Math.sqrt(e);
            d = this.a * Proj4js.common.mlfn(this.e0, this.e1, this.e2, this.e3, d);
            f = this.k0 * e * f * (1 + b / 6 * (1 - k + g + b / 20 * (5 - 18 * k + Math.pow(k, 2) + 72 * g - 58 * this.ep2))) + this.x0;
            d = this.k0 * (d - this.ml0 + e * h * b * (0.5 + b / 24 * (5 - k + 9 * g + 4 * Math.pow(g, 2) + b / 30 * (61 - 58 * k + Math.pow(k,
                2) + 600 * g - 330 * this.ep2)))) + this.y0
        }
        a.x = f;
        a.y = d;
        return a
    },
    inverse: function(a) {
        var d, b, e, f;
        if (this.sphere) {
            b = Math.exp(a.x / (this.a * this.k0));
            var g = 0.5 * (b - 1 / b);
            e = this.lat0 + a.y / (this.a * this.k0);
            f = Math.cos(e);
            d = Math.sqrt((1 - f * f) / (1 + g * g));
            b = Proj4js.common.asinz(d);
            0 > e && (b = -b);
            d = 0 == g && 0 == f ? this.long0 : Proj4js.common.adjust_lon(Math.atan2(g, f) + this.long0)
        } else {
            var g = a.x - this.x0,
                h = a.y - this.y0;
            b = d = (this.ml0 + h / this.k0) / this.a;
            for (f = 0;; f++) {
                e = (d + this.e1 * Math.sin(2 * b) - this.e2 * Math.sin(4 * b) + this.e3 * Math.sin(6 * b)) /
                    this.e0 - b;
                b += e;
                if (Math.abs(e) <= Proj4js.common.EPSLN) break;
                if (6 <= f) return Proj4js.reportError("tmerc:inverse: Latitude failed to converge"), 95
            }
            if (Math.abs(b) < Proj4js.common.HALF_PI) {
                d = Math.sin(b);
                e = Math.cos(b);
                var k = Math.tan(b);
                f = this.ep2 * Math.pow(e, 2);
                var h = Math.pow(f, 2),
                    l = Math.pow(k, 2),
                    n = Math.pow(l, 2);
                d = 1 - this.es * Math.pow(d, 2);
                var m = this.a / Math.sqrt(d);
                d = m * (1 - this.es) / d;
                var g = g / (m * this.k0),
                    p = Math.pow(g, 2);
                b -= m * k * p / d * (0.5 - p / 24 * (5 + 3 * l + 10 * f - 4 * h - 9 * this.ep2 - p / 30 * (61 + 90 * l + 298 * f + 45 * n - 252 * this.ep2 - 3 * h)));
                d = Proj4js.common.adjust_lon(this.long0 + g * (1 - p / 6 * (1 + 2 * l + f - p / 20 * (5 - 2 * f + 28 * l - 3 * h + 8 * this.ep2 + 24 * n))) / e)
            } else b = Proj4js.common.HALF_PI * Proj4js.common.sign(h), d = this.long0
        }
        a.x = d;
        a.y = b;
        return a
    }
};
Proj4js.defs.GOOGLE = "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs";
Proj4js.defs["EPSG:900913"] = Proj4js.defs.GOOGLE;
Proj4js.Proj.gstmerc = {
    init: function() {
        var a = this.b / this.a;
        this.e = Math.sqrt(1 - a * a);
        this.lc = this.long0;
        this.rs = Math.sqrt(1 + this.e * this.e * Math.pow(Math.cos(this.lat0), 4) / (1 - this.e * this.e));
        var a = Math.sin(this.lat0),
            d = Math.asin(a / this.rs),
            b = Math.sin(d);
        this.cp = Proj4js.common.latiso(0, d, b) - this.rs * Proj4js.common.latiso(this.e, this.lat0, a);
        this.n2 = this.k0 * this.a * Math.sqrt(1 - this.e * this.e) / (1 - this.e * this.e * a * a);
        this.xs = this.x0;
        this.ys = this.y0 - this.n2 * d;
        this.title || (this.title = "Gauss Schreiber transverse mercator")
    },
    forward: function(a) {
        var d = a.y,
            b = this.rs * (a.x - this.lc),
            d = this.cp + this.rs * Proj4js.common.latiso(this.e, d, Math.sin(d)),
            e = Math.asin(Math.sin(b) / Proj4js.common.cosh(d)),
            e = Proj4js.common.latiso(0, e, Math.sin(e));
        a.x = this.xs + this.n2 * e;
        a.y = this.ys + this.n2 * Math.atan(Proj4js.common.sinh(d) / Math.cos(b));
        return a
    },
    inverse: function(a) {
        var d = a.x,
            b = a.y,
            e = Math.atan(Proj4js.common.sinh((d - this.xs) / this.n2) / Math.cos((b - this.ys) / this.n2)),
            d = Math.asin(Math.sin((b - this.ys) / this.n2) / Proj4js.common.cosh((d - this.xs) / this.n2)),
            d = Proj4js.common.latiso(0, d, Math.sin(d));
        a.x = this.lc + e / this.rs;
        a.y = Proj4js.common.invlatiso(this.e, (d - this.cp) / this.rs);
        return a
    }
};
Proj4js.Proj.ortho = {
    init: function() {
        this.sin_p14 = Math.sin(this.lat0);
        this.cos_p14 = Math.cos(this.lat0)
    },
    forward: function(a) {
        var d, b, e, f, g;
        b = a.y;
        e = Proj4js.common.adjust_lon(a.x - this.long0);
        d = Math.sin(b);
        b = Math.cos(b);
        f = Math.cos(e);
        g = this.sin_p14 * d + this.cos_p14 * b * f;
        if (0 < g || Math.abs(g) <= Proj4js.common.EPSLN) var h = 1 * this.a * b * Math.sin(e),
            k = this.y0 + 1 * this.a * (this.cos_p14 * d - this.sin_p14 * b * f);
        else Proj4js.reportError("orthoFwdPointError");
        a.x = h;
        a.y = k;
        return a
    },
    inverse: function(a) {
        var d, b, e, f;
        a.x -= this.x0;
        a.y -= this.y0;
        d = Math.sqrt(a.x * a.x + a.y * a.y);
        d > this.a + 1E-7 && Proj4js.reportError("orthoInvDataError");
        b = Proj4js.common.asinz(d / this.a);
        e = Math.sin(b);
        f = Math.cos(b);
        b = this.long0;
        Math.abs(d);
        e = Proj4js.common.asinz(f * this.sin_p14 + a.y * e * this.cos_p14 / d);
        d = Math.abs(this.lat0) - Proj4js.common.HALF_PI;
        Math.abs(d) <= Proj4js.common.EPSLN && (b = 0 <= this.lat0 ? Proj4js.common.adjust_lon(this.long0 + Math.atan2(a.x, -a.y)) : Proj4js.common.adjust_lon(this.long0 - Math.atan2(-a.x, a.y)));
        Math.sin(e);
        a.x = b;
        a.y = e;
        return a
    }
};
Proj4js.Proj.krovak = {
    init: function() {
        this.a = 6377397.155;
        this.es = 0.006674372230614;
        this.e = Math.sqrt(this.es);
        this.lat0 || (this.lat0 = 0.863937979737193);
        this.long0 || (this.long0 = 0.4334234309119251);
        this.k0 || (this.k0 = 0.9999);
        this.s45 = 0.785398163397448;
        this.s90 = 2 * this.s45;
        this.fi0 = this.lat0;
        this.e2 = this.es;
        this.e = Math.sqrt(this.e2);
        this.alfa = Math.sqrt(1 + this.e2 * Math.pow(Math.cos(this.fi0), 4) / (1 - this.e2));
        this.uq = 1.04216856380474;
        this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);
        this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) /
            (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);
        this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;
        this.k1 = this.k0;
        this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));
        this.s0 = 1.37008346281555;
        this.n = Math.sin(this.s0);
        this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);
        this.ad = this.s90 - this.uq
    },
    forward: function(a) {
        var d, b, e;
        b = a.y;
        e = Proj4js.common.adjust_lon(a.x - this.long0);
        d = Math.pow((1 + this.e * Math.sin(b)) / (1 - this.e * Math.sin(b)), this.alfa *
            this.e / 2);
        d = 2 * (Math.atan(this.k * Math.pow(Math.tan(b / 2 + this.s45), this.alfa) / d) - this.s45);
        b = -e * this.alfa;
        e = Math.asin(Math.cos(this.ad) * Math.sin(d) + Math.sin(this.ad) * Math.cos(d) * Math.cos(b));
        d = this.n * Math.asin(Math.cos(d) * Math.sin(b) / Math.cos(e));
        e = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(e / 2 + this.s45), this.n);
        a.y = e * Math.cos(d) / 1;
        a.x = e * Math.sin(d) / 1;
        this.czech && (a.y *= -1, a.x *= -1);
        return a
    },
    inverse: function(a) {
        var d, b, e;
        d = a.x;
        a.x = a.y;
        a.y = d;
        this.czech && (a.y *= -1, a.x *= -1);
        d = Math.sqrt(a.x * a.x + a.y * a.y);
        b = Math.atan2(a.y, a.x) / Math.sin(this.s0);
        e = 2 * (Math.atan(Math.pow(this.ro0 / d, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);
        d = Math.asin(Math.cos(this.ad) * Math.sin(e) - Math.sin(this.ad) * Math.cos(e) * Math.cos(b));
        b = Math.asin(Math.cos(e) * Math.sin(b) / Math.cos(d));
        a.x = this.long0 - b / this.alfa;
        b = d;
        var f = e = 0;
        do a.y = 2 * (Math.atan(Math.pow(this.k, -1 / this.alfa) * Math.pow(Math.tan(d / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(b)) / (1 - this.e * Math.sin(b)), this.e / 2)) - this.s45), 1E-10 >
            Math.abs(b - a.y) && (e = 1), b = a.y, f += 1; while (0 == e && 15 > f);
        return 15 <= f ? (Proj4js.reportError("PHI3Z-CONV:Latitude failed to converge after 15 iterations"), null) : a
    }
};
Proj4js.Proj.somerc = {
    init: function() {
        var a = this.lat0;
        this.lambda0 = this.long0;
        var d = Math.sin(a),
            b = this.a,
            e = 1 / this.rf,
            e = 2 * e - Math.pow(e, 2),
            f = this.e = Math.sqrt(e);
        this.R = this.k0 * b * Math.sqrt(1 - e) / (1 - e * Math.pow(d, 2));
        this.alpha = Math.sqrt(1 + e / (1 - e) * Math.pow(Math.cos(a), 4));
        this.b0 = Math.asin(d / this.alpha);
        this.K = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2)) - this.alpha * Math.log(Math.tan(Math.PI / 4 + a / 2)) + this.alpha * f / 2 * Math.log((1 + f * d) / (1 - f * d))
    },
    forward: function(a) {
        var d = Math.log(Math.tan(Math.PI / 4 - a.y / 2)),
            b = this.e /
            2 * Math.log((1 + this.e * Math.sin(a.y)) / (1 - this.e * Math.sin(a.y))),
            b = 2 * (Math.atan(Math.exp(-this.alpha * (d + b) + this.K)) - Math.PI / 4),
            e = this.alpha * (a.x - this.lambda0),
            d = Math.atan(Math.sin(e) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(e))),
            b = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(e));
        a.y = this.R / 2 * Math.log((1 + Math.sin(b)) / (1 - Math.sin(b))) + this.y0;
        a.x = this.R * d + this.x0;
        return a
    },
    inverse: function(a) {
        for (var d = (a.x - this.x0) / this.R, b = 2 * (Math.atan(Math.exp((a.y -
                this.y0) / this.R)) - Math.PI / 4), e = Math.asin(Math.cos(this.b0) * Math.sin(b) + Math.sin(this.b0) * Math.cos(b) * Math.cos(d)), d = this.lambda0 + Math.atan(Math.sin(d) / (Math.cos(this.b0) * Math.cos(d) - Math.sin(this.b0) * Math.tan(b))) / this.alpha, f = e, g = -1E3, h = 0; 1E-7 < Math.abs(f - g);) {
            if (20 < ++h) {
                Proj4js.reportError("omercFwdInfinity");
                return
            }
            b = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + e / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(f)) / 2));
            g = f;
            f = 2 * Math.atan(Math.exp(b)) - Math.PI / 2
        }
        a.x = d;
        a.y = f;
        return a
    }
};
Proj4js.Proj.stere = {
    ssfn_: function(a, d, b) {
        d *= b;
        return Math.tan(0.5 * (Proj4js.common.HALF_PI + a)) * Math.pow((1 - d) / (1 + d), 0.5 * b)
    },
    TOL: 1E-8,
    NITER: 8,
    CONV: 1E-10,
    S_POLE: 0,
    N_POLE: 1,
    OBLIQ: 2,
    EQUIT: 3,
    init: function() {
        this.phits = this.lat_ts ? this.lat_ts : Proj4js.common.HALF_PI;
        var a = Math.abs(this.lat0);
        this.mode = Math.abs(a) - Proj4js.common.HALF_PI < Proj4js.common.EPSLN ? 0 > this.lat0 ? this.S_POLE : this.N_POLE : a > Proj4js.common.EPSLN ? this.OBLIQ : this.EQUIT;
        this.phits = Math.abs(this.phits);
        if (this.es) {
            var d;
            switch (this.mode) {
                case this.N_POLE:
                case this.S_POLE:
                    Math.abs(this.phits -
                        Proj4js.common.HALF_PI) < Proj4js.common.EPSLN ? this.akm1 = 2 * this.k0 / Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e)) : (a = Math.sin(this.phits), this.akm1 = Math.cos(this.phits) / Proj4js.common.tsfnz(this.e, this.phits, a), a *= this.e, this.akm1 /= Math.sqrt(1 - a * a));
                    break;
                case this.EQUIT:
                    this.akm1 = 2 * this.k0;
                    break;
                case this.OBLIQ:
                    a = Math.sin(this.lat0), d = 2 * Math.atan(this.ssfn_(this.lat0, a, this.e)) - Proj4js.common.HALF_PI, a *= this.e, this.akm1 = 2 * this.k0 * Math.cos(this.lat0) / Math.sqrt(1 - a * a), this.sinX1 =
                        Math.sin(d), this.cosX1 = Math.cos(d)
            }
        } else switch (this.mode) {
            case this.OBLIQ:
                this.sinph0 = Math.sin(this.lat0), this.cosph0 = Math.cos(this.lat0);
            case this.EQUIT:
                this.akm1 = 2 * this.k0;
                break;
            case this.S_POLE:
            case this.N_POLE:
                this.akm1 = Math.abs(this.phits - Proj4js.common.HALF_PI) >= Proj4js.common.EPSLN ? Math.cos(this.phits) / Math.tan(Proj4js.common.FORTPI - 0.5 * this.phits) : 2 * this.k0
        }
    },
    forward: function(a) {
        var d = a.x,
            d = Proj4js.common.adjust_lon(d - this.long0),
            b = a.y,
            e, f;
        if (this.sphere) {
            var g, h, k;
            g = Math.sin(b);
            h = Math.cos(b);
            k = Math.cos(d);
            d = Math.sin(d);
            switch (this.mode) {
                case this.EQUIT:
                    f = 1 + h * k;
                    f <= Proj4js.common.EPSLN && Proj4js.reportError("stere:forward:Equit");
                    f = this.akm1 / f;
                    e = f * h * d;
                    f *= g;
                    break;
                case this.OBLIQ:
                    f = 1 + this.sinph0 * g + this.cosph0 * h * k;
                    f <= Proj4js.common.EPSLN && Proj4js.reportError("stere:forward:Obliq");
                    f = this.akm1 / f;
                    e = f * h * d;
                    f *= this.cosph0 * g - this.sinph0 * h * k;
                    break;
                case this.N_POLE:
                    k = -k, b = -b;
                case this.S_POLE:
                    Math.abs(b - Proj4js.common.HALF_PI) < this.TOL && Proj4js.reportError("stere:forward:S_POLE"), f = this.akm1 * Math.tan(Proj4js.common.FORTPI +
                        0.5 * b), e = d * f, f *= k
            }
        } else {
            k = Math.cos(d);
            d = Math.sin(d);
            g = Math.sin(b);
            var l;
            if (this.mode == this.OBLIQ || this.mode == this.EQUIT) l = 2 * Math.atan(this.ssfn_(b, g, this.e)), h = Math.sin(l - Proj4js.common.HALF_PI), l = Math.cos(l);
            switch (this.mode) {
                case this.OBLIQ:
                    b = this.akm1 / (this.cosX1 * (1 + this.sinX1 * h + this.cosX1 * l * k));
                    f = b * (this.cosX1 * h - this.sinX1 * l * k);
                    e = b * l;
                    break;
                case this.EQUIT:
                    b = 2 * this.akm1 / (1 + l * k);
                    f = b * h;
                    e = b * l;
                    break;
                case this.S_POLE:
                    b = -b, k = -k, g = -g;
                case this.N_POLE:
                    e = this.akm1 * Proj4js.common.tsfnz(this.e, b, g), f = -e *
                        k
            }
            e *= d
        }
        a.x = e * this.a + this.x0;
        a.y = f * this.a + this.y0;
        return a
    },
    inverse: function(a) {
        var d = (a.x - this.x0) / this.a,
            b = (a.y - this.y0) / this.a,
            e, f, g, h = e = 0,
            k, l = g = 0;
        if (this.sphere) {
            h = Math.sqrt(d * d + b * b);
            l = 2 * Math.atan(h / this.akm1);
            g = Math.sin(l);
            l = Math.cos(l);
            e = 0;
            switch (this.mode) {
                case this.EQUIT:
                    f = Math.abs(h) <= Proj4js.common.EPSLN ? 0 : Math.asin(b * g / h);
                    if (0 != l || 0 != d) e = Math.atan2(d * g, l * h);
                    break;
                case this.OBLIQ:
                    f = Math.abs(h) <= Proj4js.common.EPSLN ? this.phi0 : Math.asin(l * this.sinph0 + b * g * this.cosph0 / h);
                    l -= this.sinph0 * Math.sin(f);
                    if (0 != l || 0 != d) e = Math.atan2(d * g * this.cosph0, l * h);
                    break;
                case this.N_POLE:
                    b = -b;
                case this.S_POLE:
                    f = Math.abs(h) <= Proj4js.common.EPSLN ? this.phi0 : Math.asin(this.mode == this.S_POLE ? -l : l), e = 0 == d && 0 == b ? 0 : Math.atan2(d, b)
            }
            a.x = Proj4js.common.adjust_lon(e + this.long0);
            a.y = f
        } else {
            k = Math.sqrt(d * d + b * b);
            switch (this.mode) {
                case this.OBLIQ:
                case this.EQUIT:
                    e = 2 * Math.atan2(k * this.cosX1, this.akm1);
                    g = Math.cos(e);
                    f = Math.sin(e);
                    h = 0 == k ? Math.asin(g * this.sinX1) : Math.asin(g * this.sinX1 + b * f * this.cosX1 / k);
                    e = Math.tan(0.5 * (Proj4js.common.HALF_PI +
                        h));
                    d *= f;
                    b = k * this.cosX1 * g - b * this.sinX1 * f;
                    l = Proj4js.common.HALF_PI;
                    g = 0.5 * this.e;
                    break;
                case this.N_POLE:
                    b = -b;
                case this.S_POLE:
                    e = -k / this.akm1, h = Proj4js.common.HALF_PI - 2 * Math.atan(e), l = -Proj4js.common.HALF_PI, g = -0.5 * this.e
            }
            for (k = this.NITER; k--; h = f)
                if (f = this.e * Math.sin(h), f = 2 * Math.atan(e * Math.pow((1 + f) / (1 - f), g)) - l, Math.abs(h - f) < this.CONV) return this.mode == this.S_POLE && (f = -f), e = 0 == d && 0 == b ? 0 : Math.atan2(d, b), a.x = Proj4js.common.adjust_lon(e + this.long0), a.y = f, a
        }
    }
};
Proj4js.Proj.nzmg = {
    iterations: 1,
    init: function() {
        this.A = [];
        this.A[1] = 0.6399175073;
        this.A[2] = -0.1358797613;
        this.A[3] = 0.063294409;
        this.A[4] = -0.02526853;
        this.A[5] = 0.0117879;
        this.A[6] = -0.0055161;
        this.A[7] = 0.0026906;
        this.A[8] = -0.001333;
        this.A[9] = 6.7E-4;
        this.A[10] = -3.4E-4;
        this.B_re = [];
        this.B_im = [];
        this.B_re[1] = 0.7557853228;
        this.B_im[1] = 0;
        this.B_re[2] = 0.249204646;
        this.B_im[2] = 0.003371507;
        this.B_re[3] = -0.001541739;
        this.B_im[3] = 0.04105856;
        this.B_re[4] = -0.10162907;
        this.B_im[4] = 0.01727609;
        this.B_re[5] = -0.26623489;
        this.B_im[5] = -0.36249218;
        this.B_re[6] = -0.6870983;
        this.B_im[6] = -1.1651967;
        this.C_re = [];
        this.C_im = [];
        this.C_re[1] = 1.3231270439;
        this.C_im[1] = 0;
        this.C_re[2] = -0.577245789;
        this.C_im[2] = -0.007809598;
        this.C_re[3] = 0.508307513;
        this.C_im[3] = -0.112208952;
        this.C_re[4] = -0.15094762;
        this.C_im[4] = 0.18200602;
        this.C_re[5] = 1.01418179;
        this.C_im[5] = 1.64497696;
        this.C_re[6] = 1.9660549;
        this.C_im[6] = 2.5127645;
        this.D = [];
        this.D[1] = 1.5627014243;
        this.D[2] = 0.5185406398;
        this.D[3] = -0.03333098;
        this.D[4] = -0.1052906;
        this.D[5] = -0.0368594;
        this.D[6] = 0.007317;
        this.D[7] = 0.0122;
        this.D[8] = 0.00394;
        this.D[9] = -0.0013
    },
    forward: function(a) {
        for (var d = 1E-5 * ((a.y - this.lat0) / Proj4js.common.SEC_TO_RAD), b = a.x - this.long0, e = 1, f = 0, g = 1; 10 >= g; g++) e *= d, f += this.A[g] * e;
        for (var d = f, e = 1, h = 0, k = 0, l = 0, g = 1; 6 >= g; g++) f = e * d - h * b, h = h * d + e * b, e = f, k = k + this.B_re[g] * e - this.B_im[g] * h, l = l + this.B_im[g] * e + this.B_re[g] * h;
        a.x = l * this.a + this.x0;
        a.y = k * this.a + this.y0;
        return a
    },
    inverse: function(a) {
        for (var d = (a.y - this.y0) / this.a, b = (a.x - this.x0) / this.a, e = 1, f = 0, g, h = 0, k = 0, l = 1; 6 >= l; l++) g =
            e * d - f * b, f = f * d + e * b, e = g, h = h + this.C_re[l] * e - this.C_im[l] * f, k = k + this.C_im[l] * e + this.C_re[l] * f;
        for (e = 0; e < this.iterations; e++) {
            var n = h,
                m = k,
                p;
            g = d;
            f = b;
            for (l = 2; 6 >= l; l++) p = n * h - m * k, m = m * h + n * k, n = p, g += (l - 1) * (this.B_re[l] * n - this.B_im[l] * m), f += (l - 1) * (this.B_im[l] * n + this.B_re[l] * m);
            for (var n = 1, m = 0, s = this.B_re[1], q = this.B_im[1], l = 2; 6 >= l; l++) p = n * h - m * k, m = m * h + n * k, n = p, s += l * (this.B_re[l] * n - this.B_im[l] * m), q += l * (this.B_im[l] * n + this.B_re[l] * m);
            k = s * s + q * q;
            h = (g * s + f * q) / k;
            k = (f * s - g * q) / k
        }
        d = h;
        b = 1;
        h = 0;
        for (l = 1; 9 >= l; l++) b *= d, h += this.D[l] *
            b;
        l = this.lat0 + 1E5 * h * Proj4js.common.SEC_TO_RAD;
        a.x = this.long0 + k;
        a.y = l;
        return a
    }
};
Proj4js.Proj.mill = {
    init: function() {},
    forward: function(a) {
        var d = a.y,
            b = this.x0 + this.a * Proj4js.common.adjust_lon(a.x - this.long0),
            d = this.y0 + 1.25 * this.a * Math.log(Math.tan(Proj4js.common.PI / 4 + d / 2.5));
        a.x = b;
        a.y = d;
        return a
    },
    inverse: function(a) {
        a.x -= this.x0;
        a.y -= this.y0;
        var d = Proj4js.common.adjust_lon(this.long0 + a.x / this.a),
            b = 2.5 * (Math.atan(Math.exp(0.8 * a.y / this.a)) - Proj4js.common.PI / 4);
        a.x = d;
        a.y = b;
        return a
    }
};
Proj4js.Proj.gnom = {
    init: function() {
        this.sin_p14 = Math.sin(this.lat0);
        this.cos_p14 = Math.cos(this.lat0);
        this.infinity_dist = 1E3 * this.a;
        this.rc = 1
    },
    forward: function(a) {
        var d, b, e, f, g;
        b = a.y;
        e = Proj4js.common.adjust_lon(a.x - this.long0);
        d = Math.sin(b);
        b = Math.cos(b);
        f = Math.cos(e);
        g = this.sin_p14 * d + this.cos_p14 * b * f;
        0 < g || Math.abs(g) <= Proj4js.common.EPSLN ? (e = this.x0 + 1 * this.a * b * Math.sin(e) / g, d = this.y0 + 1 * this.a * (this.cos_p14 * d - this.sin_p14 * b * f) / g) : (Proj4js.reportError("orthoFwdPointError"), e = this.x0 + this.infinity_dist *
            b * Math.sin(e), d = this.y0 + this.infinity_dist * (this.cos_p14 * d - this.sin_p14 * b * f));
        a.x = e;
        a.y = d;
        return a
    },
    inverse: function(a) {
        var d, b, e, f;
        a.x = (a.x - this.x0) / this.a;
        a.y = (a.y - this.y0) / this.a;
        a.x /= this.k0;
        a.y /= this.k0;
        (d = Math.sqrt(a.x * a.x + a.y * a.y)) ? (f = Math.atan2(d, this.rc), b = Math.sin(f), e = Math.cos(f), f = Proj4js.common.asinz(e * this.sin_p14 + a.y * b * this.cos_p14 / d), d = Math.atan2(a.x * b, d * this.cos_p14 * e - a.y * this.sin_p14 * b), d = Proj4js.common.adjust_lon(this.long0 + d)) : (f = this.phic0, d = 0);
        a.x = d;
        a.y = f;
        return a
    }
};
Proj4js.Proj.sinu = {
    init: function() {
        this.sphere ? (this.n = 1, this.es = this.m = 0, this.C_y = Math.sqrt((this.m + 1) / this.n), this.C_x = this.C_y / (this.m + 1)) : this.en = Proj4js.common.pj_enfn(this.es)
    },
    forward: function(a) {
        var d, b;
        d = a.x;
        b = a.y;
        d = Proj4js.common.adjust_lon(d - this.long0);
        if (this.sphere) {
            if (this.m)
                for (var e = this.n * Math.sin(b), f = Proj4js.common.MAX_ITER; f; --f) {
                    var g = (this.m * b + Math.sin(b) - e) / (this.m + Math.cos(b));
                    b -= g;
                    if (Math.abs(g) < Proj4js.common.EPSLN) break
                } else b = 1 != this.n ? Math.asin(this.n * Math.sin(b)) : b;
            d = this.a * this.C_x * d * (this.m + Math.cos(b));
            b = b * this.a * this.C_y
        } else e = Math.sin(b), f = Math.cos(b), b = this.a * Proj4js.common.pj_mlfn(b, e, f, this.en), d = this.a * d * f / Math.sqrt(1 - this.es * e * e);
        a.x = d;
        a.y = b;
        return a
    },
    inverse: function(a) {
        var d, b;
        a.x -= this.x0;
        a.y -= this.y0;
        if (this.sphere) a.y /= this.C_y, d = this.m ? Math.asin((this.m * a.y + Math.sin(a.y)) / this.n) : 1 != this.n ? Math.asin(Math.sin(a.y) / this.n) : a.y, b = a.x / (this.C_x * (this.m + Math.cos(a.y)));
        else {
            d = Proj4js.common.pj_inv_mlfn(a.y / this.a, this.es, this.en);
            var e = Math.abs(d);
            e < Proj4js.common.HALF_PI ? (e = Math.sin(d), b = this.long0 + a.x * Math.sqrt(1 - this.es * e * e) / (this.a * Math.cos(d)), b = Proj4js.common.adjust_lon(b)) : e - Proj4js.common.EPSLN < Proj4js.common.HALF_PI && (b = this.long0)
        }
        a.x = b;
        a.y = d;
        return a
    }
};
Proj4js.Proj.vandg = {
    init: function() {
        this.R = 6370997
    },
    forward: function(a) {
        var d = a.y,
            b = Proj4js.common.adjust_lon(a.x - this.long0);
        Math.abs(d);
        var e = Proj4js.common.asinz(2 * Math.abs(d / Proj4js.common.PI));
        (Math.abs(b) <= Proj4js.common.EPSLN || Math.abs(Math.abs(d) - Proj4js.common.HALF_PI) <= Proj4js.common.EPSLN) && Math.tan(0.5 * e);
        var f = 0.5 * Math.abs(Proj4js.common.PI / b - b / Proj4js.common.PI),
            g = f * f,
            h = Math.sin(e),
            e = Math.cos(e),
            e = e / (h + e - 1),
            h = e * (2 / h - 1),
            h = h * h,
            g = Proj4js.common.PI * this.R * (f * (e - h) + Math.sqrt(g * (e - h) * (e - h) -
                (h + g) * (e * e - h))) / (h + g);
        0 > b && (g = -g);
        b = this.x0 + g;
        g = Math.abs(g / (Proj4js.common.PI * this.R));
        d = 0 <= d ? this.y0 + Proj4js.common.PI * this.R * Math.sqrt(1 - g * g - 2 * f * g) : this.y0 - Proj4js.common.PI * this.R * Math.sqrt(1 - g * g - 2 * f * g);
        a.x = b;
        a.y = d;
        return a
    },
    inverse: function(a) {
        var d, b, e, f, g, h, k, l;
        a.x -= this.x0;
        a.y -= this.y0;
        l = Proj4js.common.PI * this.R;
        d = a.x / l;
        e = a.y / l;
        f = d * d + e * e;
        g = -Math.abs(e) * (1 + f);
        b = g - 2 * e * e + d * d;
        h = -2 * g + 1 + 2 * e * e + f * f;
        l = e * e / h + (2 * b * b * b / h / h / h - 9 * g * b / h / h) / 27;
        k = (g - b * b / 3 / h) / h;
        g = 2 * Math.sqrt(-k / 3);
        l = 3 * l / k / g;
        1 < Math.abs(l) && (l =
            0 <= l ? 1 : -1);
        l = Math.acos(l) / 3;
        b = 0 <= a.y ? (-g * Math.cos(l + Proj4js.common.PI / 3) - b / 3 / h) * Proj4js.common.PI : -(-g * Math.cos(l + Proj4js.common.PI / 3) - b / 3 / h) * Proj4js.common.PI;
        Math.abs(d);
        d = Proj4js.common.adjust_lon(this.long0 + Proj4js.common.PI * (f - 1 + Math.sqrt(1 + 2 * (d * d - e * e) + f * f)) / 2 / d);
        a.x = d;
        a.y = b;
        return a
    }
};
Proj4js.Proj.cea = {
    init: function() {},
    forward: function(a) {
        var d = a.y,
            b = this.x0 + this.a * Proj4js.common.adjust_lon(a.x - this.long0) * Math.cos(this.lat_ts),
            d = this.y0 + this.a * Math.sin(d) / Math.cos(this.lat_ts);
        a.x = b;
        a.y = d;
        return a
    },
    inverse: function(a) {
        a.x -= this.x0;
        a.y -= this.y0;
        var d = Proj4js.common.adjust_lon(this.long0 + a.x / this.a / Math.cos(this.lat_ts)),
            b = Math.asin(a.y / this.a * Math.cos(this.lat_ts));
        a.x = d;
        a.y = b;
        return a
    }
};
Proj4js.Proj.eqc = {
    init: function() {
        this.x0 || (this.x0 = 0);
        this.y0 || (this.y0 = 0);
        this.lat0 || (this.lat0 = 0);
        this.long0 || (this.long0 = 0);
        this.lat_ts || (this.lat_ts = 0);
        this.title || (this.title = "Equidistant Cylindrical (Plate Carre)");
        this.rc = Math.cos(this.lat_ts)
    },
    forward: function(a) {
        var d = a.y,
            b = Proj4js.common.adjust_lon(a.x - this.long0),
            d = Proj4js.common.adjust_lat(d - this.lat0);
        a.x = this.x0 + this.a * b * this.rc;
        a.y = this.y0 + this.a * d;
        return a
    },
    inverse: function(a) {
        var d = a.y;
        a.x = Proj4js.common.adjust_lon(this.long0 + (a.x -
            this.x0) / (this.a * this.rc));
        a.y = Proj4js.common.adjust_lat(this.lat0 + (d - this.y0) / this.a);
        return a
    }
};
Proj4js.Proj.cass = {
    init: function() {
        this.sphere || (this.en = Proj4js.common.pj_enfn(this.es), this.m0 = Proj4js.common.pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en))
    },
    C1: 0.16666666666666666,
    C2: 0.008333333333333333,
    C3: 0.041666666666666664,
    C4: 0.3333333333333333,
    C5: 0.06666666666666667,
    forward: function(a) {
        var d, b, e = a.x,
            f = a.y,
            e = Proj4js.common.adjust_lon(e - this.long0);
        this.sphere ? (d = Math.asin(Math.cos(f) * Math.sin(e)), b = Math.atan2(Math.tan(f), Math.cos(e)) - this.phi0) : (this.n = Math.sin(f), this.c =
            Math.cos(f), b = Proj4js.common.pj_mlfn(f, this.n, this.c, this.en), this.n = 1 / Math.sqrt(1 - this.es * this.n * this.n), this.tn = Math.tan(f), this.t = this.tn * this.tn, this.a1 = e * this.c, this.c *= this.es * this.c / (1 - this.es), this.a2 = this.a1 * this.a1, d = this.n * this.a1 * (1 - this.a2 * this.t * (this.C1 - (8 - this.t + 8 * this.c) * this.a2 * this.C2)), b -= this.m0 - this.n * this.tn * this.a2 * (0.5 + (5 - this.t + 6 * this.c) * this.a2 * this.C3));
        a.x = this.a * d + this.x0;
        a.y = this.a * b + this.y0;
        return a
    },
    inverse: function(a) {
        a.x -= this.x0;
        a.y -= this.y0;
        var d = a.x / this.a,
            b =
            a.y / this.a;
        if (this.sphere) this.dd = b + this.lat0, b = Math.asin(Math.sin(this.dd) * Math.cos(d)), d = Math.atan2(Math.tan(d), Math.cos(this.dd));
        else {
            var e = Proj4js.common.pj_inv_mlfn(this.m0 + b, this.es, this.en);
            this.tn = Math.tan(e);
            this.t = this.tn * this.tn;
            this.n = Math.sin(e);
            this.r = 1 / (1 - this.es * this.n * this.n);
            this.n = Math.sqrt(this.r);
            this.r = this.r * (1 - this.es) * this.n;
            this.dd = d / this.n;
            this.d2 = this.dd * this.dd;
            b = e - this.n * this.tn / this.r * this.d2 * (0.5 - (1 + 3 * this.t) * this.d2 * this.C3);
            d = this.dd * (1 + this.t * this.d2 * (-this.C4 +
                (1 + 3 * this.t) * this.d2 * this.C5)) / Math.cos(e)
        }
        a.x = Proj4js.common.adjust_lon(this.long0 + d);
        a.y = b;
        return a
    }
};
Proj4js.Proj.gauss = {
    init: function() {
        var a = Math.sin(this.lat0),
            d = Math.cos(this.lat0),
            d = d * d;
        this.rc = Math.sqrt(1 - this.es) / (1 - this.es * a * a);
        this.C = Math.sqrt(1 + this.es * d * d / (1 - this.es));
        this.phic0 = Math.asin(a / this.C);
        this.ratexp = 0.5 * this.C * this.e;
        this.K = Math.tan(0.5 * this.phic0 + Proj4js.common.FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + Proj4js.common.FORTPI), this.C) * Proj4js.common.srat(this.e * a, this.ratexp))
    },
    forward: function(a) {
        var d = a.x,
            b = a.y;
        a.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * b + Proj4js.common.FORTPI),
            this.C) * Proj4js.common.srat(this.e * Math.sin(b), this.ratexp)) - Proj4js.common.HALF_PI;
        a.x = this.C * d;
        return a
    },
    inverse: function(a) {
        for (var d = a.x / this.C, b = a.y, e = Math.pow(Math.tan(0.5 * b + Proj4js.common.FORTPI) / this.K, 1 / this.C), f = Proj4js.common.MAX_ITER; 0 < f; --f) {
            b = 2 * Math.atan(e * Proj4js.common.srat(this.e * Math.sin(a.y), -0.5 * this.e)) - Proj4js.common.HALF_PI;
            if (1E-14 > Math.abs(b - a.y)) break;
            a.y = b
        }
        if (!f) return Proj4js.reportError("gauss:inverse:convergence failed"), null;
        a.x = d;
        a.y = b;
        return a
    }
};
Proj4js.Proj.omerc = {
    init: function() {
        this.mode || (this.mode = 0);
        this.lon1 || (this.lon1 = 0, this.mode = 1);
        this.lon2 || (this.lon2 = 0);
        this.lat2 || (this.lat2 = 0);
        var a = 1 - Math.pow(this.b / this.a, 2);
        Math.sqrt(a);
        this.sin_p20 = Math.sin(this.lat0);
        this.cos_p20 = Math.cos(this.lat0);
        this.con = 1 - this.es * this.sin_p20 * this.sin_p20;
        this.com = Math.sqrt(1 - a);
        this.bl = Math.sqrt(1 + this.es * Math.pow(this.cos_p20, 4) / (1 - a));
        this.al = this.a * this.bl * this.k0 * this.com / this.con;
        Math.abs(this.lat0) < Proj4js.common.EPSLN ? this.el = this.d = this.ts =
            1 : (this.ts = Proj4js.common.tsfnz(this.e, this.lat0, this.sin_p20), this.con = Math.sqrt(this.con), this.d = this.bl * this.com / (this.cos_p20 * this.con), this.f = 0 < this.d * this.d - 1 ? 0 <= this.lat0 ? this.d + Math.sqrt(this.d * this.d - 1) : this.d - Math.sqrt(this.d * this.d - 1) : this.d, this.el = this.f * Math.pow(this.ts, this.bl));
        0 != this.mode ? (this.g = 0.5 * (this.f - 1 / this.f), this.gama = Proj4js.common.asinz(Math.sin(this.alpha) / this.d), this.longc -= Proj4js.common.asinz(this.g * Math.tan(this.gama)) / this.bl, this.con = Math.abs(this.lat0), this.con >
            Proj4js.common.EPSLN && Math.abs(this.con - Proj4js.common.HALF_PI) > Proj4js.common.EPSLN ? (this.singam = Math.sin(this.gama), this.cosgam = Math.cos(this.gama), this.sinaz = Math.sin(this.alpha), this.cosaz = Math.cos(this.alpha), this.u = 0 <= this.lat0 ? this.al / this.bl * Math.atan(Math.sqrt(this.d * this.d - 1) / this.cosaz) : -(this.al / this.bl) * Math.atan(Math.sqrt(this.d * this.d - 1) / this.cosaz)) : Proj4js.reportError("omerc:Init:DataError")) : (this.sinphi = Math.sin(this.at1), this.ts1 = Proj4js.common.tsfnz(this.e, this.lat1, this.sinphi),
            this.sinphi = Math.sin(this.lat2), this.ts2 = Proj4js.common.tsfnz(this.e, this.lat2, this.sinphi), this.h = Math.pow(this.ts1, this.bl), this.l = Math.pow(this.ts2, this.bl), this.f = this.el / this.h, this.g = 0.5 * (this.f - 1 / this.f), this.j = (this.el * this.el - this.l * this.h) / (this.el * this.el + this.l * this.h), this.p = (this.l - this.h) / (this.l + this.h), this.dlon = this.lon1 - this.lon2, this.dlon < -Proj4js.common.PI && (this.lon2 -= 2 * Proj4js.common.PI), this.dlon > Proj4js.common.PI && (this.lon2 += 2 * Proj4js.common.PI), this.dlon = this.lon1 - this.lon2,
            this.longc = 0.5 * (this.lon1 + this.lon2) - Math.atan(this.j * Math.tan(0.5 * this.bl * this.dlon) / this.p) / this.bl, this.dlon = Proj4js.common.adjust_lon(this.lon1 - this.longc), this.gama = Math.atan(Math.sin(this.bl * this.dlon) / this.g), this.alpha = Proj4js.common.asinz(this.d * Math.sin(this.gama)), Math.abs(this.lat1 - this.lat2) <= Proj4js.common.EPSLN ? Proj4js.reportError("omercInitDataError") : this.con = Math.abs(this.lat1), this.con <= Proj4js.common.EPSLN || Math.abs(this.con - Proj4js.common.HALF_PI) <= Proj4js.common.EPSLN ? Proj4js.reportError("omercInitDataError") :
            Math.abs(Math.abs(this.lat0) - Proj4js.common.HALF_PI) <= Proj4js.common.EPSLN && Proj4js.reportError("omercInitDataError"), this.singam = Math.sin(this.gam), this.cosgam = Math.cos(this.gam), this.sinaz = Math.sin(this.alpha), this.cosaz = Math.cos(this.alpha), this.u = 0 <= this.lat0 ? this.al / this.bl * Math.atan(Math.sqrt(this.d * this.d - 1) / this.cosaz) : -(this.al / this.bl) * Math.atan(Math.sqrt(this.d * this.d - 1) / this.cosaz))
    },
    forward: function(a) {
        var d, b, e, f, g;
        e = a.x;
        b = a.y;
        d = Math.sin(b);
        f = Proj4js.common.adjust_lon(e - this.longc);
        e = Math.sin(this.bl * f);
        Math.abs(Math.abs(b) - Proj4js.common.HALF_PI) > Proj4js.common.EPSLN ? (d = Proj4js.common.tsfnz(this.e, b, d), d = this.el / Math.pow(d, this.bl), g = 0.5 * (d - 1 / d), d = (g * this.singam - e * this.cosgam) / (0.5 * (d + 1 / d)), b = Math.cos(this.bl * f), 1E-7 > Math.abs(b) ? e = this.al * this.bl * f : (e = this.al * Math.atan((g * this.cosgam + e * this.singam) / b) / this.bl, 0 > b && (e += Proj4js.common.PI * this.al / this.bl))) : (d = 0 <= b ? this.singam : -this.singam, e = this.al * b / this.bl);
        Math.abs(Math.abs(d) - 1) <= Proj4js.common.EPSLN && Proj4js.reportError("omercFwdInfinity");
        f = 0.5 * this.al * Math.log((1 - d) / (1 + d)) / this.bl;
        e -= this.u;
        d = this.y0 + e * this.cosaz - f * this.sinaz;
        a.x = this.x0 + f * this.cosaz + e * this.sinaz;
        a.y = d;
        return a
    },
    inverse: function(a) {
        var d, b, e, f;
        a.x -= this.x0;
        a.y -= this.y0;
        d = a.x * this.cosaz - a.y * this.sinaz;
        e = a.y * this.cosaz + a.x * this.sinaz;
        e += this.u;
        b = Math.exp(-this.bl * d / this.al);
        d = 0.5 * (b - 1 / b);
        b = 0.5 * (b + 1 / b);
        e = Math.sin(this.bl * e / this.al);
        f = (e * this.cosgam + d * this.singam) / b;
        Math.abs(Math.abs(f) - 1) <= Proj4js.common.EPSLN ? (d = this.longc, f = 0 <= f ? Proj4js.common.HALF_PI : -Proj4js.common.HALF_PI) :
            (b = 1 / this.bl, f = Math.pow(this.el / Math.sqrt((1 + f) / (1 - f)), b), f = Proj4js.common.phi2z(this.e, f), d = this.longc - Math.atan2(d * this.cosgam - e * this.singam, b) / this.bl, d = Proj4js.common.adjust_lon(d));
        a.x = d;
        a.y = f;
        return a
    }
};
Proj4js.Proj.lcc = {
    init: function() {
        this.lat2 || (this.lat2 = this.lat0);
        this.k0 || (this.k0 = 1);
        if (Math.abs(this.lat1 + this.lat2) < Proj4js.common.EPSLN) Proj4js.reportError("lcc:init: Equal Latitudes");
        else {
            var a = this.b / this.a;
            this.e = Math.sqrt(1 - a * a);
            var a = Math.sin(this.lat1),
                d = Math.cos(this.lat1),
                d = Proj4js.common.msfnz(this.e, a, d),
                b = Proj4js.common.tsfnz(this.e, this.lat1, a),
                e = Math.sin(this.lat2),
                f = Math.cos(this.lat2),
                f = Proj4js.common.msfnz(this.e, e, f),
                e = Proj4js.common.tsfnz(this.e, this.lat2, e),
                g = Proj4js.common.tsfnz(this.e,
                    this.lat0, Math.sin(this.lat0));
            this.ns = Math.abs(this.lat1 - this.lat2) > Proj4js.common.EPSLN ? Math.log(d / f) / Math.log(b / e) : a;
            this.f0 = d / (this.ns * Math.pow(b, this.ns));
            this.rh = this.a * this.f0 * Math.pow(g, this.ns);
            this.title || (this.title = "Lambert Conformal Conic")
        }
    },
    forward: function(a) {
        var d = a.x,
            b = a.y;
        if (!(90 >= b && -90 <= b && 180 >= d && -180 <= d)) return Proj4js.reportError("lcc:forward: llInputOutOfRange: " + d + " : " + b), null;
        var e = Math.abs(Math.abs(b) - Proj4js.common.HALF_PI);
        if (e > Proj4js.common.EPSLN) b = Proj4js.common.tsfnz(this.e,
            b, Math.sin(b)), b = this.a * this.f0 * Math.pow(b, this.ns);
        else {
            e = b * this.ns;
            if (0 >= e) return Proj4js.reportError("lcc:forward: No Projection"), null;
            b = 0
        }
        d = this.ns * Proj4js.common.adjust_lon(d - this.long0);
        a.x = this.k0 * b * Math.sin(d) + this.x0;
        a.y = this.k0 * (this.rh - b * Math.cos(d)) + this.y0;
        return a
    },
    inverse: function(a) {
        var d, b, e, f = (a.x - this.x0) / this.k0,
            g = this.rh - (a.y - this.y0) / this.k0;
        0 < this.ns ? (d = Math.sqrt(f * f + g * g), b = 1) : (d = -Math.sqrt(f * f + g * g), b = -1);
        e = 0;
        0 != d && (e = Math.atan2(b * f, b * g));
        if (0 != d || 0 < this.ns) {
            if (b = 1 / this.ns,
                d = Math.pow(d / (this.a * this.f0), b), d = Proj4js.common.phi2z(this.e, d), -9999 == d) return null
        } else d = -Proj4js.common.HALF_PI;
        e = Proj4js.common.adjust_lon(e / this.ns + this.long0);
        a.x = e;
        a.y = d;
        return a
    }
};
Proj4js.Proj.laea = {
    S_POLE: 1,
    N_POLE: 2,
    EQUIT: 3,
    OBLIQ: 4,
    init: function() {
        var a = Math.abs(this.lat0);
        this.mode = Math.abs(a - Proj4js.common.HALF_PI) < Proj4js.common.EPSLN ? 0 > this.lat0 ? this.S_POLE : this.N_POLE : Math.abs(a) < Proj4js.common.EPSLN ? this.EQUIT : this.OBLIQ;
        if (0 < this.es) switch (this.qp = Proj4js.common.qsfnz(this.e, 1), this.mmf = 0.5 / (1 - this.es), this.apa = this.authset(this.es), this.mode) {
            case this.N_POLE:
            case this.S_POLE:
                this.dd = 1;
                break;
            case this.EQUIT:
                this.rq = Math.sqrt(0.5 * this.qp);
                this.dd = 1 / this.rq;
                this.xmf =
                    1;
                this.ymf = 0.5 * this.qp;
                break;
            case this.OBLIQ:
                this.rq = Math.sqrt(0.5 * this.qp), a = Math.sin(this.lat0), this.sinb1 = Proj4js.common.qsfnz(this.e, a) / this.qp, this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1), this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * a * a) * this.rq * this.cosb1), this.ymf = (this.xmf = this.rq) / this.dd, this.xmf *= this.dd
        } else this.mode == this.OBLIQ && (this.sinph0 = Math.sin(this.lat0), this.cosph0 = Math.cos(this.lat0))
    },
    forward: function(a) {
        var d, b, e = a.x,
            f = a.y,
            e = Proj4js.common.adjust_lon(e - this.long0);
        if (this.sphere) {
            var g,
                h, k;
            k = Math.sin(f);
            h = Math.cos(f);
            g = Math.cos(e);
            switch (this.mode) {
                case this.OBLIQ:
                case this.EQUIT:
                    b = this.mode == this.EQUIT ? 1 + h * g : 1 + this.sinph0 * k + this.cosph0 * h * g;
                    if (b <= Proj4js.common.EPSLN) return Proj4js.reportError("laea:fwd:y less than eps"), null;
                    b = Math.sqrt(2 / b);
                    d = b * h * Math.sin(e);
                    b *= this.mode == this.EQUIT ? k : this.cosph0 * k - this.sinph0 * h * g;
                    break;
                case this.N_POLE:
                    g = -g;
                case this.S_POLE:
                    if (Math.abs(f + this.phi0) < Proj4js.common.EPSLN) return Proj4js.reportError("laea:fwd:phi < eps"), null;
                    b = Proj4js.common.FORTPI -
                        0.5 * f;
                    b = 2 * (this.mode == this.S_POLE ? Math.cos(b) : Math.sin(b));
                    d = b * Math.sin(e);
                    b *= g
            }
        } else {
            var l = h = 0,
                n = 0;
            g = Math.cos(e);
            e = Math.sin(e);
            k = Math.sin(f);
            k = Proj4js.common.qsfnz(this.e, k);
            if (this.mode == this.OBLIQ || this.mode == this.EQUIT) h = k / this.qp, l = Math.sqrt(1 - h * h);
            switch (this.mode) {
                case this.OBLIQ:
                    n = 1 + this.sinb1 * h + this.cosb1 * l * g;
                    break;
                case this.EQUIT:
                    n = 1 + l * g;
                    break;
                case this.N_POLE:
                    n = Proj4js.common.HALF_PI + f;
                    k = this.qp - k;
                    break;
                case this.S_POLE:
                    n = f - Proj4js.common.HALF_PI, k = this.qp + k
            }
            if (Math.abs(n) < Proj4js.common.EPSLN) return Proj4js.reportError("laea:fwd:b < eps"),
                null;
            switch (this.mode) {
                case this.OBLIQ:
                case this.EQUIT:
                    n = Math.sqrt(2 / n);
                    b = this.mode == this.OBLIQ ? this.ymf * n * (this.cosb1 * h - this.sinb1 * l * g) : (n = Math.sqrt(2 / (1 + l * g))) * h * this.ymf;
                    d = this.xmf * n * l * e;
                    break;
                case this.N_POLE:
                case this.S_POLE:
                    0 <= k ? (d = (n = Math.sqrt(k)) * e, b = g * (this.mode == this.S_POLE ? n : -n)) : d = b = 0
            }
        }
        a.x = this.a * d + this.x0;
        a.y = this.a * b + this.y0;
        return a
    },
    inverse: function(a) {
        a.x -= this.x0;
        a.y -= this.y0;
        var d = a.x / this.a,
            b = a.y / this.a,
            e;
        if (this.sphere) {
            var f = 0,
                g, h = 0;
            g = Math.sqrt(d * d + b * b);
            e = 0.5 * g;
            if (1 < e) return Proj4js.reportError("laea:Inv:DataError"),
                null;
            e = 2 * Math.asin(e);
            if (this.mode == this.OBLIQ || this.mode == this.EQUIT) h = Math.sin(e), f = Math.cos(e);
            switch (this.mode) {
                case this.EQUIT:
                    e = Math.abs(g) <= Proj4js.common.EPSLN ? 0 : Math.asin(b * h / g);
                    d *= h;
                    b = f * g;
                    break;
                case this.OBLIQ:
                    e = Math.abs(g) <= Proj4js.common.EPSLN ? this.phi0 : Math.asin(f * this.sinph0 + b * h * this.cosph0 / g);
                    d = d * h * this.cosph0;
                    b = (f - Math.sin(e) * this.sinph0) * g;
                    break;
                case this.N_POLE:
                    b = -b;
                    e = Proj4js.common.HALF_PI - e;
                    break;
                case this.S_POLE:
                    e -= Proj4js.common.HALF_PI
            }
            d = 0 != b || this.mode != this.EQUIT && this.mode !=
                this.OBLIQ ? Math.atan2(d, b) : 0
        } else {
            e = 0;
            switch (this.mode) {
                case this.EQUIT:
                case this.OBLIQ:
                    d /= this.dd;
                    b *= this.dd;
                    h = Math.sqrt(d * d + b * b);
                    if (h < Proj4js.common.EPSLN) return a.x = 0, a.y = this.phi0, a;
                    g = 2 * Math.asin(0.5 * h / this.rq);
                    f = Math.cos(g);
                    d *= g = Math.sin(g);
                    this.mode == this.OBLIQ ? (e = f * this.sinb1 + b * g * this.cosb1 / h, b = h * this.cosb1 * f - b * this.sinb1 * g) : (e = b * g / h, b = h * f);
                    break;
                case this.N_POLE:
                    b = -b;
                case this.S_POLE:
                    e = d * d + b * b;
                    if (!e) return a.x = 0, a.y = this.phi0, a;
                    e = 1 - e / this.qp;
                    this.mode == this.S_POLE && (e = -e)
            }
            d = Math.atan2(d, b);
            e = this.authlat(Math.asin(e), this.apa)
        }
        a.x = Proj4js.common.adjust_lon(this.long0 + d);
        a.y = e;
        return a
    },
    P00: 0.3333333333333333,
    P01: 0.17222222222222222,
    P02: 0.10257936507936508,
    P10: 0.06388888888888888,
    P11: 0.0664021164021164,
    P20: 0.016415012942191543,
    authset: function(a) {
        var d, b = [];
        b[0] = a * this.P00;
        d = a * a;
        b[0] += d * this.P01;
        b[1] = d * this.P10;
        d *= a;
        b[0] += d * this.P02;
        b[1] += d * this.P11;
        b[2] = d * this.P20;
        return b
    },
    authlat: function(a, d) {
        var b = a + a;
        return a + d[0] * Math.sin(b) + d[1] * Math.sin(b + b) + d[2] * Math.sin(b + b + b)
    }
};
Proj4js.Proj.aeqd = {
    init: function() {
        this.sin_p12 = Math.sin(this.lat0);
        this.cos_p12 = Math.cos(this.lat0)
    },
    forward: function(a) {
        var d = a.x,
            b, e = Math.sin(a.y),
            f = Math.cos(a.y),
            d = Proj4js.common.adjust_lon(d - this.long0),
            g = Math.cos(d),
            h = this.sin_p12 * e + this.cos_p12 * f * g;
        if (Math.abs(Math.abs(h) - 1) < Proj4js.common.EPSLN) {
            if (b = 1, 0 > h) {
                Proj4js.reportError("aeqd:Fwd:PointError");
                return
            }
        } else b = Math.acos(h), b /= Math.sin(b);
        a.x = this.x0 + this.a * b * f * Math.sin(d);
        a.y = this.y0 + this.a * b * (this.cos_p12 * e - this.sin_p12 * f * g);
        return a
    },
    inverse: function(a) {
        a.x -= this.x0;
        a.y -= this.y0;
        var d = Math.sqrt(a.x * a.x + a.y * a.y);
        if (d > 2 * Proj4js.common.HALF_PI * this.a) Proj4js.reportError("aeqdInvDataError");
        else {
            var b = d / this.a,
                e = Math.sin(b),
                b = Math.cos(b),
                f = this.long0,
                g;
            if (Math.abs(d) <= Proj4js.common.EPSLN) g = this.lat0;
            else {
                g = Proj4js.common.asinz(b * this.sin_p12 + a.y * e * this.cos_p12 / d);
                var h = Math.abs(this.lat0) - Proj4js.common.HALF_PI;
                Math.abs(h) <= Proj4js.common.EPSLN ? f = 0 <= this.lat0 ? Proj4js.common.adjust_lon(this.long0 + Math.atan2(a.x, -a.y)) : Proj4js.common.adjust_lon(this.long0 -
                    Math.atan2(-a.x, a.y)) : (h = b - this.sin_p12 * Math.sin(g), Math.abs(h) < Proj4js.common.EPSLN && Math.abs(a.x) < Proj4js.common.EPSLN || (Math.atan2(a.x * e * this.cos_p12, h * d), f = Proj4js.common.adjust_lon(this.long0 + Math.atan2(a.x * e * this.cos_p12, h * d))))
            }
            a.x = f;
            a.y = g;
            return a
        }
    }
};
Proj4js.Proj.moll = {
    init: function() {},
    forward: function(a) {
        for (var d = a.y, b = Proj4js.common.adjust_lon(a.x - this.long0), e = d, f = Proj4js.common.PI * Math.sin(d), g = 0;; g++) {
            var h = -(e + Math.sin(e) - f) / (1 + Math.cos(e)),
                e = e + h;
            if (Math.abs(h) < Proj4js.common.EPSLN) break;
            50 <= g && Proj4js.reportError("moll:Fwd:IterationError")
        }
        e /= 2;
        Proj4js.common.PI / 2 - Math.abs(d) < Proj4js.common.EPSLN && (b = 0);
        d = 0.900316316158 * this.a * b * Math.cos(e) + this.x0;
        e = 1.4142135623731 * this.a * Math.sin(e) + this.y0;
        a.x = d;
        a.y = e;
        return a
    },
    inverse: function(a) {
        var d;
        a.x -= this.x0;
        d = a.y / (1.4142135623731 * this.a);
        0.999999999999 < Math.abs(d) && (d = 0.999999999999);
        d = Math.asin(d);
        var b = Proj4js.common.adjust_lon(this.long0 + a.x / (0.900316316158 * this.a * Math.cos(d)));
        b < -Proj4js.common.PI && (b = -Proj4js.common.PI);
        b > Proj4js.common.PI && (b = Proj4js.common.PI);
        d = (2 * d + Math.sin(2 * d)) / Proj4js.common.PI;
        1 < Math.abs(d) && (d = 1);
        d = Math.asin(d);
        a.x = b;
        a.y = d;
        return a
    }
};

function WMTSLayer(a, d, b, e) {
    function f(a) {
        a = a.Contents.TileMatrixSet;
        if ("undefined" != typeof a.length)
            for (var d = 0; d < a.length; d++) {
                var e = a[d]["ows:Identifier"];
                if (e && e == b.matrixSet) {
                    C = a[d];
                    break
                }
                C = a[0]
            } else C = a;
        return C
    }
    var g = e.left,
        h = e.top,
        k = e.right,
        l = e.bottom,
        n = "auto",
        m = [],
        p = document.createElement("div"),
        s, q = !1,
        v = this,
        z = 0,
        E = 0,
        F = 0,
        G = 0,
        A = 1;
    e.opacity && (A = e.opacity);
    var B = 0,
        C = null;
    p.style.position = "absolute";
    p.style.left = "0px";
    p.style.top = "0px";
    p.style.width = "100%";
    p.style.height = "100%";
    document.createElement("img");
    var u;
    this.getMatrixSetId = function() {
        return C["ows:Identifier"]
    };
    this.getThemeTile = function() {};
    this.setTileOpacity = function(a) {
        if ("number" == typeof a)
            for (A = a, a = 0; a < m.length; a++)
                for (var b = 0; b < m[a].length; b++) null != m[a][b] && (m[a][b].style.opacity = A, m[a][b].style.filter = "alpha(opacity=" + 100 * A + ")")
    };
    this.setZIndex = function(a) {
        n = a;
        p && (p.style.zIndex = n)
    };
    this.getZIndex = function() {
        return n
    };
    this.RemoveSelf = function() {
        s.getHObject().removeChild(p)
    };
    this.getTiles = function(d, e, g, h, m, l) {
        TGOS.getJSON(a, function(k) {
            var n =
                k.Capabilities,
                p = k = 0,
                u = [],
                s = [];
            if (!n) throw "Service Error";
            var n = f(n),
                q = n.TileMatrix[m].TopLeftCorner,
                v = parseFloat(q.split(" ")[0]),
                A = parseFloat(q.split(" ")[1]),
                q = parseFloat(n.TileMatrix[m].ScaleDenominator),
                z = 0.07168 * q,
                C, v = d < v ? 0 : Math.floor((d - v) / z);
            C = v + Math.ceil(Math.abs(d - g) / z);
            A = e > A ? 0 : Math.floor((A - e) / z) - 1;
            z = A + Math.ceil(Math.abs(h - e) / z);
            idxRange = {
                lowerX: v,
                upperX: C,
                lowerY: A,
                upperY: z
            };
            for (z = idxRange.lowerY; z < idxRange.upperY; z++)
                for (v = idxRange.lowerX; v < idxRange.upperX; v++) k += v * q, p += z * q, s.push(k + "," +
                    p), u.push(a + "?SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&Layer=" + b.layer + "&Style=default&Format=image/png&TileMatrixSet=" + b.matrixSet + "&TileMatrix=" + n.TileMatrix[m]["ows:Identifier"] + "&TileRow=" + z + "&TileCol=" + v);
            l.call(this, {
                leftTopAnchor: s,
                imageUrl: u
            })
        }, TGOS.PROXY_SERVICE2)
    };
    this.Initialize = function(b) {
        s = b;
        p.style.zIndex = this.getZIndex();
        s.getHObject().appendChild(p);
        TGOS.getJSON(a, function(a) {
                u = a.Capabilities;
                if (!u) throw "Service Error";
                f(u);
                e && (g = e.left, k = e.right, h = e.top, l = e.bottom);
                q = !0;
                v.RebuildElement()
            },
            TGOS.PROXY_SERVICE2)
    };
    this.UpdateElement = function() {
        if (q && C)
            for (var a = C.TileMatrix[B].TopLeftCorner, b = parseFloat(a.split(" ")[0]), a = parseFloat(a.split(" ")[1]), b = s.FromMapPoint(b, a), a = 0; a < m.length; a++)
                for (var d = 0; d < m[a].length; d++) {
                    var e = 256 * m[a][d].yIdx;
                    m[a][d].style.left = b.x + 256 * m[a][d].xIdx + "px";
                    m[a][d].style.top = b.y + e + "px"
                }
    };
    this.putVisible = function(a) {
        p.style.display = a ? "inline" : "none"
    };
    this.RebuildElement = function() {
        if (q && C) {
            for (var d = s.ToMapDistX(256), e = 0, f = Infinity, n = 0; n < C.TileMatrix.length; n++) {
                var u =
                    0.07168 * parseFloat(C.TileMatrix[n].ScaleDenominator),
                    u = Math.abs(u - d);
                u < f && (f = u, e = n)
            }
            if (!(f > d / 2)) {
                var f = C.TileMatrix[e].TopLeftCorner,
                    u = parseFloat(f.split(" ")[0]),
                    n = parseFloat(f.split(" ")[1]),
                    f = s.FromMapPoint(u, n),
                    v = s.ToMapPoint(0, 0),
                    N = s.ToMapPoint(s.getClientWidth(), s.getClientHeight()),
                    Q, V, R, K, L;
                Q = v.x < u ? 0 : Math.floor((g - u) / d);
                V = Q + Math.ceil(Math.abs(g - k) / d);
                R = v.y > n ? 0 : Math.floor((n - h) / d);
                K = R + Math.ceil(Math.abs(l - h) / d);
                L = v.x < u ? 0 : Math.floor((v.x - u) / d);
                u = L + Math.ceil(Math.abs(v.x - N.x) / d);
                n = v.y > n ? 0 : Math.floor((n -
                    v.y) / d);
                v = n + Math.ceil(Math.abs(N.y - v.y) / d);
                d = Math.max(L, Q);
                V = Math.min(u, V);
                n = Math.max(n, R);
                K = Math.min(v, K);
                if (z != d || E != V || F != n || G != K || e != B) {
                    z = d;
                    E = V;
                    F = n;
                    G = K;
                    B = e;
                    parseFloat(C.TileMatrix[e].MatrixWidth);
                    parseFloat(C.TileMatrix[e].MatrixHeight);
                    var I;
                    R = [];
                    v = Q = 0;
                    for (N = n; N <= K; N++) {
                        R.push([]);
                        for (L = d; L <= V; L++) u = f.x + 256 * L, n = f.y + 256 * N, I = document.createElement("img"), I.style.display = "none", I.onload = function() {
                                var a = this,
                                    b = 0;
                                a.style.opacity = b;
                                var d = A / 7,
                                    e = setInterval(function() {
                                        b >= A ? (I.style.filter = "alpha(opacity=" +
                                            100 * A + ")", a.style.opacity = A, clearInterval(e)) : (a.style.opacity = b, a.style.filter = "alpha(opacity=" + 100 * b + ")", b += d)
                                    }, 33);
                                a.style.filter = "alpha(opacity=0)";
                                this.style.display = "block"
                            }, I.xIdx = L, I.yIdx = N, I.style.position = "absolute", I.style.left = u + "px", I.style.top = n + "px", I.galleryImg = !1, I.hideFocus = !0, I.style.MozUserSelect = "none", I.border = "0px", R[v].push(I), I.src = a + "?SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&Layer=" + b.layer + "&Style=default&Format=image/png&TileMatrixSet=" + b.matrixSet + "&TileMatrix=" + C.TileMatrix[e]["ows:Identifier"] +
                            "&TileRow=" + N + "&TileCol=" + L, p.appendChild(I), I.style.opacity = A, I.style.filter = "alpha(opacity=" + 100 * A + ")", Q++;
                        v++
                    }
                    if (0 < m.length) {
                        for (N = 0; N < m.length; N++) {
                            for (L = 0; L < m[N].length; L++) p.removeChild(m[N][L]);
                            m[N][L] = null
                        }
                        m = []
                    }
                    m = R
                }
            }
        }
    }
};
(function() {
    var a = function(a) {
        this.left = a.left;
        this.top = a.top;
        this.right = a.right;
        this.bottom = a.bottom;
        this.src = a.src;
        this.width = a.width;
        this.height = a.height;
        this.layer = a.layer;
        this.cancel = this.loaded = !1;
        this.node = document.createElement("img");
        this.node.style.position = "absolute";
        this.setSource = function(a) {
            this.loaded = !1;
            this.node.src = a
        };
        var b = this;
        this.node.onload = function() {
            b.cancel ? b.loaded = !1 : (b.loaded = !0, a.onload && a.onload.call(b))
        };
        this.src && (this.node.src = this.src);
        "number" == typeof this.width &&
            (this.node.width = this.width);
        "number" == typeof this.height && (this.node.height = this.height);
        this.destroy = function() {
            this.node && this.node.parentNode && this.node.parentNode.removeChild(this.node)
        }
    };
    TGOS.TGWmsLayer = function(d, b, e) {
        function f() {
            if (l) {
                var a = k.getClientWidth(),
                    b = k.getClientHeight(),
                    d = k.ToMapPoint(0, 0),
                    e = k.ToMapPoint(a, b);
                g();
                switch (l.getCoordSys()) {
                    case TGOS.TGCoordSys.EPSG3857:
                        d = TGOS.GooToWGS84(d.x, d.y);
                        e = TGOS.GooToWGS84(e.x, e.y);
                        break;
                    case TGOS.TGCoordSys.EPSG3826:
                        0 > z.indexOf("3826") && (0 <=
                            z.indexOf("3825") ? (d = TGOS.TWD97toTWD97_119(d.x, d.y), e = TGOS.TWD97toTWD97_119(e.x, e.y)) : 0 <= z.indexOf("4326") && (d = TGOS.TWD97toWGS84(d.x, d.y), e = TGOS.TWD97toWGS84(e.x, e.y)));
                        break;
                    case TGOS.TGCoordSys.EPSG3825:
                        0 > z.indexOf("3825") && (0 <= z.indexOf("3826") ? (d = TGOS.TWD97_119toTWD97(d.x, d.y), e = TGOS.TWD97_119toTWD97(e.x, e.y)) : 0 <= z.indexOf("4326") && (d = TGOS.TWD97_119toWGS84(d.x, d.y), e = TGOS.TWD97_119toWGS84(e.x, e.y)))
                }
                var f = d.x,
                    m = e.y,
                    n = e.x,
                    p = d.y;
                "1.3.0" == v && 0 > z.indexOf("CRS:84") && 0 <= z.indexOf("EPSG:4326") && (f = e.y,
                    m = d.x, n = d.y, p = e.x);
                a = h + "?BBOX=" + (f + "," + m + "," + n + "," + p) + "&WIDTH=" + a + "&HEIGHT=" + b;
                return a += "&" + E.join("&")
            }
        }

        function g() {
            if (l) {
                var a = k.getClientWidth(),
                    b = k.getClientHeight(),
                    d = k.ToMapPoint(0, 0),
                    e = k.ToMapPoint(a, b);
                return {
                    left: d.x,
                    top: d.y,
                    right: e.x,
                    bottom: e.y,
                    width: a,
                    height: b
                }
            }
        }
        var h, k, l = null,
            n = !0,
            m = "auto",
            p, s = 1,
            l = b.map,
            q = l.getPanes().overlayviewLayer;
        b && (void 0 !== b.opacity && "number" == typeof b.opacity && (s = b.opacity), void 0 !== b.visible && "boolean" == typeof b.visible && (n = b.visible), void 0 !== b.zIndex && "number" ==
            typeof b.zIndex && (m = b.zIndex), void 0 !== b.container && (q = b.container));
        var v = "VERSION=1.3.0",
            z = "",
            E = [];
        e = d;
        if (-1 < e.indexOf("?")) {
            var F = e.indexOf("?");
            d = e.substring(0, F);
            F = e.substr(F + 1, e.length - F);
            e = d;
            e = F.split("&");
            for (F = 0; F < e.length; F++) 0 <= e[F].toUpperCase().indexOf("BBOX") || 0 <= e[F].toUpperCase().indexOf("WIDTH") || 0 <= e[F].toUpperCase().indexOf("HEIGHT") || (0 <= e[F].toUpperCase().indexOf("VERSION") && (v = e[F].toUpperCase()), 0 <= e[F].toUpperCase().indexOf("CRS") && (z = e[F].toUpperCase()), E.push(e[F]))
        }
        var G;
        this.moveToTop = function() {
            q && (q.removeChild(G), q.appendChild(G))
        };
        this.RemoveSelf = function() {
            q && G && q.removeChild(G)
        };
        this.getDefaultViewport = function() {};
        this.getUrl = function() {
            return h
        };
        this.removeWmsLayer = function() {
            l.removeLayer(this)
        };
        this.getZIndex = function() {
            return m
        };
        this.setZIndex = function(a) {
            m = a;
            G && (G.style.zIndex = m)
        };
        this.getWmsVisible = function() {
            return this.getVisible()
        };
        this.getVisible = function() {
            return n
        };
        this.setWmsVisible = function(a) {
            this.setVisible(a)
        };
        this.setVisible = function(a) {
            n =
                a;
            G && (G.style.display = n ? "block" : "none")
        };
        this.putVisible = function(a) {
            this.setVisible(a)
        };
        var A = function(a) {
            if (a) {
                var b = k.FromMapPoint(a.left, a.top);
                a.node.style.left = b.x + "px";
                a.node.style.top = b.y + "px"
            }
        };
        this.setOpacity = function(a) {
            if (G) {
                var b = parseInt(100 * a);
                G.style.filter = "alpha(opacity=" + b + ")";
                G.style.opacity = a
            }
            s = a
        };
        this.getOpacity = function() {
            return s
        };
        var B, C;
        this.UpdateElement = function() {
            var a = k.getScale(),
                b = p / a;
            C && (C.node.width /= b, C.node.height /= b);
            A(B);
            A(C);
            p = a
        };
        this.RebuildElement = function() {
            var b =
                this;
            this.temp && !this.temp.loaded && (this.temp.cancel = !0);
            var d = g();
            this.temp = new a({
                left: d.left,
                right: d.right,
                top: d.top,
                bottom: d.bottom,
                width: d.width,
                height: d.height,
                src: f(),
                onload: function() {
                    B = C;
                    G.appendChild(b.temp.node);
                    C = b.temp;
                    B && B.destroy();
                    b.temp = null
                }
            })
        };
        this.getNode = function() {
            return G
        };
        G = document.createElement("div");
        G.style.position = "absolute";
        G.style.left = "0px";
        G.style.top = "0px";
        G.style.width = "100%";
        G.style.height = "100%";
        G.style.zIndex = m;
        "number" == typeof b.opacity && (s = b.opacity);
        G.style.opacity =
            s;
        parseInt(100 * s);
        k = l.getMapBase();
        h = 0 < d.indexOf("?") ? d.slice(0, d.indexOf("?")) : d;
        q.appendChild(G);
        l.addLayer(this, !0)
    }
})();
TGOS.TGWmsLayer_bak = function(a, d, b) {
    var e = this,
        f, g, h, k, l = null,
        n = !0,
        m = "auto",
        p, s = 1,
        q = [];
    b = a;
    if (-1 < b.indexOf("?")) {
        var v = b.indexOf("?");
        a = b.substring(0, v);
        v = b.substr(v + 1, b.length - v);
        b = a;
        b = v.split("&");
        for (v = 0; v < b.length; v++) 0 != b[v].toUpperCase().indexOf("BBOX") && 0 != b[v].toUpperCase().indexOf("WIDTH") && 0 != b[v].toUpperCase().indexOf("HEIGHT") && q.push(b[v])
    }
    var z = new MercatorProjection(0, 0, 0, 1),
        E = new HorizontalDatum(6378137, 0);
    this.getDefaultViewport = function() {};
    this.getUrl = function() {
        return g
    };
    this.removeWmsLayer =
        function() {
            l.removeLayer(this)
        };
    this.getZIndex = function() {
        return m
    };
    this.setZIndex = function(a) {
        m = a;
        f && (f.style.zIndex = m)
    };
    this.getWmsVisible = function() {
        return this.getVisible()
    };
    this.getVisible = function() {
        return n
    };
    this.setWmsVisible = function(a) {
        this.setVisible(a)
    };
    this.setVisible = function(a) {
        n = a;
        f && (f.style.display = n ? "block" : "none")
    };
    this.putVisible = function(a) {
        this.setVisible(a)
    };
    this.setOpacity = function(a) {
        if (f) {
            var b = parseInt(100 * a);
            f.style.filter = "alpha(opacity=" + b + ")";
            f.style.opacity = a
        }
        s = a
    };
    this.getOpacity = function() {
        return s
    };
    this.UpdateElement = function() {
        var a = k.getScale(),
            b = p / a,
            d = f,
            e;
        if (l) {
            e = k.getClientWidth();
            var m = k.getClientHeight(),
                n = k.ToMapPoint(0, 0),
                t = k.ToMapPoint(e, m);
            l && (k.ToMapPoint(0, 0), k.ToMapPoint(k.getClientWidth(), k.getClientHeight()));
            var s = n.x,
                v = n.y,
                F = t.x,
                P = t.y;
            switch (l.getCoordSys()) {
                case TGOS.TGCoordSys.EPSG3857:
                    v = z.Inverse(E, new CPoint3(n.x, n.y, 0));
                    t = z.Inverse(E, new CPoint3(t.x, t.y, 0));
                    s = v.X;
                    v = v.Y;
                    F = t.X;
                    P = t.Y;
                    break;
                default:
                    s = n.x, v = n.y, F = t.x, P = t.y
            }
            e = g + "?BBOX=" + s +
                "," + P + "," + F + "," + v + "&WIDTH=" + e + "&HEIGHT=" + m;
            e += "&" + q.join("&")
        } else e = void 0;
        d.src = e;
        f.width /= b;
        f.height /= b;
        h && (b = k.FromMapPoint(h.x, h.y), f.style.left = b.x + "px", f.style.top = b.y + "px");
        p = a
    };
    var F = function() {
        h = k.ToMapPoint(0, 0);
        f.style.left = "0px";
        f.style.top = "0px";
        f.width = k.getClientWidth();
        f.height = k.getClientHeight();
        f.style.display = e.getVisible() ? "block" : "none"
    };
    this.RebuildElement = function() {};
    (function() {
        l = d.map;
        n = !1 == d.wmsVisible ? !1 : !0;
        m = d.zIndex;
        f = document.createElement("img");
        f.style.position =
            "absolute";
        f.style.opacity = s;
        var b = parseInt(100 * s);
        f.style.filter = "alpha(opacity=" + b + ")";
        k = d.map.getMapBase();
        g = 0 < a.indexOf("?") ? a.slice(0, a.indexOf("?")) : a;
        k.getHObject().appendChild(f);
        l.addLayer(e, !0);
        f.onload = F
    })()
};
TGOS.WMSLayer = function(a, d, b, e, f, g, h) {
    function k(a) {
        var b = null,
            e = "",
            f = "",
            g = 0;
        a && (e = GetXMLNodeAttribute(a, "Name"), g = parseInt(GetXMLNodeAttribute(a, "FeatureType")), f = GetXMLNodeAttribute(a, "SRName"));
        var h = e;
        if (a = FindXMLNodes(GetXMLChildNode(a, "Fields"), "Field"))
            for (var b = [], m = 0; m < a.length; m++) b.push(GetXMLNodeAttribute(a.item(m), "Name"));
        this.getName = function() {
            return e
        };
        this.putName = function(a) {
            e = a
        };
        this.getTitle = function() {
            return h
        };
        this.putTitle = function(a) {
            h = a
        };
        this.getFields = function() {
            return b
        };
        this.getFeatureType = function() {
            return g
        };
        this.getSRName = function() {
            return f
        };
        this.ExecuteQuery = function(a, b, e, f) {
            window.open(d + "/Query?V=" + R + "&S=" + K.valueOf() + "&Layer=" + escape(this.getName()) + (b ? "&GEOM=" : "&EXPR=") + escape(a));
            pAgent = new AjaxAgent(d + "/Query", !0, !0);
            pAgent.SendRequest("V=" + R + "&S=" + K.valueOf() + "&Layer=" + escape(this.getName()) + (b ? "&GEOM=" : "&EXPR=") + escape(a), e, null, f)
        };
        this.ExecuteUpdate = function(a, b, e, f, g) {
            window.open(d + "/Update?V=" + R + "&S=" + K.valueOf() + "&Layer=" + escape(this.getName()) +
                "&ID=" + a + "&GEOM=" + b + "&Values=" + e);
            pAgent = new AjaxAgent(d + "/Update", !1, !0);
            pAgent.SendRequest("V=" + R + "&S=" + K.valueOf() + "&Layer=" + escape(this.getName()) + "&ID=" + a + "&GEOM=" + b + "&Values=" + e, f, null, g);
            Reget()
        };
        this.ExecuteDelete = function(a, b, e) {
            pAgent = new AjaxAgent(d + "/Delete", !1, !0);
            pAgent.SendRequest("V=" + R + "&S=" + K.valueOf() + "&Layer=" + escape(this.getName()) + "&ID=" + a, b, null, e);
            Reget()
        }
    }
    var l = new MercatorProjection(0, 0, 0, 1),
        n = new HorizontalDatum(6378137, 0),
        m = this,
        p = null,
        s = a,
        q = a,
        v = g.left,
        z = g.top,
        E = g.right,
        F = g.bottom,
        G = !0,
        A = b,
        B = null == f ? TGOS.WMSLayer.enumCoordinate.TWD97 : f,
        C = null == e ? TGOS.WMSLayer.enumCoordinate.TWD97 : e,
        u = "auto",
        w = [];
    if (-1 < A.indexOf("?"))
        for (b = A.indexOf("?"), a = A.substring(0, b), b = A.substr(b + 1, A.length - b), A = a, a = b.split("&"), b = 0; b < a.length; b++) 0 != a[b].toUpperCase().indexOf("BBOX") && 0 != a[b].toUpperCase().indexOf("WIDTH") && 0 != a[b].toUpperCase().indexOf("HEIGHT") && w.push(a[b]);
    var t = 0,
        D = 0,
        H = 0,
        J = 0,
        P = 0,
        N = 0,
        Q = 0,
        V = 0,
        R = 0,
        K = new Date,
        L = null,
        I = [],
        O = null,
        W = 100;
    this.setZIndex = function(a) {
        u = a;
        L && (L.style.zIndex =
            u)
    };
    this.getZIndex = function() {
        return u
    };
    this.getName = function() {
        return s
    };
    this.putName = function(a) {
        s = a
    };
    this.getTitle = function() {
        return q
    };
    this.putTitle = function(a) {
        q = a
    };
    this.getVisible = function() {
        return G
    };
    this.putVisible = function(a) {
        G = a;
        L && (L.style.visibility = a ? "" : "hidden")
    };
    this.putTransparent = function(a) {
        W = a;
        this.SetTransparent(a)
    };
    this.putShpPath = function(a) {
        m_shpPath = a
    };
    this.putLabelName = function(a) {};
    this.getLeft = function() {
        return v
    };
    this.getTop = function() {
        return z
    };
    this.getRight = function() {
        return E
    };
    this.getBottom = function() {
        return F
    };
    this.getLayers = function() {
        return I
    };
    this.getThematicLayer = function() {
        return O
    };
    this.Initialize = function(a) {
        p = a;
        a = p.getHObject();
        L = a.ownerDocument.createElement("img");
        a.appendChild(L);
        L.galleryImg = !1;
        L.hideFocus = !0;
        L.style.MozUserSelect = "none";
        L.border = "0px";
        L.style.position = "absolute";
        L.style.width = "100%";
        L.style.height = "100%";
        L.style.zIndex = u;
        L.style.visibility = G ? "" : "hidden";
        L.onmousedown = function() {
            return !1
        };
        L.galleryImg = !1;
        this.SetTransparent(W)
    };
    this.RemoveSelf =
        function() {
            null != L && (null != p && p.getHObject().removeChild(L), L = null)
        };
    this.SetTransparent = function(a) {
        if (L) {
            var b = parseFloat(a, 10) / 100;
            L.style.filter = "alpha(opacity=" + a + ")";
            L.style.opacity = b
        }
    };
    this.UpdateElement = function() {
        var a, b;
        "97" != h ? (a = l.Forward(n, new CPoint3(parseFloat(t), parseFloat(D), 0)), b = l.Forward(n, new CPoint3(parseFloat(H), parseFloat(J), 0)), a = p.FromMapPoint(a.X, a.Y), b = p.FromMapPoint(b.X, b.Y)) : (a = p.FromMapPoint(t, D), b = p.FromMapPoint(H, J));
        L.style.zIndex = u;
        L.style.width = parseInt(Math.abs(b.x -
            a.x)) + "px";
        L.style.height = parseInt(Math.abs(b.y - a.y)) + "px";
        L.style.left = Math.round(Math.min(a.x, b.x)) + "px";
        L.style.top = Math.round(Math.min(a.y, b.y)) + "px"
    };
    var Z = function() {
        if ("complete" == L.readyState || L.complete && null == L.readyState) "MSIE" == DeviceTest() ? DetachEvent(L, "readystatechange", Z, !1) : DetachEvent(L, "load", Z, !1), t = P, D = N, H = Q, J = V, m.UpdateElement && m.UpdateElement()
    };
    this.RebuildElement = function() {
        if (!1 != this.getVisible()) {
            var a = p.FromMapPoint(v, z),
                b = p.FromMapPoint(E, F);
            0 > a.x ? a.x = 0 : a.x > p.getClientWidth() &&
                (a.x = p.getClientWidth());
            0 > a.y ? a.y = 0 : a.y > p.getClientHeight() && (a.y = p.getClientHeight());
            0 > b.x ? b.x = 0 : b.x > p.getClientWidth() && (b.x = p.getClientWidth());
            0 > b.y ? b.y = 0 : b.y > p.getClientHeight() && (b.y = p.getClientHeight());
            if (!(a.x > b.x || a.y > b.y)) {
                var d = p.ToMapPoint(a.x, a.y),
                    e = p.ToMapPoint(b.x, b.y);
                P = d.x;
                N = d.y;
                Q = e.x;
                V = e.y;
                nWidth = parseInt(b.x - a.x);
                nHeight = parseInt(b.y - a.y);
                "MSIE" == DeviceTest() ? AttachEvent(L, "readystatechange", Z, !1) : AttachEvent(L, "load", Z, !1);
                B == C && (a = "?" + w.join("&"), "97" != h && (b = l.Inverse(n, new CPoint3(P,
                    N, 0)), d = l.Inverse(n, new CPoint3(Q, V, 0)), P = b.X, N = b.Y, Q = d.X, V = d.Y), a += "&BBOX=" + P + "," + V + "," + Q + "," + N + "&WIDTH=" + nWidth + "&HEIGHT=" + nHeight, L.src = A + a)
            }
        }
    };
    var aa = function(a, b) {
        O = b
    };
    this.CreateLegend = function(a) {
        if (1 < I.length)
            for (var b = 0; b < I.length; b++) a.CreateSubLegend(I[b], aa)
    };
    this.ExecuteQuery = function(a, b, d, e) {
        if (null != O) return O.ExecuteQuery(a, b, d, e)
    };
    this.ExecuteUpdate = function(a, b, d, e, f) {
        if (null != O) return O.ExecuteUpdate(a, b, d, e, f)
    };
    this.ExecuteDelete = function(a, b, d) {
        if (null != O) return O.ExecuteDelete(a,
            b, d)
    };
    this.getFeatureType = function() {
        if (null != O) return O.getFeatureType()
    };
    this.getFields = function() {
        if (null != O) return O.getFields()
    };
    I = [];
    0 == I.length ? I.push(new k(null)) : 1 == I.length && (I[0].putName(""), I[0].putTitle(q));
    O = I[I.length - 1]
};
TGOS.WMSLayer.enumCoordinate = {
    WGS84: 0,
    TWD97: 1,
    GOOGLE: 2,
    TWD97_119: 3
};
MapLayer.enumFeatureType = {
    Unknown: 0,
    Point: 1,
    LineString: 2,
    Polygon: 3
};

function MapLayer(a, d) {
    function b(a) {
        var b = null,
            f = "",
            g = "",
            h = 0;
        a && (f = GetXMLNodeAttribute(a, "Name"), h = parseInt(GetXMLNodeAttribute(a, "FeatureType")), g = GetXMLNodeAttribute(a, "SRName"));
        var m = f;
        if (a = FindXMLNodes(GetXMLChildNode(a, "Fields"), "Field"))
            for (var b = [], l = 0; l < a.length; l++) b.push(GetXMLNodeAttribute(a.item(l), "Name"));
        this.getName = function() {
            return f
        };
        this.putName = function(a) {
            f = a
        };
        this.getTitle = function() {
            return m
        };
        this.putTitle = function(a) {
            m = a
        };
        this.getFields = function() {
            return b
        };
        this.getFeatureType =
            function() {
                return h
            };
        this.getSRName = function() {
            return g
        };
        this.ExecuteQuery = function(a, b, e, f) {
            P = new AjaxAgent(d + "/Query", !0, !0);
            P.SendRequest("V=" + C + "&S=" + u.valueOf() + "&Layer=" + escape(this.getName()) + (b ? "&GEOM=" : "&EXPR=") + escape(a), e, null, f)
        };
        this.ExecuteUpdate = function(a, b, f, g, h) {
            P = new AjaxAgent(d + "/Update", !1, !0);
            P.SendRequest("V=" + C + "&S=" + u.valueOf() + "&Layer=" + escape(this.getName()) + "&ID=" + a + "&GEOM=" + b + "&Values=" + f, g, null, h);
            e()
        };
        this.ExecuteDelete = function(a, b, f) {
            P = new AjaxAgent(d + "/Delete", !1, !0);
            P.SendRequest("V=" + C + "&S=" + u.valueOf() + "&Layer=" + escape(this.getName()) + "&ID=" + a, b, null, f);
            e()
        }
    }

    function e() {
        C++;
        (new AjaxAgent(d, !1, !0)).SendRequest("V=" + C + "&S=" + u.valueOf(), function(a) {
            a = GetXMLChildNode(a.responseXML.documentElement, "Infomation");
            a = GetXMLChildNode(a, "Envelope");
            l = parseFloat(GetXMLNodeAttribute(a, "Left"));
            n = parseFloat(GetXMLNodeAttribute(a, "Top"));
            m = parseFloat(GetXMLNodeAttribute(a, "Right"));
            p = parseFloat(GetXMLNodeAttribute(a, "Bottom"));
            f.RebuildElement()
        })
    }
    var f = this,
        g = null,
        h = a,
        k = a,
        l = 0,
        n = 0,
        m = 1,
        p = 1,
        s = !0,
        q = 0,
        v = 0,
        z = 0,
        E = 0,
        F = 0,
        G = 0,
        A = 0,
        B = 0,
        C = 0,
        u = new Date,
        w = null,
        t = [],
        D = null;
    this.getName = function() {
        return h
    };
    this.putName = function(a) {
        h = a
    };
    this.getTitle = function() {
        return k
    };
    this.putTitle = function(a) {
        k = a
    };
    this.getVisible = function() {
        return s
    };
    this.putVisible = function(a) {
        s = a;
        w && (w.style.visibility = a ? "" : "hidden")
    };
    this.getResourcePath = function() {
        return d
    };
    this.getNode = function() {
        return w
    };
    this.getLeft = function() {
        return l
    };
    this.getTop = function() {
        return n
    };
    this.getRight = function() {
        return m
    };
    this.getBottom = function() {
        return p
    };
    this.getLayers = function() {
        return t
    };
    this.getThematicLayer = function() {
        return D
    };
    this.Initialize = function(a) {
        g = a;
        a = g.getHObject();
        w = a.ownerDocument.createElement("img");
        a.appendChild(w);
        w.galleryImg = !1;
        w.hideFocus = !0;
        w.style.MozUserSelect = "none";
        w.border = "0px";
        w.style.position = "absolute";
        w.style.width = "100%";
        w.style.height = "100%";
        w.style.visibility = s ? "" : "hidden";
        w.onmousedown = function() {
            return !1
        };
        w.galleryImg = !1
    };
    this.RemoveSelf = function() {
        null != w && (null != g && g.getHObject().removeChild(w),
            w = null)
    };
    this.UpdateElement = function() {
        var a = g.FromMapPoint(q, v),
            b = g.FromMapPoint(z, E);
        w.style.width = parseInt(Math.abs(b.x - a.x)) + "px";
        w.style.height = parseInt(Math.abs(b.y - a.y)) + "px";
        w.style.left = Math.round(Math.min(a.x, b.x)) + "px";
        w.style.top = Math.round(Math.min(a.y, b.y)) + "px"
    };
    var H = function() {
        if ("complete" == w.readyState || w.complete && null == w.readyState) "MSIE" == DeviceTest() ? DetachEvent(w, "readystatechange", H, !1) : DetachEvent(w, "load", H, !1), q = F, v = G, z = A, E = B, f.UpdateElement && f.UpdateElement()
    };
    this.RebuildElement =
        function() {
            if (!1 != this.getVisible()) {
                var a = g.FromMapPoint(l, n),
                    b = g.FromMapPoint(m, p);
                0 > a.x ? a.x = 0 : a.x > g.getClientWidth() && (a.x = g.getClientWidth());
                0 > a.y ? a.y = 0 : a.y > g.getClientHeight() && (a.y = g.getClientHeight());
                0 > b.x ? b.x = 0 : b.x > g.getClientWidth() && (b.x = g.getClientWidth());
                0 > b.y ? b.y = 0 : b.y > g.getClientHeight() && (b.y = g.getClientHeight());
                if (!(a.x > b.x || a.y > b.y)) {
                    var e = g.ToMapPoint(a.x, a.y),
                        f = g.ToMapPoint(b.x, b.y);
                    F = e.x;
                    G = e.y;
                    A = f.x;
                    B = f.y;
                    nWidth = parseInt(b.x - a.x);
                    nHeight = parseInt(b.y - a.y);
                    a = "/GetImage?V=" +
                        C + "&S=" + u.valueOf() + "&Width=" + nWidth + "&Height=" + nHeight + "&Left=" + F + "&Top=" + G + "&Right=" + A + "&Bottom=" + B;
                    "MSIE" == DeviceTest() ? AttachEvent(w, "readystatechange", H, !1) : AttachEvent(w, "load", H, !1);
                    w.src = d + a
                }
            }
        };
    var J = function(a, b) {
        D = b
    };
    this.CreateLegend = function(a) {
        if (1 < t.length)
            for (var b = 0; b < t.length; b++) a.CreateSubLegend(t[b], J)
    };
    this.ExecuteQuery = function(a, b, d, e) {
        if (null != D) return D.ExecuteQuery(a, b, d, e)
    };
    this.ExecuteUpdate = function(a, b, d, e, f) {
        if (null != D) return D.ExecuteUpdate(a, b, d, e, f)
    };
    this.ExecuteDelete =
        function(a, b, d) {
            if (null != D) return D.ExecuteDelete(a, b, d)
        };
    this.getFeatureType = function() {
        if (null != D) return D.getFeatureType()
    };
    this.getFields = function() {
        if (null != D) return D.getFields()
    };
    var t = [],
        P = new AjaxAgent(d, !1, !0);
    P.SendRequest("V=" + C + "&S=" + u.valueOf(), function(a) {
        a = GetXMLChildNode(a.responseXML.documentElement, "Infomation");
        var d = GetXMLChildNode(a, "Envelope");
        l = parseFloat(GetXMLNodeAttribute(d, "Left"));
        n = parseFloat(GetXMLNodeAttribute(d, "Top"));
        m = parseFloat(GetXMLNodeAttribute(d, "Right"));
        p = parseFloat(GetXMLNodeAttribute(d, "Bottom"));
        if (a = FindXMLNodes(GetXMLChildNode(a, "Layers"), "Layer"))
            for (d = 0; d < a.length; d++) t.push(new b(a.item(d)))
    });
    0 == t.length ? t.push(new b(null)) : 1 == t.length && (t[0].putName(""), t[0].putTitle(k));
    D = t[t.length - 1]
};

function CPoint3(a, d, b) {
    this.X = a;
    this.Y = d;
    this.Z = b;
    return this
}
CPoint3.prototype.toString = function() {
    return "(" + this.X + "," + this.Y + "," + this.Z + ")"
};
CPoint3.prototype.Distance = function() {
    return Math.sqrt(this.X * this.X + this.Y * this.Y + this.Z * this.Z)
};

function GeographicTransform(a, d, b, e, f, g, h) {
    this.BursaWolfTransform = function(k) {
        var l = Math.sin(e),
            n = Math.cos(e);
        k = new CPoint3(k.X, n * k.Y + l * k.Z, -l * k.Y + n * k.Z);
        l = Math.sin(f);
        n = Math.cos(f);
        k = new CPoint3(n * k.X - l * k.Z, k.Y, l * k.X + n * k.Z);
        l = Math.sin(g);
        n = Math.cos(g);
        k = new CPoint3(n * k.X + l * k.Y, -l * k.X + n * k.Y, k.Z);
        return new CPoint3(a + (1 + h) * k.X, d + (1 + h) * k.Y, b + (1 + h) * k.Z)
    };
    this.MolodenskyBadekasTransform = function(k) {
        return new CPoint3(a + h * k.X + (k.X + g * k.Y - f * k.Z), d + h * k.Y + (-g * k.X + k.Y + e * k.Z), b + h * k.Z + (f * k.X - e * k.Y + k.Z))
    };
    return this
}

function HorizontalDatum(a, d) {
    this.SemiMajorAxis = a;
    this.Flattening = d;
    this.SemiMinorAxis = this.SemiMajorAxis * (1 - this.Flattening);
    this.es = 1 - (1 - this.Flattening) * (1 - this.Flattening);
    this.et2 = this.es / (1 - this.es);
    return this
}
HorizontalDatum.prototype.CartesianFromGeodetic = function(a) {
    if (90 == a.Y || -90 == a.Y) return new CPoint3(0, 0, (-90 == a.Y ? -1 : 1) * this.SemiMajorAxis * (1 - this.es) + a.Z);
    var d = a.Y * Math.PI / 180,
        b = a.X * Math.PI / 180,
        e = Math.sin(d),
        f = Math.cos(d),
        d = this.SemiMajorAxis / Math.sqrt(1 - this.es * e * e),
        g = (d + a.Z) * f * Math.cos(b),
        b = (d + a.Z) * f * Math.sin(b);
    return new CPoint3(g, b, ((1 - this.es) * d + a.Z) * e)
};
HorizontalDatum.prototype.GeodeticFromCartesian = function(a) {
    if (0 == a.X && 0 == a.Y) return new CPoint3(0, 0 <= a.Z ? 90 : -90, Math.abs(a.Z) - this.SemiMinorAxis);
    var d = a.X * a.X + a.Y * a.Y,
        b = Math.sqrt(d),
        e = 1.0026 * a.Z,
        d = Math.sqrt(e * e + d),
        e = e / d,
        d = b / d,
        e = a.Z + this.SemiMinorAxis * this.et2 * e * e * e,
        d = b - this.SemiMajorAxis * this.es * d * d * d,
        f = Math.sqrt(e * e + d * d),
        e = e / f,
        f = d / f,
        g = this.SemiMajorAxis / Math.sqrt(1 - this.es * e * e),
        d = 0,
        d = 0.3826834323650898 <= f ? b / f - g : -0.3826834323650898 >= f ? b / -f - g : a.Z / e - g * (1 - this.es),
        b = 180 * Math.atan(e / f) / Math.PI;
    a = 0 !=
        a.X ? 180 * Math.atan2(a.Y, a.X) / Math.PI : 0 < a.Y ? 90 : -90;
    return new CPoint3(a, b, d)
};

function TransverseMercatorProjection(a, d, b, e, f) {
    function g(a, b, d, e) {
        var f, g = (f = e * e) * (0.46875 - e * (0.013020833333333334 + 0.007120768229166667 * e)),
            s = (f *= e) * (0.3645833333333333 - 0.005696614583333333 * e);
        d *= b;
        b *= b;
        return (1 - e * (0.25 + e * (0.046875 + e * (0.01953125 + 0.01068115234375 * e)))) * a - d * (e * (0.75 - e * (0.046875 + e * (0.01953125 + 0.01068115234375 * e))) + b * (g + b * (s + 0.3076171875 * b * f * e)))
    }
    this.centralMeridian = a;
    this.falseEasting = d;
    this.falseNorthing = b;
    this.latitudeOfOrigin = e;
    this.scaleFactor = f;
    this.Forward = function(h, k) {
        var l =
            CPoint3((k.X - a) * Math.PI / 180, k.Y * Math.PI / 180, k.Z),
            n = Math.sin(l.Y),
            m = Math.cos(l.Y),
            p = 1E-10 < Math.abs(m) ? n / m : 0,
            p = p * p,
            s = m * l.X,
            q = s * s,
            s = s / Math.sqrt(1 - h.es * n * n),
            v = h.et2 * m * m,
            z = s * (1 + q / 6 * (1 - p + v + q / 20 * (5 + p * (p - 18) + v * (14 - 58 * p) + q / 42 * (61 + p * (p * (179 - p) - 479))))),
            E = e * Math.PI / 180,
            E = g(E, Math.sin(E), Math.cos(E), h.es),
            n = g(l.Y, n, m, h.es) - E + n * s * l.X / 2 * (1 + q / 12 * (5 - p + v * (9 + 4 * v) + q / 30 * (61 + p * (p - 58) + v * (270 - 330 * p) + q / 56 * (1385 + p * (p * (543 - p) - 3111)))));
        k = new CPoint3(z, n, l.Z);
        k.X = k.X * f * h.SemiMajorAxis + d;
        k.Y = k.Y * f * h.SemiMajorAxis + b;
        return k
    };
    this.Inverse = function(h, k) {
        var l = CPoint3((k.X - d) / h.SemiMajorAxis / f, (k.Y - b) / h.SemiMajorAxis / f, k.Z),
            n = e * Math.PI / 180,
            n = g(n, Math.sin(n), Math.cos(n), h.es) + l.Y,
            m = h.es,
            p = 1 / (1 - m),
            s = n,
            q;
        for (q = 10; q; --q) {
            var v = Math.sin(s),
                z = 1 - m * v * v,
                s = s - (z = (g(s, v, Math.cos(s), m) - n) * z * Math.sqrt(z) * p);
            if (1E-11 > Math.abs(z)) break
        }
        n = s;
        m = Math.PI / 2;
        Math.abs(n) >= m ? k = new CPoint3(0, 0 > l.Y ? -m : m, l.Z) : (q = Math.sin(n), m = Math.cos(n), p = 1E-10 < Math.abs(m) ? q / m : 0, s = h.et2 * m * m, q = 1 - h.es * q * q, v = l.X * Math.sqrt(q), q *= p, p *= p, z = v * v, n -= q * z / (1 - h.es) / 2 * (1 - z / 12 *
            (5 + p * (3 - 9 * s) + s * (1 - 4 * s) - z / 30 * (61 + p * (90 - 252 * s + 45 * p) + 46 * s - z / 56 * (1385 + p * (3633 + p * (4095 + 1574 * p)))))), k = new CPoint3(v * (1 - z / 6 * (1 + 2 * p + s - z / 20 * (5 + p * (28 + 24 * p + 8 * s) + 6 * s - z / 42 * (61 + p * (662 + p * (1320 + 720 * p)))))) / m, n, l.Z));
        k.X = 180 * k.X / Math.PI + a;
        k.Y = 180 * k.Y / Math.PI;
        return k
    };
    return this
}

function CoordinateTransform(a, d, b, e, f, g) {
    d && (g = d.Inverse(a, g));
    a && b && a != b && (g = a.CartesianFromGeodetic(g), f && (g = f.BursaWolfTransform(g)), g = b.GeodeticFromCartesian(g));
    e && (g = e.Forward(b, g));
    return g
};

function MercatorProjection(a, d, b, e) {
    function f(a, b, d) {
        b *= d;
        return Math.tan(0.5 * (g - a)) / Math.pow((1 - b) / (1 + b), 0.5 * d)
    }
    this.centralMeridian = a;
    this.falseEasting = d;
    this.falseNorthing = b;
    this.scaleFactor = e;
    this.Forward = function(k, l) {
        var n = CPoint3((l.X - a) * Math.PI / 180, l.Y * Math.PI / 180, l.Z);
        if (0 == k.es)
            if (1E-10 >= Math.abs(Math.abs(n.Y) - g)) l = null;
            else {
                var m = n.X,
                    p = Math.log(Math.tan(h + 0.5 * n.Y));
                l = new CPoint3(m, p, n.Z)
            }
        else 1E-10 >= Math.abs(Math.abs(n.Y) - g) ? l = null : (m = n.X, p = -Math.log(f(n.Y, Math.sin(n.Y), Math.sqrt(k.es))),
            l = new CPoint3(m, p, n.Z));
        l.X = l.X * e * k.SemiMajorAxis + d;
        l.Y = l.Y * e * k.SemiMajorAxis + b;
        return l
    };
    this.Inverse = function(f, h) {
        var n = CPoint3((h.X - d) / f.SemiMajorAxis / e, (h.Y - b) / f.SemiMajorAxis / e, h.Z);
        if (0 == f.es) {
            var m = g - 2 * Math.atan(Math.exp(-n.Y));
            h = new CPoint3(n.X, m, n.Z)
        } else {
            var m = Math.exp(-n.Y),
                p = Math.sqrt(f.es),
                s = 0.5 * p,
                q = g - 2 * Math.atan(m);
            i = 15;
            do var v = p * Math.sin(q),
                v = g - 2 * Math.atan(m * Math.pow((1 - v) / (1 + v), s)) - q,
                q = q + v; while (1E-10 < Math.abs(v) && --i);
            h = new CPoint3(n.X, q, n.Z)
        }
        h.X = 180 * h.X / Math.PI + a;
        h.Y = 180 * h.Y / Math.PI;
        return h
    };
    var g = Math.PI / 2,
        h = Math.PI / 4;
    return this
};

function ScaleTransformation(a) {
    var d = a,
        b = -a,
        e = 1,
        f = 1;
    this.getBaseScaleX = function() {
        return d
    };
    this.putBaseScaleX = function(a) {
        d = a
    };
    this.getBaseScaleY = function() {
        return b
    };
    this.putBaseScaleY = function(a) {
        b = a
    };
    this.getScale = function() {
        return d * e
    };
    this.putScale = function(a) {
        e = a / d;
        f = a / Math.abs(b)
    };
    this.getScaleX = function() {
        return d * e
    };
    this.getScaleY = function() {
        return b * f
    }
}

function LevelTransformation(a, d, b) {
    var e = a,
        f = -a,
        g = d,
        h = Math.pow(2, g),
        k = b;
    this.FitLevel = function() {
        this.putMapLevel(Math.round(g))
    };
    this.getBaseScaleX = function() {
        return e
    };
    this.putBaseScaleX = function(a) {
        e = a
    };
    this.getBaseScaleY = function() {
        return f
    };
    this.putBaseScaleY = function(a) {
        f = a
    };
    this.getMapMaxLevel = function() {
        return k
    };
    this.putMapMaxLevel = function(a) {
        k = a
    };
    this.getMapLevel = function() {
        return g
    };
    this.putMapLevel = function(a) {
        if (g == a) return !0;
        var b = a > k - 1 ? k - 1 : 0 > a ? 0 : a;
        if ((a >= k || 0 > a) && g == b) return !1;
        g =
            b;
        h = Math.pow(2, g);
        return !0
    };
    this.getScale = function() {
        return e * h
    };
    this.putScale = function(a) {
        this.putMapLevel(Math.log(a / e) / Math.LN2)
    };
    this.getScaleX = function() {
        return e * h
    };
    this.getScaleY = function() {
        return f * h
    }
}

function MapBase(a, d) {
    var b, e, f, g, h, k = 0,
        l = 0,
        n = 0,
        m = 0,
        p = null;
    f = [];
    g = [];
    h = null;
    p = d;
    b = a.ownerDocument.createElement("div");
    a.appendChild(b);
    b.style.position = "absolute";
    b.style.overflow = "hidden";
    b.style.left = "0px";
    b.style.top = "0px";
    b.style.width = "100%";
    b.style.height = "100%";
    b.style.zIndex = 0;
    e = b.ownerDocument.createElement("div");
    b.appendChild(e);
    e.style.position = "absolute";
    e.style.left = "0px";
    e.style.top = "0px";
    e.style.width = "100%";
    e.style.height = "100%";
    e.style.zIndex = 0;
    var k = Number(e.clientWidth),
        l = Number(e.clientHeight),
        s, q = FuncAdapter(this, function() {
            if (k != Number(e.clientWidth) || l != Number(e.clientHeight)) s && clearTimeout(s), s = setTimeout(FuncAdapter(this, function() {
                this.RefreshMap(!0, !0)
            }), 1E3), this.RefreshMap(!1, !1)
        });
    AttachEvent(e, "resize", q, !1);
    this.setColor = function(a) {
        e.style.background = a
    };
    this.FinalRelease = function() {
        this.SelectMapTool(null);
        this.RemoveAllElements();
        DetachEvent(e, "resize", q, !1);
        b.removeChild(b)
    };
    this.getHObject = function() {
        return e
    };
    this.getHPackage = function() {
        return b
    };
    this.getClientWidth = function() {
        return k
    };
    this.getClientHeight = function() {
        return l
    };
    this.getCenterX = function() {
        return n
    };
    this.putCenterX = function(a) {
        n = a
    };
    this.getCenterY = function() {
        return m
    };
    this.putCenterY = function(a) {
        m = a
    };
    this.getTransformation = function() {
        return p
    };
    this.putScale = function(a) {
        p = a
    };
    this.getScale = function() {
        return p.getScale()
    };
    this.putScale = function(a) {
        p.putScale(a)
    };
    this.getCellSizeX = function() {
        return this.ToMapDistX(1)
    };
    this.getCellSizeY = function() {
        return this.ToMapDistY(1)
    };
    this.MoveMapTo = function(a, b) {
        this.putCenterX(a);
        this.putCenterY(b)
    };
    this.ZoomMapTo = function(a) {
        if (null != a.left && null != a.top && null != a.right && null != a.bottom) {
            this.MoveMapTo((a.right + a.left) / 2, (a.bottom + a.top) / 2);
            var b = l / (a.bottom - a.top);
            this.putScale(Math.min(Math.abs(k / (a.right - a.left)), Math.abs(b)))
        }
    };
    this.getPackageOffset = function() {
        var a = 0,
            d = 0,
            d = b.getBoundingClientRect(),
            a = d.left,
            d = d.top;
        return new TGOS.TGPoint(a, d)
    };
    this.getCursorPosition = function(a) {
        if (null == a) return null;
        var b = this.getPackageOffset();
        return new TGOS.TGPoint(a.clientX - b.x,
            a.clientY - b.y)
    };
    this.ToMapPoint = function(a, b) {
        return new TGOS.TGPoint(this.ToMapDistX(a - k / 2) + n, this.ToMapDistY(b - l / 2) + m)
    };
    this.FromMapPoint = function(a, b) {
        return new TGOS.TGPoint(this.FromMapDistX(a - n) + k / 2, this.FromMapDistY(b - m) + l / 2)
    };
    this.ToMapDistX = function(a) {
        return a / p.getScaleX()
    };
    this.ToMapDistY = function(a) {
        return a / p.getScaleY()
    };
    this.FromMapDistX = function(a) {
        return a * p.getScaleX()
    };
    this.FromMapDistY = function(a) {
        return a * p.getScaleY()
    };
    this.SelectMapTool = function(a) {
        if (a) {
            if (a.InitMapEvent) return h &&
                h.ExitMapEvent && h.ExitMapEvent(), a.InitMapEvent(this), h = a, !0
        } else h && h.ExitMapEvent && (h.ExitMapEvent(), h = null);
        return !1
    };
    this.getLayers = function() {
        return f
    };
    this.AddLayer = function(a) {
        null != a && (a.Initialize && a.Initialize(this), f.push(a))
    };
    this.RemoveLayer = function(a) {
        var b, d = f.length;
        for (b = 0; b < d; b++)
            if (f[b] == a) {
                f.splice(b, 1);
                break
            }
        a.RemoveSelf && a.RemoveSelf()
    };
    this.RemoveAllLayers = function() {
        var a, b = f.length;
        for (a = 0; a < b; a++) f[a].RemoveSelf && f[a].RemoveSelf();
        f = []
    };
    this.getElements = function(a) {
        return g
    };
    this.AddElement = function(a) {
        a.Initialize && a.Initialize(this);
        g.push(a)
    };
    this.RemoveElement = function(a) {
        var b, d = g.length;
        for (b = 0; b < d; b++)
            if (g[b] == a) {
                g.splice(b, 1);
                break
            }
        a.RemoveSelf && a.RemoveSelf()
    };
    this.RemoveAllElements = function() {
        var a, b = g.length;
        for (a = 0; a < b; a++) g[a].RemoveSelf && g[a].RemoveSelf();
        g = []
    };
    this.getExtent = function() {
        for (var a = null, b = null, d = null, e = null, g = 0; g < f.length; g++) {
            var h = f[g];
            h.getLeft && (null == a || this.FromMapDistX(a) > this.FromMapDistX(h.getLeft())) && (a = h.getLeft());
            h.getTop && (null ==
                b || this.FromMapDistY(b) > this.FromMapDistY(h.getTop())) && (b = h.getTop());
            h.getRight && (null == d || this.FromMapDistX(d) < this.FromMapDistX(h.getRight())) && (d = h.getRight());
            h.getBottom && (null == e || this.FromMapDistY(e) < this.FromMapDistY(h.getBottom())) && (e = h.getBottom())
        }
        return new TGOS.TGEnvelope(a, b, d, e)
    };
    this.RefreshMap = function(a) {
        z = !0;
        a && (k = Number(e.clientWidth), l = Number(e.clientHeight));
        if (f && 0 < f.length) {
            var b = f.length;
            if (a)
                for (var d = 0; d < b; d++) f[d].RebuildElement && f[d].RebuildElement();
            for (d = 0; d < b; d++) f[d].UpdateElement &&
                f[d].UpdateElement(1)
        }
        if (g && 0 < g.length) {
            b = g.length;
            if (a)
                for (d = 0; d < b; d++) g[d].RebuildElement && g[d].RebuildElement();
            for (d = 0; d < b; d++) g[d].UpdateElement && g[d].UpdateElement(1)
        }
    };
    var v = null,
        z = !1,
        E = null,
        F = null,
        G = null;
    this.MoveToAnimation = function(a, b, d) {
        z = !1;
        E = a.x;
        F = a.y;
        G = b;
        if (null == v) {
            var e = function() {
                if (!z) {
                    var a = this.getCenterX(),
                        b = this.getCenterY(),
                        f = this.getScale();
                    if (5 <= this.FromMapDistX(Math.abs(a - E)) || 5 <= this.FromMapDistY(Math.abs(b - F)) || 0.03125 <= Math.abs(Math.log(f / G)))
                        if (this.putScale(2 / (1 / f +
                                1 / G)), f != this.getScale()) {
                            this.MoveMapTo((a + E) / 2, (b + F) / 2);
                            this.RefreshMap(!1, !0);
                            z = !1;
                            v = setTimeout(FuncAdapter(this, e), 100);
                            return
                        }
                    this.putScale(G);
                    this.MoveMapTo(E, F);
                    this.RefreshMap(!0, !0);
                    z = !1
                }
                v = null;
                d && d()
            };
            e.call(this)
        }
    };
    this.getExtendedClientRect = function() {
        var a = TGOS.math.length(this.getClientWidth(), this.getClientHeight()) / 2,
            b = this.getClientWidth() / 2,
            d = this.getClientHeight() / 2;
        return {
            xmin: b - a,
            ymin: d - a,
            xmax: b + a,
            ymax: d + a
        }
    };
    this.getExtendedViewport = function() {
        var a = this.getExtendedClientRect(),
            b = this.ToMapPoint(a.xmin, a.ymin),
            a = this.ToMapPoint(a.xmax, a.ymax);
        return {
            xmin: b.x,
            ymin: a.y,
            xmax: a.x,
            ymax: b.y
        }
    }
}

function MapPoint(a, d) {
    this.x = a;
    this.y = d;
    this.Diff = function(a) {
        return a.constructor != TGOS.TGPoint ? this : new TGOS.TGPoint(this.x - a.x, this.y - a.y)
    };
    this.Plus = function(a) {
        return a.constructor != TGOS.TGPoint ? this : new TGOS.TGPoint(this.x + a.x, this.y + a.y)
    };
    this.toString = function() {
        return this.x + " " + this.y
    }
}

function MapEnvelope(a, d, b, e) {
    this.Left = a;
    this.Top = d;
    this.Right = b;
    this.Bottom = e;
    this.Extend = function(a) {
        a.constructor == TGOS.TGEnvelope && (!a.Left || null != this.Left && this.Left > a.Left != this.Right > this.Left || (this.Left = a.Left), !a.Top || null != this.Top && this.Top < a.Top != this.Bottom < this.Top || (this.Top = a.Top), !a.Right || null != this.Right && this.Right < a.Right != this.Left < this.Right || (this.Right = a.Right), !a.Bottom || null != this.Bottom && this.Bottom > a.Bottom != this.Top > this.Bottom || (this.Bottom = a.Bottom))
    };
    this.Shrink =
        function(a) {
            a.constructor == TGOS.TGEnvelope && (!a.Left || null != this.Left && this.Left < a.Left != this.Right > this.Left || (this.Left = a.Left), !a.Top || null != this.Top && this.Top > a.Top != this.Bottom < this.Top || (this.Top = a.Top), !a.Right || null != this.Right && this.Right > a.Right != this.Left < this.Right || (this.Right = a.Right), !a.Bottom || null != this.Bottom && this.Bottom < a.Bottom != this.Top > this.Bottom || (this.Bottom = a.Bottom))
        };
    this.toString = function() {
        return Math.min(this.Left, this.Right) + " " + Math.min(this.Top, this.Bottom) + "," +
            Math.max(this.Left, this.Right) + " " + Math.max(this.Top, this.Bottom)
    }
};

function Overview(a, d, b, e, f, g) {
    function h(a, b) {
        var d, e, f = !1;
        this.ExitMapEvent = null;
        this.IsMapAction = function() {
            return f
        };
        this.InitMapEvent = function(g) {
            var h = g.getHObject(),
                m = function(a) {
                    var b = a.screenX - d,
                        f = a.screenY - e;
                    d = a.screenX;
                    e = a.screenY;
                    g.MoveMapTo(g.getCenterX() - g.ToMapDistX(b), g.getCenterY() - g.ToMapDistY(f));
                    g.RefreshMap(!1)
                },
                k = function(a) {
                    DetachEvent(h, "mousemove", m, !0);
                    DetachEvent(h, "mouseup", k, !1);
                    g.RefreshMap(!0);
                    f = !1
                },
                l = function(a) {
                    util.disableDefault(a);
                    f = !0;
                    d = a.screenX;
                    e = a.screenY;
                    AttachEvent(h,
                        "mouseup", k, !1);
                    AttachEvent(h, "mousemove", m, !0)
                },
                n = function(b) {
                    a && (f = !0, b = g.getCursorPosition(b), b = g.ToMapPoint(b.X, b.Y), g.MoveToAnimation(b, g.getScale(), function() {
                        f = !1
                    }))
                },
                p = function(a) {
                    if (b) {
                        f = !0;
                        var d = g.getCursorPosition(a),
                            d = g.ToMapPoint(d.X, d.Y),
                            e = g.getScale(),
                            h = a.wheelDelta ? a.wheelDelta : -a.detail;
                        a = 0;
                        0 < h ? a = 1 : 0 > h && (a = -1);
                        h = 1;
                        h = g.getTransformation();
                        h = null != h && null != h.getLevelScale && null != h.getMapLevel ? h.getLevelScale(h.getMapLevel() + a) / e : Math.pow(2, a);
                        e *= h;
                        d = new MapPoint((g.getCenterX() - d.X) /
                            h + d.X, (g.getCenterY() - d.Y) / h + d.Y);
                        g.MoveToAnimation(d, e, function() {
                            f = !1
                        })
                    }
                };
            this.ExitMapEvent = function() {
                b && DetachEvent(h.ownerDocument, "mousewheel", p, !1);
                DetachEvent(h, "mousedown", l, !1);
                a && DetachEvent(h, "dblclick", n, !1)
            };
            AttachEvent(h, "mousedown", l, !1);
            a && AttachEvent(h, "dblclick", n, !1);
            b && AttachEvent(h.ownerDocument, "mousewheel", p, !1)
        }
    }

    function k(b) {
        switch (b) {
            case "Open":
                a.style.width = e + "px";
                a.style.height = f + "px";
                a.style.border = "2px solid";
                l.style.width = e + "px";
                l.style.height = f + "px";
                s.alt = "Open";
                s.src = TGOS.RES_PATH + "ShowClose.gif";
                s.status = !0;
                break;
            case "Close":
                a.style.width = "11px", a.style.height = "11px", a.style.border = "0px", l.style.width = "11px", l.style.height = "11px", s.alt = "Open", s.src = TGOS.RES_PATH + "ShowOpen.gif", s.status = !1
        }
    }
    var l = null,
        n = null,
        m = null,
        p = null,
        s, q = null,
        v = null;
    this.Show = function(b) {
        b ? (a.style.display = "inline", k("Open")) : a.style.display = "none"
    };
    this.Minimize = function() {
        k("Close")
    };
    this.FinalRelease = function() {
        d.RemoveElement(this);
        p && p.FinalRelease && p.FinalRelease();
        p = null;
        m &&
            m.FinalRelease && m && m.FinalRelease && m.FinalRelease();
        m = null;
        n && a.removeChild(n);
        n = null
    };
    this.CenterXY = function() {
        return new MapPoint(m.getCenterX(), m.getCenterY())
    };
    this.SelectAreaHide = function() {
        m_IndexObj.style.visibility = "hidden"
    };
    this.SelectAreaShow = function() {
        m_IndexObj.style.visibility = "visible"
    };
    this.getTarget = function() {
        return d
    };
    this.getMapBase = function() {
        return m
    };
    this.UpdateElement = function() {
        p.UpdateElement()
    };
    this.RebuildElement = function() {
        null != p && p.RebuildElement();
        if (null != m) {
            var a =
                d.getScale() / Math.pow(2, g);
            m.MoveToAnimation(new MapPoint(d.getCenterX(), d.getCenterY()), a)
        }
    };
    var z = new ScaleTransformation(1);
    z.putBaseScaleX(b.getBaseScaleX());
    z.putBaseScaleY(b.getBaseScaleY());
    l = document.createElement("div");
    a.appendChild(l);
    l.style.position = "absolute";
    l.style.right = "0px";
    l.style.bottom = "0px";
    this.setColor = function(a) {
        l.style.backgroundColor = a
    };
    l.style.width = e - 10 + "px";
    l.style.height = f - 10 + "px";
    l.style.overflow = "hidden";
    n = document.createElement("div");
    l.appendChild(n);
    n.style.position =
        "absolute";
    n.style.overflow = "hidden";
    n.style.right = "0px";
    n.style.bottom = "0px";
    n.style.width = e + "px";
    n.style.height = f + "px";
    s = l.ownerDocument.createElement("img");
    s.onreadystatechange = function() {
        n.style.right = s.offsetWidth - 10 + "px";
        n.style.width = e + "px";
        n.style.height = f + "px";
        s.onstatechange = null
    };
    l.appendChild(s);
    s.style.position = "absolute";
    s.style.right = "0px";
    s.style.bottom = "0px";
    s.status = !0;
    s.alt = "Close";
    s.style.cursor = "pointer";
    var E = null;
    this.setStyle = function(a) {};
    s.onclick = function() {
        var b = function(d,
            e) {
            var f = parseInt(l.style.width),
                g = parseInt(l.style.height),
                h = d - f,
                m = e - g;
            10 > Math.abs(h) || 10 > Math.abs(m) ? (a.style.width = d + "px", a.style.height = e + "px", l.style.width = d + "px", l.style.height = e + "px", a.style.border = "0px", E = null, s.status && (a.style.border = "2px solid", a.style.width = d + "px", a.style.height = e + "px", l.style.width = d + "px", l.style.height = e + "px")) : (a.style.width = f + h / 2 + "px", a.style.height = g + m / 2 + "px", l.style.width = f + h / 2 + "px", l.style.height = g + m / 2 + "px", E = setTimeout(function() {
                b(d, e)
            }, 50))
        };
        null != E && clearTimeout(E);
        E = null;
        (s.status = !s.status) ? (s.alt = "Close", s.src = TGOS.RES_PATH + "ShowClose.gif", b(e, f)) : (s.alt = "Open", s.src = TGOS.RES_PATH + "ShowOpen.gif", a.style.border = "2px solid", b(parseInt(s.offsetWidth), parseInt(s.offsetHeight)))
    };
    m = new MapBase(n, z, "0px", "0px", "100%", "100%");
    m.MoveMapTo(d.getCenterX(), d.getCenterY());
    m.RefreshMap(!0);
    p = new function(a) {
        var b = a.getTarget(),
            d = a.getMapBase(),
            e = !1,
            f = new h(!1, !1),
            g = d.getHPackage(),
            m = document.createElement("div");
        g.appendChild(m);
        m.style.position = "absolute";
        m.style.overflow =
            "hidden";
        m.style.width = "40px";
        m.style.height = "40px";
        m.style.left = "15px";
        m.style.top = "15px";
        m.style.border = "inset 1px #0300FA";
        a = m.ownerDocument.createElement("div");
        m.appendChild(a);
        a.style.filter = "Alpha(Opacity=35)";
        a.style.opacity = 0.35;
        a.style.MozOpacity = 0.35;
        a.style.MozUserSelect = "none";
        a.style.backgroundColor = "#5e38ff";
        a.style.width = "100%";
        a.style.height = "100%";
        var k, l, n = function(a) {
                var e = a.screenX - k,
                    f = a.screenY - l;
                k = a.screenX;
                l = a.screenY;
                b.MoveMapTo(b.getCenterX() + d.ToMapDistX(e), b.getCenterY() +
                    d.ToMapDistY(f));
                b.RefreshMap(!1)
            },
            p = function(a) {
                m.style.cursor = "default";
                DetachEvent(m, "mousemove", n, !0);
                DetachEvent(m, "mouseup", p, !1);
                b.RefreshMap(!0)
            },
            s = function(a) {
                util.disableDefault(a);
                k = a.screenX;
                l = a.screenY;
                m.style.cursor = "move";
                AttachEvent(m, "mousemove", n, !0);
                AttachEvent(m, "mouseup", p, !1)
            };
        AttachEvent(m, "mousedown", s, !1);
        d.SelectMapTool(f);
        d.AddElement(this);
        this.FinalRelease = function() {
            d.RemoveElement(this);
            DetachEvent(m, "mousedown", s, !1);
            f && f.FinalRelease && f.FinalRelease();
            f = null;
            m && g.removeChild(m);
            m = null
        };
        this.UpdateElement = function() {
            if (f.IsMapAction()) e || (e = !0, q.x = parseInt(m.style.left) + parseInt(m.style.width) / 2, q.y = parseInt(m.style.top) + parseInt(m.style.height) / 2, a = d.ToMapPoint(q.x, q.y), b.MoveMapTo(a.x, a.y), b.RefreshMap(!1), e = !1);
            else {
                var a = b.ToMapPoint(0, 0),
                    g = b.ToMapPoint(b.getClientWidth(), b.getClientHeight());
                q = d.FromMapPoint(a.x, a.y);
                v = d.FromMapPoint(g.x, g.y);
                q.x && q.y && v.x && v.y && (m.style.left = q.x + "px", m.style.top = q.y + "px", m.style.width = v.x - q.x + "px", m.style.height = v.y - q.y + "px")
            }
        };
        this.RebuildElement =
            function() {
                f.IsMapAction() && !e && (e = !0, b.RefreshMap(!0), e = !1)
            }
    }(this);
    d.AddElement(this);
    this.RebuildElement()
};
TGOS.CTRL_ZINDEX = 214748364;
TGOS.CopyrightControl = function(a, d) {
    this.getDiv = function() {
        return f
    };
    this.getPosition = function() {
        return b
    };
    this.setPosition = function(e) {
        var h = a.controls[b].indexOf(f);
        d in TGOS.TGControlPosition && (0 <= h && a.controls[b].removeAt(h), a.controls[e].push(f), b = e)
    };
    var b = null,
        e = null,
        f = null,
        b = TGOS.TGControlPosition.BOTTOM_LEFT;
    d in TGOS.TGControlPosition && (b = d);
    f = document.createElement("div");
    util.disableSelect(f);
    f.style.width = "250px";
    f.style.height = "20px";
    e = document.createElement("div");
    f.appendChild(e);
    e.innerHTML = "TGOS MAP \u00a9 2016 \u5167\u653f\u90e8,\u4ea4\u901a\u90e8";
    e.style.position = "absolute";
    e.style.fontFamily = "calibri,\u5fae\u8edf\u6b63\u9ed1\u9ad4";
    e.style.fontWeight = "900";
    e.style.left = "5px";
    f.style.position = "absolute";
    this.setPosition(b)
};
TGOS.MapTypeBarControl = function(a, d, b, e) {
    function f(b) {
        v = document.createElement("div");
        v.style.position = "absolute";
        v.style.overflow = "hidden";
        z = document.createElement("table");
        z.style.borderSpacing = "0";
        z.border = "0";
        v.appendChild(z);
        for (var d = z.insertRow(-1), e = 0; e < b.length; e++)
            if (b[e] in a.getDocName()) {
                var f = d.insertCell(0);
                f.width = l + "px";
                f.height = n + "px";
                f.style.padding = "0px";
                f.style.backgroundRepeat = "no-repeat";
                f.style.cursor = "pointer";
                f.mapTypeId = b[e];
                var g = document.createElement("img");
                f.appendChild(g);
                f.imgElem = g;
                g.mapTypeId = b[e];
                AttachEvent(g, "click", function(a) {
                    a = util.eventTarget(a);
                    m.getMapTypeId() != a.mapTypeId && (a.src = k[a.mapTypeId + "_IMG_D"], h(a.mapTypeId))
                });
                m.getMapTypeId() == b[e] ? g.src = k[b[e] + "_IMG_D"] : g.src = k[b[e] + "_IMG"]
            }
        AttachEvent(q, "mouseover", function(a) {
            s.mapTypeControlStyle != TGOS.TGMapTypeControlStyle.DROPDOWN_MENU && B.expand()
        });
        AttachEvent(q, "mouseout", function(a) {
            s.mapTypeControlStyle != TGOS.TGMapTypeControlStyle.DROPDOWN_MENU && B.minimize()
        });
        q.appendChild(v);
        util.disableSelect(v)
    }

    function g(b) {
        E = document.createElement("div");
        E.style.position = "absolute";
        E.style.right = "0px";
        E.style.backgroundColor = "#CCCCDD";
        E.style.borderStyle = "solid";
        E.style.borderColor = "#888888";
        E.style.fontFamily = "Times New Roman,\u5fae\u8edf\u6b63\u9ed1\u9ad4";
        G = document.createElement("div");
        G.innerHTML = "\u5730\u5716\u985e\u578b";
        G.style.margin = "5px";
        F = document.createElement("select");
        F.style.margin = "5px";
        F.style.marginTop = "0px";
        E.appendChild(G);
        E.appendChild(F);
        util.disableSelect(G);
        AttachEvent(F, "change",
            function(a) {
                h(F.value)
            });
        for (var d = 0; d < b.length; d++)
            if (b[d] in a.getDocName()) {
                var e = new Option(TGOS.TGMapTypeId_zh_TW[b[d]], b[d]);
                F.add(e)
            }
        q.appendChild(E)
    }

    function h(a) {
        B.setActiveType(a);
        m.setMapTypeId(a);
        for (var d = 0; d < e.length; d++) e[d].mapTypeId == a ? e[d].putVisible(!0) : e[d].putVisible(!1);
        b.getMapBase().RefreshMap(!0)
    }
    var k = {
            ROADMAP_IMG_D: TGOS.RES_PATH + "ROADMAP_d.png",
            SATELLITE_IMG_D: TGOS.RES_PATH + "SATELLITE_d.png",
            HYBRID_IMG_D: TGOS.RES_PATH + "HYBRID_d.png",
            TGOSMAP_IMG_D: TGOS.RES_PATH + "TGOSMAP_d.png",
            NLSCMAP_IMG_D: TGOS.RES_PATH + "NLSCMAP_d.png",
            MOTCMAP_IMG_D: TGOS.RES_PATH + "MOTCMAP_d.png",
            F2IMAGE_IMG_D: TGOS.RES_PATH + "F2IMAGE_d.png",
            HILLSHADE_IMG_D: TGOS.RES_PATH + "HILLSHADE_d.png",
            SEGISMAP_IMG_D: TGOS.RES_PATH + "SEGISMAP_d.png",
            HILLSHADEMIX_IMG_D: TGOS.RES_PATH + "HILLSHADEMIX_d.png",
            IMAGENLSC_IMG_D: TGOS.RES_PATH + "IMAGENLSC_d.png",
            ROADMAP_IMG: TGOS.RES_PATH + "ROADMAP_n.png",
            SATELLITE_IMG: TGOS.RES_PATH + "SATELLITE_n.png",
            HYBRID_IMG: TGOS.RES_PATH + "HYBRID_n.png",
            TGOSMAP_IMG: TGOS.RES_PATH + "TGOSMAP_n.png",
            NLSCMAP_IMG: TGOS.RES_PATH +
                "NLSCMAP_n.png",
            MOTCMAP_IMG: TGOS.RES_PATH + "MOTCMAP_n.png",
            F2IMAGE_IMG: TGOS.RES_PATH + "F2IMAGE_n.png",
            HILLSHADE_IMG: TGOS.RES_PATH + "HILLSHADE_n.png",
            SEGISMAP_IMG: TGOS.RES_PATH + "SEGISMAP_n.png",
            HILLSHADEMIX_IMG: TGOS.RES_PATH + "HILLSHADEMIX_n.png",
            IMAGENLSC_IMG: TGOS.RES_PATH + "IMAGENLSC_n.png"
        },
        l = 70,
        n = 70,
        m = a;
    m.getDiv();
    var p = m.getMapBase(),
        s = d,
        q = null,
        v = null,
        z = null,
        E = null,
        F = null,
        G = null,
        A = d.controlPosition,
        B = this;
    this.ani = null;
    this.expand = function() {
        for (var a = 0, b = 0, b = 0; b < z.rows[0].cells.length; b++) z.rows[0].cells[b].style.display =
            "table-cell", a += l;
        var d = parseInt(q.style.width),
            e = a - d;
        this.ani && this.ani.stop();
        this.ani = TGOS.fx.createAnimation({
            easing: TGOS.fx.easing.quadOut,
            type: window.requestAnimationFrame ? "req" : "setTimeout",
            duration: 200,
            onAnimation: function(a) {
                q.style.width = d + parseInt(e * a) + "px"
            },
            onEnd: function() {
                q.style.width = a + "px"
            }
        });
        this.ani.play()
    };
    this.minimize = function() {
        for (var a = 0; a < z.rows[0].cells.length; a++) m.getMapTypeId() == z.rows[0].cells[a].mapTypeId ? z.rows[0].cells[a].style.display = "table-cell" : z.rows[0].cells[a].style.display =
            "none";
        var b = parseInt(q.style.width),
            d = b - l;
        this.ani && this.ani.stop();
        this.ani = TGOS.fx.createAnimation({
            easing: TGOS.fx.easing.quadOut,
            type: window.requestAnimationFrame ? "req" : "setTimeout",
            duration: 200,
            onAnimation: function(a) {
                q.style.width = b - parseInt(d * a) + "px"
            },
            onEnd: function() {
                q.style.width = l + "px"
            }
        });
        this.ani.play()
    };
    this.getDiv = function() {
        return q
    };
    this.init = function() {
        q = document.createElement("div");
        q.style.position = "absolute";
        q.style.padding = "5px";
        q.setAttribute("class", "tgMapTypeCtrl");
        f(d.mapTypeIds);
        g(d.mapTypeIds);
        this.setStyle(TGOS.TGMapTypeControlStyle.DEFAULT);
        this.setPosition(A)
    };
    this.setWms = function(a, b) {
        for (var d = defaultLayer; d < pLyr.length; d++) pLyr[d].getName() == a && pLyr[d].putVisible(b);
        p.RefreshMap(!0)
    };
    this.removeWms = function(a) {
        for (var b = defaultLayer; b < pLyr.length; b++) {
            if (pLyr[b].getName() == a) {
                p.RemoveLayer(pLyr[b]);
                for (var d = pLyr, e = b, f = Array(d.length - 1), g = 0, h = 0; h < d.length - 1; h++) h != e && (f[g] = d[h], g++);
                pLyr = f
            }
            p.RefreshMap(!0)
        }
    };
    this.setPosition = function(b) {
        var d = a.controls[A].indexOf(q);
        b in TGOS.TGControlPosition && (0 <= d && a.controls[A].removeAt(d), a.controls[b].push(q), A = b)
    };
    this.setStyle = function(a) {
        if (a) {
            this.ani && this.ani.stop();
            v.style.display = "inline";
            E.style.display = "none";
            if (a == TGOS.TGMapTypeControlStyle.DEFAULT || a == TGOS.TGMapTypeControlStyle.HORIZONTAL_BAR) v.style.display = "inline", E.style.display = "none", q.style.width = l + "px", q.style.height = l + "px";
            else if (a == TGOS.TGMapTypeControlStyle.DROPDOWN_MENU) v.style.display = "none", E.style.display = "inline", q.style.height = E.scrollHeight +
                10 + "px", q.style.width = E.scrollWidth + 10 + "px";
            else throw "invalide map type control style";
            s.mapTypeControlStyle = a
        }
    };
    this.setMapTypeIds = function(a) {
        q.removeChild(E);
        q.removeChild(v);
        f(a);
        g(a);
        s.mapTypeIds = a;
        var b = m.getDocName();
        a[0] in b && (h(a[0]), this.minimize())
    };
    this.setActiveType = function(a) {
        for (var b = 0; b < z.rows[0].cells.length; b++) {
            var d = z.rows[0].cells[b];
            d.imgElem.src = d.mapTypeId == a ? k[d.imgElem.mapTypeId + "_IMG_D"] : k[d.imgElem.mapTypeId + "_IMG"]
        }
    };
    this.remove = function() {
        var b = a.controls[A];
        b.removeAt(b.indexOf(q))
    };
    this.display = function(a) {
        q.style.display = a ? "inline" : "none"
    };
    this.setOptions = function(a) {
        void 0 != a.mapTypeIds && (this.setMapTypeIds(a.mapTypeIds), this.setStyle(s.mapTypeControlStyle));
        void 0 != a.mapTypeControlStyle && this.setStyle(a.mapTypeControlStyle);
        void 0 != a.controlPosition && this.setPosition(a.controlPosition)
    };
    this.getDiv = function() {
        return q
    };
    this.init()
};
TGOS.LevelBarControl = function(a, d, b, e, f) {
    function g(a) {
        d.putMapLevel(d.getMapLevel() + a);
        d.FitLevel();
        n.RefreshMap(!0)
    }
    this.getDiv = function() {
        return k
    };
    var h = b,
        k = null,
        l = 16,
        n = null,
        k = document.createElement("table");
    k.style.position = "absolute";
    k.style.paddingLeft = "20px";
    k.border = "0";
    k.cellPadding = "0";
    k.cellSpacing = "0";
    k.id = "pLevelBarBar";
    k.name = "pLevelBarBar";
    util.disableSelect(k);
    a = k.insertRow(-1);
    var m = a.insertCell(-1);
    m.align = "center";
    a = document.createElement("table");
    m.appendChild(a);
    a.border = "0";
    a.cellPadding = "0";
    a.cellSpacing = "0";
    a.width = "34";
    m = a.insertRow(-1);
    a = m.insertCell(-1);
    a.style.padding = "0px 4px 0px 0px";
    var p = a.ownerDocument.createElement("img");
    a.appendChild(p);
    AttachEvent(p, "click", function() {
        g(1)
    }, !1);
    p.style.cursor = "pointer";
    p.style["vertical-align"] = "top";
    a = k.insertRow(-1);
    m = a.insertCell(-1);
    m.align = "center";
    a = document.createElement("table");
    m.appendChild(a);
    a.border = "0";
    a.cellPadding = "0";
    a.cellSpacing = "0";
    a.width = "34";
    var m = a.insertRow(-1),
        s = m.insertCell(-1),
        q = s.ownerDocument.createElement("div");
    s.appendChild(q);
    q.style.position = "relative";
    q.style.width = "12px";
    q.style.height = "100%";
    var v = document.createElement("img");
    q.appendChild(v);
    v.style.position = "absolute";
    v.src = TGOS.RES_PATH + "icons/bar_06.png";
    v.style.left = "0px";
    v.style.bottom = "0px";
    v.width = "34";
    v.height = "16";
    AttachEvent(q, "mousedown", function(a) {
        function b(a) {
            d.putMapLevel(Math.round(g + (f - a.clientY) / l));
            n.RefreshMap(!1)
        }

        function e(a) {
            DetachEvent(v, "mousemove", b, !0);
            DetachEvent(v, "mouseup", e, !0);
            d.FitLevel();
            n.RefreshMap(!0)
        }
        util.disableDefault(a);
        if (a.srcElement == v) {
            var f = a.clientY,
                g = d.getMapLevel();
            AttachEvent(v, "mousemove", b, !0);
            AttachEvent(v, "mouseup", e, !0)
        } else d.putMapLevel((q.clientHeight - a.offsetY) / l - 0.5), d.FitLevel(), n.RefreshMap(!0)
    }, !1);
    s.align = "center";
    s.style.height = "0px";
    m = a.insertRow(-1);
    a = m.insertCell(-1);
    a.align = "center";
    a.style.padding = "0px 4px 0px 0px";
    var z = a.ownerDocument.createElement("img");
    a.appendChild(z);
    z.src = TGOS.RES_PATH + "/bar_bottom.png";
    AttachEvent(z, "click", function() {
        g(-1)
    }, !1);
    z.style.cursor = "pointer";
    this.Initialize =
        function(a) {
            n = a
        };
    this.UpdateElement = function() {
        var a, b = TGOS.MapTypeMaxZoomLevel[f.getCoordSys()][f.getMapTypeId()];
        a = Math.max(d.getMapMinLevel(), 0);
        b = Math.min(d.getMapMaxLevel(), b) - a;
        s.style.height = (b + 1) * l + "px";
        a = (d.getMapLevel() - a) * l;
        v.style.bottom = a + "px"
    };
    this.RebuildElement = function() {};
    this.display = function(a) {
        k.style.display = a ? "" : "none"
    };
    this.setPosition = function(a) {
        var b = f.controls[h].indexOf(k);
        a in TGOS.TGControlPosition && (0 <= b && f.controls[h].removeAt(b), f.controls[a].push(k), h = a)
    };
    this.setStyle =
        function(a) {
            switch (a) {
                case TGOS.TGNavigationControlStyle.SMALL:
                    q.style.display = "none";
                    v.style.display = "none";
                    s.style.display = "none";
                    p.src = TGOS.RES_PATH + "/bar_head.png";
                    p.onmousedown = null;
                    p.onmouseup = null;
                    z.src = TGOS.RES_PATH + "/bar_bottom.png";
                    z.onmousedown = null;
                    z.onmouseup = null;
                    break;
                case TGOS.TGNavigationControlStyle.MEDIUM:
                    q.style.display = "none";
                    v.style.display = "none";
                    s.style.display = "none";
                    p.src = TGOS.RES_PATH + "TGOS01_01.png";
                    p.onmousedown = function() {
                        this.src = TGOS.RES_PATH + "TGOS02_01.png"
                    };
                    p.onmouseup =
                        function() {
                            this.src = TGOS.RES_PATH + "TGOS01_01.png"
                        };
                    z.src = TGOS.RES_PATH + "TGOS01_02.png";
                    z.onmousedown = function() {
                        this.src = TGOS.RES_PATH + "TGOS02_02.png"
                    };
                    z.onmouseup = function() {
                        this.src = TGOS.RES_PATH + "TGOS01_02.png"
                    };
                    break;
                case TGOS.TGNavigationControlStyle.LARGE:
                    p.src = TGOS.RES_PATH + "/bar_head.png";
                    p.onmousedown = null;
                    p.onmouseup = null;
                    z.src = TGOS.RES_PATH + "/bar_bottom.png";
                    z.onmousedown = null;
                    z.onmouseup = null;
                    a = Math.max(1, d.getMapMaxLevel()) * l;
                    q.style.display = "";
                    v.style.display = "";
                    s.style.display = "";
                    s.style.backgroundImage =
                        "url(" + TGOS.RES_PATH + "bar_02.png)";
                    s.style.height = a + "px";
                    a = (d.getMapLevel() - 0.5) * l - v.clientHeight / 2;
                    v.style.bottom = a + "px";
                    break;
                default:
                    q.style.display = "none", v.style.display = "none", s.style.display = "none", p.src = TGOS.RES_PATH + "/bar_head.png", p.onmousedown = null, p.onmouseup = null, z.src = TGOS.RES_PATH + "/bar_bottom.png", z.onmousedown = null, z.onmouseup = null
            }
            this.UpdateElement()
        };
    this.setOptions = function(a) {
        void 0 != a.navigationControlStyle && this.setStyle(a.navigationControlStyle);
        void 0 != a.controlPosition &&
            this.setPosition(a.controlPosition)
    };
    f.controls[h].push(k);
    this.setPosition(b);
    this.setStyle(e);
    this.UpdateElement()
};
TGOS.ScaleBarControl = function(a, d, b, e, f) {
    function g(a, b, d, e, f, g) {
        var h = document.createElement("div");
        a.appendChild(h);
        h.style.position = "relative";
        h.style.width = f + "px";
        h.style.height = g + "px";
        h.style.overflow = "hidden";
        a = document.createElement("img");
        h.appendChild(a);
        a.src = b;
        a.style.position = "absolute";
        a.style.left = -d + "px";
        a.style.top = -e + "px";
        h.Img = a;
        return h
    }
    this.getDiv = function() {
        return l
    };
    this.setPosition = function(a) {
        var b = f.controls[n].indexOf(k);
        a in TGOS.TGControlPosition && (0 <= b && f.controls[n].removeAt(b),
            f.controls[a].push(k), n = a)
    };
    this.setStyle = function(a) {};
    this.setOptions = function(a) {
        void 0 != a.scaleControlStyle && this.setStyle(a.scaleControlStyle);
        void 0 != a.controlPosition && this.setPosition(a.controlPosition)
    };
    var h = document.createElement("div");
    h.style.position = "relative";
    var k = document.createElement("div");
    k.style.overflow = "visible";
    k.style.padding = "10px";
    var l = null,
        n = b,
        l = document.createElement("div");
    l.style.position = "relative";
    l.style.height = "36px";
    l.style.overflow = "hidden";
    l.id = "pScaleBar";
    l.name = "pScaleBar";
    g(l, TGOS.RES_PATH + "scale.png", 0, 0, 4, 32).style.position = "absolute";
    a = g(l, TGOS.RES_PATH + "scale.png", 4, 14, 508, 4);
    a.style.position = "absolute";
    a.style.left = "4px";
    a.style.top = "14px";
    var m = g(l, TGOS.RES_PATH + "scale.png", 0, 0, 4, 15);
    m.style.position = "absolute";
    m.style.left = "0px";
    m.style.top = "0px";
    var p = g(l, TGOS.RES_PATH + "scale.png", 0, 17, 4, 15);
    p.style.position = "absolute";
    p.style.left = "0px";
    p.style.top = "17px";
    a = g(l, TGOS.RES_PATH + "scale.png", 511, 14, 1, 4);
    a.style.position = "absolute";
    a.style.right =
        "0px";
    a.style.top = "14px";
    var s = l.ownerDocument.createElement("div");
    l.appendChild(s);
    s.className = "text";
    s.style.fontSize = "0.7em";
    s.style.position = "absolute";
    s.style.left = "25px";
    s.style.top = "18px";
    var q = l.ownerDocument.createElement("div");
    l.appendChild(q);
    q.className = "text";
    q.style.fontSize = "0.7em";
    q.style.position = "absolute";
    q.style.left = "25px";
    q.style.top = "0px";
    k.appendChild(h);
    k.appendChild(l);
    var v = e ? e : TGOS.TGScaleControlStyle.DEFAULT;
    this.setStyle = function(a) {
        if (a) {
            v = a;
            switch (v) {
                case TGOS.TGScaleControlStyle.TEXT:
                    h.style.display =
                        "block";
                    l.style.display = "none";
                    break;
                default:
                    h.style.display = "none", l.style.display = "block"
            }
            this.UpdateElement()
        }
    };
    var z = new HorizontalDatum(6378137, 0),
        E = new MercatorProjection(0, 0, 0, 1);
    this.UpdateElement = function() {
        if (v == TGOS.TGScaleControlStyle.TEXT) {
            var a = TGOS.GetMapScale(f.getCoordSys(), f.getZoom());
            h.innerHTML = " 1 : " + a
        } else {
            var b = d.ToMapDistX(250),
                e = b,
                g = 1,
                a = "\u516c\u5c3a";
            6615 < b && (e /= 1E3, g = 1E3, a = "\u516c\u91cc");
            var k = Math.floor(Math.log(e) / Math.LN10),
                k = Math.pow(10, k),
                e = Math.floor(e / k),
                e = (2 >
                    e ? 1 : 5 > e ? 2 : 5) * k,
                g = d.FromMapDistX(e * g) + 2,
                n = b / 0.3048,
                k = n,
                w = 1,
                b = "\u82f1\u544e";
            21702 < n && (k /= 5280, w = 5280, b = "\u82f1\u91cc");
            n = Math.floor(Math.log(k) / Math.LN10);
            n = Math.pow(10, n);
            k = Math.floor(k / n);
            k = (2 > k ? 1 : 5 > k ? 2 : 5) * n;
            w = d.FromMapDistX(0.3048 * k * w) + 2;
            E.Inverse(z, new CPoint3(d.getCenterX(), d.getCenterY(), 0));
            l.style.width = Math.round(Math.max(g, w)) + "px";
            m.style.left = Math.round(g - 4) + "px";
            p.style.left = Math.round(w - 4) + "px";
            q.innerHTML = e + a;
            s.innerHTML = k + b;
            Math.round(Math.max(g, w))
        }
    };
    this.display = function(a) {
        k.style.display = !1 == a ? "none" : ""
    };
    this.ControlOptionsChang = function(a, b) {
        Location(b.getClientWidth(), b.getClientHeight())
    };
    this.setPosition(n);
    this.setStyle(v);
    this.UpdateElement()
};

function initControlArray(a) {
    var d = a.controls,
        b = function() {
            e.BOTTOM_CENTER_update.call(d.BOTTOM_CENTER);
            e.BOTTOM_LEFT_update.call(d.BOTTOM_LEFT);
            e.BOTTOM_RIGHT_update.call(d.BOTTOM_RIGHT);
            e.LEFT_BOTTOM_update.call(d.LEFT_BOTTOM);
            e.LEFT_CENTER_update.call(d.LEFT_CENTER);
            e.LEFT_TOP_update.call(d.LEFT_TOP);
            e.RIGHT_BOTTOM_update.call(d.RIGHT_BOTTOM);
            e.RIGHT_CENTER_update.call(d.RIGHT_CENTER);
            e.RIGHT_TOP_update.call(d.RIGHT_TOP);
            e.TOP_CENTER_update.call(d.TOP_CENTER);
            e.TOP_LEFT_update.call(d.TOP_LEFT);
            e.TOP_RIGHT_update.call(d.TOP_RIGHT)
        },
        e = {
            BOTTOM_CENTER_update: function() {
                var b = 0,
                    e = 0;
                d.BOTTOM_CENTER.forEach(function(d, f) {
                    var n = parseInt(d.clientWidth, 10),
                        m = parseInt(d.clientHeight, 10),
                        p = 0 <= a.getMapSize().width / 2 - n / 2 ? a.getMapSize().width / 2 - n / 2 : 0;
                    b += n;
                    e = Math.max(e, m);
                    d.style.right = "auto";
                    d.style.left = p + "px";
                    d.style.top = "auto";
                    d.style.bottom = "0px"
                });
                d.BOTTOM_CENTER.totalWidth = b;
                d.BOTTOM_CENTER.totalHeight = e
            },
            BOTTOM_LEFT_update: function() {
                var a = 0,
                    b = 0;
                d.BOTTOM_LEFT.forEach(function(d, e) {
                    var f = parseInt(d.scrollWidth,
                            10),
                        m = parseInt(d.scrollHeight, 10);
                    a += f;
                    b = Math.max(b, m);
                    d.style.right = "auto";
                    d.style.left = a - f + "px";
                    d.style.top = "auto";
                    d.style.bottom = "0px"
                });
                d.BOTTOM_LEFT.totalWidth = a;
                d.BOTTOM_LEFT.totalHeight = b
            },
            BOTTOM_RIGHT_update: function() {
                var a = 0,
                    b = 0;
                d.BOTTOM_RIGHT.forEach(function(d, e) {
                    var f = parseInt(d.clientWidth, 10),
                        m = parseInt(d.clientHeight, 10);
                    a += f;
                    b = Math.max(b, m);
                    d.style.left = "auto";
                    d.style.right = a - f + "px";
                    d.style.top = "auto";
                    d.style.bottom = "0px"
                });
                d.BOTTOM_RIGHT.totalWidth = a;
                d.BOTTOM_RIGHT.totalHeight = b
            },
            TOP_LEFT_update: function() {
                var a = 0,
                    b = 0;
                d.TOP_LEFT.forEach(function(d, e) {
                    var f = parseInt(d.clientWidth, 10),
                        m = parseInt(d.clientHeight, 10);
                    a += f;
                    b = Math.max(b, m);
                    d.style.right = "auto";
                    d.style.left = a - f + "px";
                    d.style.bottom = "auto";
                    d.style.top = "0px"
                });
                d.TOP_LEFT.totalWidth = a;
                d.TOP_LEFT.totalHeight = b
            },
            TOP_CENTER_update: function() {
                var b = 0,
                    e = 0;
                d.TOP_CENTER.forEach(function(d, f) {
                    var n = parseInt(d.clientWidth, 10),
                        m = parseInt(d.clientHeight, 10),
                        p = 0 <= a.getMapSize().width / 2 - n / 2 ? a.getMapSize().width / 2 - n / 2 : 0;
                    b += n;
                    e = Math.max(e,
                        m);
                    d.style.right = "auto";
                    d.style.left = p + "px";
                    d.style.bottom = "auto";
                    d.style.top = "0px"
                });
                d.TOP_CENTER.totalWidth = b;
                d.TOP_CENTER.totalHeight = e
            },
            TOP_RIGHT_update: function() {
                var a = 0,
                    b = 0;
                d.TOP_RIGHT.forEach(function(d, e) {
                    var f = parseInt(d.clientWidth, 10),
                        m = parseInt(d.clientHeight, 10);
                    a += f;
                    b = Math.max(b, m);
                    d.style.left = "auto";
                    d.style.right = a - f + "px";
                    d.style.bottom = "auto";
                    d.style.top = "0px"
                });
                d.TOP_RIGHT.totalWidth = a;
                d.TOP_RIGHT.totalHeight = b
            },
            LEFT_TOP_update: function() {
                var a = 0,
                    b = 0,
                    e = 0;
                0 < d.TOP_LEFT.getLength() &&
                    (e = parseInt(d.TOP_LEFT.totalHeight));
                d.LEFT_TOP.forEach(function(d, f) {
                    var m = parseInt(d.clientWidth, 10),
                        p = parseInt(d.clientHeight, 10);
                    a += m;
                    b += p;
                    d.style.bottom = "auto";
                    d.style.right = "auto";
                    d.style.left = "0px";
                    d.style.top = b - p + e + "px"
                });
                d.LEFT_TOP.totalWidth = a;
                d.LEFT_TOP.totalHeight = b
            },
            LEFT_CENTER_update: function() {
                var b = 0,
                    e = 0;
                d.LEFT_CENTER.forEach(function(d, f) {
                    var n = parseInt(d.clientWidth, 10),
                        m = parseInt(d.clientHeight, 10);
                    b += n;
                    e += m;
                    n = 0 <= a.getMapSize().height / 2 - m / 2 ? a.getMapSize().height / 2 - m / 2 : 0;
                    d.style.bottom =
                        "auto";
                    d.style.right = "auto";
                    d.style.left = "0px";
                    d.style.top = n + "px"
                });
                d.LEFT_CENTER.totalWidth = b;
                d.LEFT_CENTER.totalHeight = e
            },
            LEFT_BOTTOM_update: function() {
                var a = 0,
                    b = 0,
                    e = 0;
                0 < d.BOTTOM_LEFT.getLength() && (e = parseInt(d.BOTTOM_LEFT.totalHeight));
                d.LEFT_BOTTOM.forEach(function(d, f) {
                    var m = parseInt(d.clientWidth, 10),
                        p = parseInt(d.clientHeight, 10);
                    a += m;
                    b += p;
                    d.style.top = "auto";
                    d.style.right = "auto";
                    d.style.left = "0px";
                    d.style.bottom = e + b - p + "px"
                });
                d.LEFT_BOTTOM.totalWidth = a;
                d.LEFT_BOTTOM.totalHeight = b
            },
            RIGHT_TOP_update: function() {
                var a =
                    0,
                    b = 0,
                    e = 0;
                0 < d.TOP_RIGHT.getLength() && (e = parseInt(d.TOP_RIGHT.totalHeight));
                d.RIGHT_TOP.forEach(function(d, f) {
                    var m = parseInt(d.clientWidth, 10),
                        p = parseInt(d.clientHeight, 10);
                    a += m;
                    b += p;
                    d.style.bottom = "auto";
                    d.style.left = "auto";
                    d.style.right = "0px";
                    d.style.top = e + b - p + "px"
                });
                d.RIGHT_TOP.totalWidth = a;
                d.RIGHT_TOP.totalHeight = b
            },
            RIGHT_CENTER_update: function() {
                var b = 0,
                    e = 0;
                d.RIGHT_CENTER.forEach(function(d, f) {
                    var n = parseInt(d.clientWidth, 10),
                        m = parseInt(d.clientHeight, 10),
                        p = 0 <= a.getMapSize().height / 2 - m / 2 ? a.getMapSize().height /
                        2 - m / 2 : 0;
                    b += n;
                    e += m;
                    d.style.bottom = "auto";
                    d.style.left = "auto";
                    d.style.right = "0px";
                    d.style.top = p + "px"
                });
                d.RIGHT_CENTER.totalWidth = b;
                d.RIGHT_CENTER.totalHeight = e
            },
            RIGHT_BOTTOM_update: function() {
                var a = 0,
                    b = 0,
                    e = 0;
                0 < d.BOTTOM_RIGHT.getLength() && (e = parseInt(d.BOTTOM_RIGHT.totalHeight));
                d.RIGHT_BOTTOM.forEach(function(d, f) {
                    var m = parseInt(d.clientWidth, 10),
                        p = parseInt(d.clientHeight, 10);
                    a += m;
                    b += p;
                    d.style.top = "auto";
                    d.style.left = "auto";
                    d.style.right = "0px";
                    d.style.bottom = b - p + e + "px"
                });
                d.RIGHT_BOTTOM.totalWidth = a;
                d.RIGHT_BOTTOM.totalHeight = b
            }
        },
        f;
    for (f in d) TGOS.TGEvent.addListener(d[f], "insert_at", function() {
        return function(d) {
            d = this.getAt(d);
            d.style.position = "absolute";
            a.getHPackage().appendChild(d);
            b()
        }
    }()), TGOS.TGEvent.addListener(d[f], "remove_at", function() {
        return function(d, e) {
            a.getHPackage().removeChild(e);
            b()
        }
    }()), TGOS.TGEvent.addListener(a, "resize", function() {
        b()
    })
};
(function() {
    TGOS.MVCArray = function() {
        this.arr_ = []
    };
    var a = TGOS.MVCArray.prototype;
    a.getAt = function(a) {
        return this.arr_[a]
    };
    a.getLength = function() {
        return this.arr_.length
    };
    a.push = function(a) {
        var b = this.arr_.length;
        0 >= b && (b = 0);
        return this.insertAt(b, a)
    };
    a.pop = function() {
        var a = this.arr_.length - 1;
        if (!(0 > a)) return this.removeAt(a)
    };
    a.forEach = function(a) {
        for (var b = 0; b < this.arr_.length; b++) a.call(this, this.arr_[b], b)
    };
    a.getArray = function() {
        return this.arr_
    };
    a.removeAt = function(a) {
        if (!(a > this.arr_.length -
                1)) {
            var b = this.arr_.splice(a, 1);
            TGOS.TGEvent.trigger_(this, "remove_at", a, b[0]);
            TGOS.TGEvent.trigger_(this, "changed");
            return b
        }
    };
    a.insertAt = function(a, b) {
        a > this.arr_.length || (this.arr_.splice(a, 0, b), TGOS.TGEvent.trigger_(this, "insert_at", a), TGOS.TGEvent.trigger_(this, "changed"))
    };
    a.setAt = function(a, b) {
        if (!(a > this.arr_.length - 1)) {
            var e = this.arr_[a];
            this.arr_.splice(a, 1, b);
            TGOS.TGEvent.trigger_(this, "set_at", a, e);
            TGOS.TGEvent.trigger_(this, "changed")
        }
    };
    a.indexOf = function(a) {
        return this.arr_.indexOf(a)
    };
    TGOS.RegisterEvent(TGOS.MVCArray, ["insert_at", "remove_at", "set_at", "changed"])
})();
(function() {
    var a = new HorizontalDatum(6378137, 0),
        d = new MercatorProjection(0, 0, 0, 1),
        b = function(a, b) {
            this.map = b;
            this.add = function(b) {
                a.push(b)
            };
            this.remove = function(b) {
                var d = this.map.getMapBase(),
                    e = a.indexOf(b); - 1 != e && (a.splice(e, 1), d.getHPackage().contains(b.getElement()) && d.getHPackage().removeChild(b.getElement()))
            };
            this.UpdateElement = function() {
                for (var b = 0; b < a.length; b++) a[b].update()
            };
            this.containing = function(b) {
                return 0 <= a.indexOf(b)
            }
        },
        e = function(a) {
            this.getArray = function() {
                return a
            };
            this.add =
                function(a) {
                    this.updateArrayOrder(a);
                    this.updateElementOrder(a)
                };
            this.push = function(b) {
                a.push(b)
            };
            this.sortElement = function() {
                if (!(1 >= a.length)) {
                    var b = a[0].getEventElement();
                    if (b)
                        for (var d = 1; d < a.length; d++) {
                            var e = a[d].getEventElement();
                            e && (e.insertAfter(b), b = e)
                        }
                }
            };
            this.updateArrayOrder = function(b) {
                var d = a.indexOf(b);
                0 <= d && a.splice(d, 1);
                d = b.getZIndex();
                if (0 === a.length) a.push(b);
                else
                    for (var e = 0; e < a.length; e++)
                        if (a[e].getZIndex() > d) {
                            a.splice(e, 0, b);
                            break
                        } else if (e == a.length - 1) {
                    a.push(b);
                    break
                }
            };
            this.updateElementOrder =
                function(b) {
                    if (b) {
                        var d = b.getEventElement();
                        if (d && (b = b.getZIndex(), 0 !== a.length))
                            for (var e = 0; e < a.length; e++) {
                                var f = a[e].getZIndex(),
                                    g = a[e].getEventElement();
                                if (g)
                                    if (f > b) {
                                        d.insertBefore(g);
                                        break
                                    } else if (e == a.length - 1) {
                                    d.toFront();
                                    break
                                }
                            }
                    }
                };
            this.containing = function(b) {
                return 0 <= a.indexOf(b)
            };
            this.remove = function(b) {
                b = a.indexOf(b);
                a.splice(b, 1)
            };
            this.UpdateElement = function() {
                for (var b = 0; b < a.length; b++) a[b].update && a[b].update()
            };
            this.RebuildElement = function() {
                for (var b = 0; b < a.length; b++) a[b].redraw &&
                    a[b].redraw()
            }
        };
    TGOS.TGTransStatus = {
        ERROR: "ERROR",
        INVALID_REQUEST: "INVALID_REQUEST",
        OK: "OK",
        OVER_QUERY_LIMIT: "OVER_QUERY_LIMIT",
        REQUEST_DENIED: "REQUEST_DENIED",
        UNKNOWN_ERROR: "UNKNOWN_ERROR"
    };
    TGOS.TGIndexViewControlOptions = {
        NORMAL: "NORMAL",
        MINIMIZED: "MINIMIZED"
    };
    TGOS.tgHash = "/opA/KsMFqehSB4N0p2zvEvJbRxYzjjNviOB6tLzbIs=";
    TGOS.APPID = "jsQd5cZYrT+o/4aTN1kTTHsQoNHFMWxacSZ3zgiIWNro+dilR/dC8w==";
    TGOS.APIKEY = "cGEErDNy5yN/1fQ0vyTOZrghjE+jIU6ubRXixv29QoWkc/agTxC5zD7Ib/9YSh6m679CbIXsVnkV3erqSOygiLuahd+mJ8ezGzNpdqRlaUKVAzBrCff40cuMpQpE+ldTYlpGkeKJflkq+BCGmTT5Uq6QAMDYu9vmQFRSfgg/hXT6lcd+z7RDgm8oiW8HjIrUdE+OHh5o52uYNtK2v7TcnNI5xD6IVTy2t+XvC5yvg9GpbVXDQaAnQjoj2WKmvEBdy8pDq+MIfbbEJ0nIhbXbWrQi5eMIe1dJLZ5JThjo3ikSF6CIh2x/f+ZJyok0+8mo/Dwp9VynbSyH/ASqiZch2IoQjADOGWKaaFdv+Ofh2Hs=";
    TGOS.MapTypeScales = {
        EPSG3825: {
            scales: [500, 1E3, 2500, 5E3, 1E4, 25E3, 5E4, 1E5, 25E4, 5E5, 1E6, 25E5, 5E6, 1E7, 125E5],
            levelX: 846666.666666667,
            levelY: -846666.666666667
        },
        EPSG3826: {
            scales: [500, 1E3,
                2500, 5E3, 1E4, 25E3, 5E4, 1E5, 25E4, 5E5, 1E6, 25E5, 5E6, 1E7, 125E5
            ],
            levelX: 846666.666666667,
            levelY: -846666.666666667
        },
        EPSG3857: {
            scales: [1128, 2257, 4514, 9028, 18056, 36112, 72224, 144448, 288896, 577792, 1155583, 2311167, 4622334, 9244667, 18489335, 36978669, 73957339, 147914678, 295829355, 591658711],
            levelX: 4.00750166855785E7,
            levelY: -4.00750166855785E7,
            factors: [0.298582141727292, 0.597164283481042, 1.19432856696208, 2.38865713392417, 4.77731426782187, 9.55462853564375, 19.1092570712875, 38.2185141426015, 76.4370282851765, 152.874056570353,
                305.748113140706, 611.496226281412, 1222.99245256282, 2445.98490512565, 4891.96981025127, 9783.93962050256, 19567.8792410051, 39135.7584820103, 78271.5169640206, 156543.033928041
            ]
        }
    };
    TGOS.TGControlPosition = {
        BOTTOM_CENTER: "BOTTOM_CENTER",
        BOTTOM_LEFT: "BOTTOM_LEFT",
        BOTTOM_RIGHT: "BOTTOM_RIGHT",
        LEFT_BOTTOM: "LEFT_BOTTOM",
        LEFT_CENTER: "LEFT_CENTER",
        LEFT_TOP: "LEFT_TOP",
        RIGHT_BOTTOM: "RIGHT_BOTTOM",
        RIGHT_CENTER: "RIGHT_CENTER",
        RIGHT_TOP: "RIGHT_TOP",
        TOP_CENTER: "TOP_CENTER",
        TOP_LEFT: "TOP_LEFT",
        TOP_RIGHT: "TOP_RIGHT"
    };
    TGOS.TGMapTypeControlStyle = {
        DEFAULT: "DEFAULT",
        DROPDOWN_MENU: "DROPDOWN_MENU",
        HORIZONTAL_BAR: "HORIZONTAL_BAR"
    };
    TGOS.TGNavigationControlStyle = {
        DEFAULT: "DEFAULT",
        LARGE: "LARGE",
        MEDIUM: "MEDIUM",
        SMALL: "SMALL"
    };
    TGOS.TGScaleControlStyle = {
        DEFAULT: "DEFAULT",
        TEXT: "TEXT",
        BAR: "BAR",
        HD: "HD"
    };
    TGOS.TGCoordSys = {
        EPSG3825: "EPSG3825",
        EPSG3826: "EPSG3826",
        EPSG3857: "EPSG3857"
    };
    TGOS.KeyboardEditor = {
        NONE: "NONE",
        UP: "UP",
        DOWN: "DOWN",
        LEFT: "LEFT",
        RIGHT: "RIGHT",
        DEL: "DEL"
    };
    TGOS.GetMapScale = function(a, b) {
        try {
            return TGOS.MapTypeScales[a].scales[TGOS.MapTypeScales[a].scales.length -
                1 - b]
        } catch (d) {
            throw "[GetMapScale] Invalid Parameters";
        }
    };
    TGOS.TGOnlineMap = function(f, g, h) {
        this.getCurrentMapType = function() {
            return currentMapType
        };
        var l, k;
        this.getMapTypeTag = function() {
            return S
        };
        this.controls = {
            BOTTOM_CENTER: new TGOS.MVCArray,
            BOTTOM_LEFT: new TGOS.MVCArray,
            BOTTOM_RIGHT: new TGOS.MVCArray,
            LEFT_BOTTOM: new TGOS.MVCArray,
            LEFT_CENTER: new TGOS.MVCArray,
            LEFT_TOP: new TGOS.MVCArray,
            RIGHT_BOTTOM: new TGOS.MVCArray,
            RIGHT_CENTER: new TGOS.MVCArray,
            RIGHT_TOP: new TGOS.MVCArray,
            TOP_CENTER: new TGOS.MVCArray,
            TOP_LEFT: new TGOS.MVCArray,
            TOP_RIGHT: new TGOS.MVCArray
        };
        this.setKeyboardEdit = function(a, b) {
            R.OpenCloseKeyboardEditor(a, b)
        };
        this.getMapSize = function() {
            var a = parseInt(I.offsetWidth),
                b = parseInt(I.offsetHeight);
            return new TGOS.TGSize(a, b)
        };
        this.IndexViewControl = {
            Show: function(a) {
                ea.Show(a)
            },
            Minimize: function() {
                ea.Minimize()
            }
        };
        this.setCoordSys = function(a) {
            a instanceof TGOS.TGCoordSys && (B = a, TGOS.TGEvent.trigger(this, "projection_changed"))
        };
        this.getDocName = function() {
            var a;
            switch (B) {
                case TGOS.TGCoordSys.EPSG3826:
                    a =
                        TGOS.MapTypeDocumentName;
                    S = "97";
                    break;
                case TGOS.TGCoordSys.EPSG3825:
                    a = TGOS.MapTypeDocumentNameTWD97_119;
                    S = "97_119";
                    break;
                case TGOS.TGCoordSys.EPSG3857:
                    a = TGOS.MapTypeDocumentNameGoogle, S = "google"
            }
            return a
        };
        this.getCoordSys = function() {
            return B
        };
        this.getOPackage = function() {
            return O
        };
        this.getMapOptions = function() {
            return J
        };
        this.getMapTypeId = function() {
            return aa
        };
        this.getHPackage = function() {
            return I
        };
        this.getHPack = function() {
            return K.getHPackage()
        };
        this.getHObj = function() {
            return K.getHObject()
        };
        this.getHMap =
            function() {
                return K.getHObject()
            };
        this.getMapBase = function() {
            return K
        };
        this.getMap = function() {
            return this
        };
        this.ZoomTo = function(a) {
            G(a)
        };
        this.ZoomIn = function() {
            G(X.getMapLevel() + 1)
        };
        this.ZoomOut = function() {
            G(X.getMapLevel() - 1)
        };
        this.setOptions = function(a) {
            var b = function(a) {
                    var b;
                    switch (B) {
                        case TGOS.TGCoordSys.EPSG3857:
                            b = TGOS.WGS84ToGoo(a.left, a.top);
                            a = TGOS.WGS84ToGoo(a.right, a.bottom);
                            b = new TGOS.TGEnvelope(b.x, b.y, a.x, a.y);
                            break;
                        default:
                            b = a
                    }
                    X.setMapBoundsLevel(b);
                    R.setMapBounds(b);
                    K.RefreshMap(!0)
                },
                d = function(a, b) {
                    var d = a,
                        e = b;
                    null != d && null != e && d > e && (d = b, e = a);
                    X.setMapMinMaxLevel(d, e);
                    K.RefreshMap(!0)
                },
                e = function(a) {
                    "string" == typeof a && (K.setColor(a), J.backgroundColor = a)
                },
                f = function(a) {
                    "boolean" == typeof a && (a ? (ba.display(!1), fa.display(!1), da.display(!1)) : (ba.display(!0), fa.display(!0), da.display(!0)), J.disableDefaultUI = a, K.RefreshMap(!0))
                },
                g = function(a) {
                    "boolean" == typeof a && (Q = a, J.scrollwheel = a, R.OpenCloseWheel(a))
                },
                h = function(a) {
                    "boolean" == typeof a && (fa.display(a), J.mapTypeControl = a)
                },
                m = function(a) {
                    fa.setOptions(a);
                    J.mapTypeControlOptions = a;
                    K.RefreshMap(!0)
                },
                l = function(a) {
                    "boolean" == typeof a && (da.display(a), J.navigationControl = a);
                    K.RefreshMap(!0)
                },
                k = function(a) {
                    da.setOptions(a);
                    J.navigationControlOptions = a
                },
                n = function(a) {
                    "boolean" == typeof a && (ba.display(a), J.scaleControl = a)
                },
                p = function(a) {
                    ba.setOptions(a);
                    J.scaleControlOptions = a
                },
                t = function(a) {
                    "boolean" == typeof a && (ea.Show(a), J.indexViewControl = a)
                },
                u = function(a) {
                    a == TGOS.TGIndexViewControlOptions.MINIMIZED && (ea.Minimize(), J.indexViewControlOptions = a)
                },
                s = function(a) {
                    "boolean" ==
                    typeof a && (N = a, J.draggable = a, R.OpenCloseMove(a))
                },
                q = function(a) {
                    "boolean" == typeof a && (R.allowKeyboard(a), J.keyboardShortcuts = a)
                },
                w = function(a) {
                    "boolean" == typeof a && (R.setDragInertia(a), J.dragInertia = a)
                },
                v = function(a) {
                    "string" == typeof a && (R.changeDraggableCursor(a), J.draggableCursor = a)
                },
                D = function(a) {
                    "string" == typeof a && (R.changeDraggingCursor(a), J.draggingCursor = a)
                };
            void 0 != a && (void 0 != a.backgroundColor && e(a.backgroundColor), void 0 != a.disableDefaultUI && f(a.disableDefaultUI), void 0 != a.scrollwheel &&
                g(a.scrollwheel), void 0 != a.mapTypeControl && h(a.mapTypeControl), void 0 != a.mapTypeControlOptions && m(a.mapTypeControlOptions), void 0 != a.navigationControl && l(a.navigationControl), void 0 != a.navigationControlOptions && k(a.navigationControlOptions), void 0 != a.scaleControl && n(a.scaleControl), void 0 != a.scaleControlOptions && p(a.scaleControlOptions), void 0 != a.indexViewControl && t(a.indexViewControl), void 0 != a.indexViewControlOptions && u(a.indexViewControlOptions), void 0 != a.draggable && s(a.draggable), void 0 != a.keyboardShortcuts &&
                q(a.keyboardShortcuts), void 0 != a.draggableCursor && v(a.draggableCursor), void 0 != a.dragInertia && w(a.dragInertia), void 0 != a.draggingCursor && D(a.draggingCursor), void 0 != a.center && L.setCenter(a.center), void 0 != a.dbClickZoomIn && R.OpenCloseDblClick(a.dbClickZoomIn), void 0 !== a.maxZoom && void 0 !== a.minZoom ? d(a.minZoom, a.maxZoom) : (void 0 !== a.maxZoom && (X.setMapMaxLevel(a.maxZoom), K.RefreshMap(!0)), void 0 !== a.minZoom && (X.setMapMinLevel(a.minZoom), K.RefreshMap(!0))), void 0 !== a.mapBounds && b(a.mapBounds))
        };
        this.freezeMap =
            function() {
                R.ExitMapEvent();
                U = !0
            };
        this.unFreezeMap = function() {
            U = !1;
            R.InitMapEvent()
        };
        this.loopThroughOverlay = function() {};
        this.resize = function(a, b) {
            I.style.width = a + "px";
            I.style.height = b + "px";
            l = I.clientWidth;
            k = I.clientHeight
        };
        this.getBoundary = function() {
            return K.getExtent()
        };
        this.getLevel = function() {
            return X.getMapLevel()
        };
        this.getDiv = function() {
            return va
        };
        this.getEventElement = function() {
            return this.getHObj()
        };
        this.getTransformation = function() {
            return X
        };
        this.fitBounds = function(b) {
            if (null != b.left &&
                null != b.top && null != b.right && null != b.bottom) {
                var e = {
                        X: 0,
                        Y: 0
                    },
                    f = {
                        X: 0,
                        Y: 0
                    };
                B == TGOS.TGCoordSys.EPSG3857 ? (e = d.Forward(a, new CPoint3(b.left, b.top, 0)), f = d.Forward(a, new CPoint3(b.right, b.bottom, 0))) : (e.X = b.left, e.Y = b.top, f.X = b.right, f.Y = b.bottom);
                TGOS.moveMapTo_(this, (f.X + e.X) / 2, (f.Y + e.Y) / 2);
                b = Number(I.clientHeight) / (f.Y - e.Y);
                K.putScale(Math.min(Math.abs(Number(I.clientWidth) / (f.X - e.X)), Math.abs(b)));
                X.FitLevel();
                K.RefreshMap(!0)
            }
        };
        this.getRawBound = function() {
            var a = l,
                b = k,
                d = K.ToMapPoint(0, 0),
                a = K.ToMapPoint(a,
                    b);
            return new TGOS.TGEnvelope(d.x, d.y, a.x, a.y)
        };
        this.getBounds = function() {
            var a = l,
                b = k,
                d = K.ToMapPoint(0, 0),
                a = K.ToMapPoint(a, b),
                e, f, g, h;
            switch (B) {
                case TGOS.TGCoordSys.EPSG3857:
                    f = TGOS.GooToWGS84(d.x, d.y);
                    d = TGOS.GooToWGS84(a.x, a.y);
                    e = f.x;
                    f = f.y;
                    g = d.x;
                    h = d.y;
                    break;
                case TGOS.TGCoordSys.EPSG3826:
                    e = d.x;
                    f = d.y;
                    g = a.x;
                    h = a.y;
                    break;
                case TGOS.TGCoordSys.EPSG3825:
                    e = d.x, f = d.y, g = a.x, h = a.y
            }
            return new TGOS.TGEnvelope(e, f, g, h)
        };
        this.checkMapBoundsRestrict = function(a, b, d) {
            var e = null;
            if (a) {
                var f = 0,
                    g = 0,
                    h = this.getRawBound(),
                    m = h.top - h.bottom,
                    l = a.top - a.bottom;
                h.right - h.left > a.right - a.left ? (f = 1, b = (a.left + a.right) / 2) : h.left < a.left ? (f = h.left - a.left, b -= f) : h.right > a.right && (f = h.right - a.right, b -= f);
                m > l ? (g = 1, d = (a.top + a.bottom) / 2) : h.top > a.top ? (g = h.top - a.top, d -= g) : h.bottom < a.bottom && (g = h.bottom - a.bottom, d -= g);
                if (0 != f || 0 != g) e = new TGOS.TGPoint(b, d)
            }
            return e
        };
        this.getCenter = function(a) {
            a = K.getCenterX();
            var b = K.getCenterY(),
                d, e;
            switch (B) {
                case TGOS.TGCoordSys.EPSG3857:
                    e = TGOS.GooToWGS84(a, b);
                    d = e.x;
                    e = e.y;
                    break;
                case TGOS.TGCoordSys.EPSG3826:
                    d =
                        a;
                    e = b;
                    break;
                case TGOS.TGCoordSys.EPSG3825:
                    d = a, e = b
            }
            return new TGOS.TGPoint(d, e)
        };
        this.setCenter = function(b) {
            switch (B) {
                case TGOS.TGCoordSys.EPSG3826:
                    TGOS.moveMapTo_(this, b.x, b.y);
                    break;
                case TGOS.TGCoordSys.EPSG3825:
                    TGOS.moveMapTo_(this, b.x, b.y);
                    break;
                case TGOS.TGCoordSys.EPSG3857:
                    b = d.Forward(a, new CPoint3(b.x, b.y, 0)), TGOS.moveMapTo_(this, b.X, b.Y)
            }
            K.RefreshMap(!0)
        };
        this.getZoom = function() {
            return X.getMapLevel()
        };
        this.setZoom = function(a) {
            this.ZoomTo(a)
        };
        this.setMapTypeId = function(a) {
            if (aa !== a) {
                var b =
                    T,
                    d = A ? J.backgroundColor : TGOS.MapTypeBackgroundColor[a];
                J.backgroundColor = d;
                K.setColor(d);
                ea.setColor(d);
                for (d = 0; d < b.length; d++) !b[d].skip && b[d].putVisible && (b[d].mapTypeId == a ? b[d].putVisible(!0) : b[d].putVisible(!1));
                TGOS.TGEvent.trigger(this, "maptypeid_changed");
                aa = a;
                b = X.getMapLevel();
                this.getCoordSys();
                X.getMapMinLevel();
                d = X.getMapMaxLevel();
                b > d && (b = d);
                X.putMapLevel(b);
                fa.setActiveType(a);
                K.RefreshMap(!0)
            }
        };
        this.panBy = function(a, b) {
            R.panBy(a, b);
            K.RefreshMap(!0)
        };
        this.panToBounds = function(a) {
            if (null !=
                a.left && null != a.top && null != a.right && null != a.bottom) {
                var b, d;
                switch (B) {
                    case TGOS.TGCoordSys.EPSG3857:
                        a = TGOS.WGS84ToGoo(a.left, a.top);
                        b = a.x;
                        d = a.y;
                        break;
                    case TGOS.TGCoordSys.EPSG3826:
                        b = a.left;
                        d = a.top;
                        break;
                    case TGOS.TGCoordSys.EPSG3825:
                        b = a.left, d = a.top
                }
                TGOS.moveMapTo_(this, b, d);
                K.RefreshMap(!0)
            }
        };
        this.getLayerList = function() {
            return T
        };
        this.setMapAction = function(a, b) {
            if (1 == a) {
                var d = K.getHObject(),
                    e = function(a, e, g, h) {
                        DetachEvent(d, "mousedown", f, !1);
                        freezeMap || R.InitMapEvent();
                        null != b && b(a, e, g, h)
                    },
                    f = function(a) {
                        RectangleTracker(K,
                            a, e)
                    };
                R.ExitMapEvent();
                AttachEvent(d, "mousedown", f, !1)
            } else freezeMap || R.InitMapEvent()
        };
        this.getCoordinateString = function(a, b) {
            var d = K.ToMapPoint(a, b);
            return d.x + "," + d.y
        };
        this.changeOverviewMapType = function(a, b) {
            for (var d = 0; d < a.length; d++) a[d].mapTypeId == b ? a[d].putVisible(!0) : a[d].putVisible(!1);
            ea.getMapBase().RefreshMap(!0)
        };
        var v = function(a, b) {
                var d = TGOS.MapTypeDocumentName,
                    e;
                switch (B) {
                    case TGOS.TGCoordSys.EPSG3826:
                        d = TGOS.MapTypeDocumentName;
                        break;
                    case TGOS.TGCoordSys.EPSG3825:
                        d = TGOS.MapTypeDocumentNameTWD97_119;
                        break;
                    case TGOS.TGCoordSys.EPSG3857:
                        d = TGOS.MapTypeDocumentNameGoogle, e = TGOS.CacheExtend3857
                }
                for (var f = 0; f < a.length; f++)
                    if (a[f] in d) {
                        var g;
                        void 0 !== e && (g = e[a[f]]);
                        var h = new MapCachedLayer(TGOS.TGMapTypeId_zh_TW[a[f]], d[a[f]], !1, L, b, null, g);
                        h.mapTypeId = a[f];
                        T.push(h)
                    }
            },
            z = function(a, b) {
                var d, e = TGOS.MapTypeIndexViewDocumentName;
                switch (B) {
                    case TGOS.TGCoordSys.EPSG3826:
                        e = TGOS.MapTypeIndexViewDocumentName;
                        b = "97";
                        break;
                    case TGOS.TGCoordSys.EPSG3825:
                        e = TGOS.MapTypeIndexViewDocumentName;
                        b = "97_119";
                        break;
                    case TGOS.TGCoordSys.EPSG3857:
                        e =
                            TGOS.MapTypeIndexViewDocumentNameGoogle, b = "google", d = TGOS.CacheExtend3857
                }
                for (var f = 0; f < a.length; f++)
                    if (a[f] in e) {
                        var g;
                        void 0 !== d && (g = d[a[f]]);
                        var h = new MapCachedLayer(TGOS.TGMapTypeId_zh_TW[a[f]], e[a[f]], !1, L, b, null, g);
                        h.mapTypeId = a[f];
                        T.push(h)
                    }
            },
            E = function() {
                I.style.width = f.offsetWidth + "px";
                I.style.height = f.offsetHeight + "px";
                k = I.clientHeight;
                l = I.clientWidth;
                D.style.width = f.offsetWidth + "px";
                D.style.height = f.offsetHeight + "px";
                w.style.width = f.offsetWidth + "px";
                w.style.height = f.offsetHeight + "px";
                t.style.width =
                    f.offsetWidth + "px";
                t.style.height = f.offsetHeight + "px";
                C.setSize(I.offsetWidth, I.offsetHeight);
                u.setSize(I.offsetWidth, I.offsetHeight);
                L.getMapBase().RefreshMap(!0);
                TGOS.TGEvent.trigger(L, "idle")
            },
            F = function() {
                O = document.createElement("div");
                I.appendChild(O);
                O.style.position = "absolute";
                O.style.right = "0px";
                O.style.bottom = "0px";
                O.style.width = "145px";
                O.style.height = "145px";
                O.style.display = "inline";
                O.style.backgroundColor = "#ADD8E6";
                O.style.margin = "5px";
                O.style.border = "2px solid";
                O.style.zIndex = 1E7;
                ea =
                    new Overview(O, K, X, 150, 150, 4);
                for (var a = 0; a < M.length; a++) ea.getMapBase().AddLayer(M[a]), 0 < a && M[a].putVisible(!0)
            },
            G = function(a) {
                !U && X.putMapLevel(a) && (a = X.getScale(), K.putScale(a), K.RefreshMap(!0))
            },
            A;
        this.setBackgroundColor = function(a) {
            "string" == typeof a && (A = !0, K.setColor(a), J.backgroundColor = a)
        };
        this.getBackgroundColor = function() {
            return J.backgroundColor
        };
        this.initialize_ = function(g) {
            this.infoWindowLayer = new b(W, this);
            this.overlay = new e(Z);
            if ("EPSG3857" == B) {
                S = "google";
                var h = d.Forward(a, new CPoint3(118.9940295414,
                        25.30028310652, 0)),
                    m = d.Forward(a, new CPoint3(122.0064955717, 21.896606644941, 0));
                ha = new TGOS.TGEnvelope(m.X, m.Y, h.X, h.Y);
                var h = TGOS.MapTypeScales.EPSG3857.levelX,
                    m = TGOS.MapTypeScales.EPSG3857.levelY,
                    p = TGOS.MapTypeScales.EPSG3857.scales
            } else "EPSG3825" == B ? (S = "97_119", ha = new TGOS.TGEnvelope(339023.59349082, 2425702.7292442, 51368.8242689183, 2799323.57990279), h = TGOS.MapTypeScales.EPSG3825.levelX, m = TGOS.MapTypeScales.EPSG3825.levelY, p = TGOS.MapTypeScales.EPSG3825.scales) : (S = "97", ha = new TGOS.TGEnvelope(339023.59349082,
                2425702.7292442, 51368.8242689183, 2799323.57990279), h = TGOS.MapTypeScales.EPSG3826.levelX, m = TGOS.MapTypeScales.EPSG3826.levelY, p = TGOS.MapTypeScales.EPSG3826.scales);
            for (var A in TGOS.MapTypeMaxZoomLevel[B]) ga = Math.max(TGOS.MapTypeMaxZoomLevel[B][A], ga);
            A = [TGOS.TGMapTypeId.TGOSMAP, TGOS.TGMapTypeId.NLSCMAP, TGOS.TGMapTypeId.MOTCMAP, TGOS.TGMapTypeId.F2IMAGE, TGOS.TGMapTypeId.ROADMAP, TGOS.TGMapTypeId.HILLSHADEMIX, TGOS.TGMapTypeId.HILLSHADE, TGOS.TGMapTypeId.SEGISMAP, TGOS.TGMapTypeId.IMAGENLSC];
            v(A, S);
            z(A,
                S);
            I = document.createElement("div");
            f.appendChild(I);
            I.style.position = "relative";
            I.style.overflow = "hidden";
            I.style.width = f.offsetWidth + "px";
            I.style.height = f.offsetHeight + "px";
            I.style.border = "0px";
            I.style.left = "0px";
            I.style.top = "0px";
            I.unselectable = "on";
            I.className = "hpack";
            l = I.clientWidth;
            k = I.clientHeight;
            X = new TGOS.MapScaleLevel(ka, ga, h, m, p);
            K = new MapBase(I, X);
            this.bindEvents(this.getEventElement());
            f.style.overflow = "hidden";
            K.AddElement(this.overlay);
            K.AddElement(this.infoWindowLayer);
            K.setColor("#a5bfdd");
            for (A = 1; A < T.length; A++) T[A].putVisible(!1);
            for (A = 0; A < T.length; A++) K.AddLayer(T[A]);
            K.ZoomMapTo(ha);
            X.FitLevel();
            initControlArray(this);
            F();
            this.IndexViewControl.Show(!0);
            A = this.getMapBase().getHObject();
            this.getMapBase().getHPackage().oncontextmenu = function() {
                return !1
            };
            D = document.createElement("div");
            D.style.position = "absolute";
            D.style.width = "100%";
            D.style.height = "100%";
            D.className = "tgoverlayview";
            A.appendChild(D);
            t = document.createElement("div");
            t.style.position = "absolute";
            t.style.width = "100%";
            t.style.height =
                "100%";
            t.className = "tgshadow";
            A.appendChild(t);
            u = Raphael(t);
            w = document.createElement("div");
            w.style.position = "absolute";
            w.style.width = "100%";
            w.style.height = "100%";
            w.className = "tgoverlay";
            A.appendChild(w);
            Raphael.fn.createMarker = function(a) {
                var b = this.canvas.getElementsByTagName("defs")[0],
                    d = document.createElementNS("http://www.w3.org/2000/svg", "marker");
                d.setAttribute("id", Raphael.createUUID());
                d.setAttribute("markerWidth", 22);
                d.setAttribute("markerHeight", 22);
                d.setAttribute("viewBox", "-11 -11 22 22");
                d.setAttribute("orient", "auto");
                var e = document.createElementNS("http://www.w3.org/2000/svg", "path");
                e.setAttribute("fill", a.fillColor);
                e.setAttribute("fill-opacity", a.fillOpacity);
                e.setAttribute("stroke", a.strokeColor);
                e.setAttribute("stroke-width", a.strokeWeight);
                e.setAttribute("stroke-opacity", a.strokeOpacity);
                e.setAttribute("d", a.symbolStyle);
                d.appendChild(e);
                b.appendChild(d);
                return d.id
            };
            Raphael.fn.removeMarker = function(a) {
                (a = def.getElementById(a)) && a.parentNode.removeChild(a)
            };
            C = Raphael(w);
            C.canvas.setAttribute("fill-rule",
                "evenodd");
            C.canvas.setAttribute("pointer-events", "all");
            C.rect(0, 0, 300, 300).hide();
            this.changeOverviewMapType(M, TGOS.TGMapTypeId.TGOSMAP);
            ca = new TGOS.CopyrightControl(this, TGOS.TGControlPosition.BOTTOM_LEFT);
            K.AddElement(ca);
            ba = new TGOS.ScaleBarControl(I, K, H.scaleControlOptions.controlPosition, H.scaleControlOptions.scaleControlStyle, this);
            K.AddElement(ba);
            fa = new TGOS.MapTypeBarControl(this, H.mapTypeControlOptions, ea, M);
            da = new TGOS.LevelBarControl(this.getHPackage(), X, H.navigationControlOptions.controlPosition,
                H.navigationControlOptions.style, this);
            K.AddElement(da);
            R = new TGOS.TGMapMove(X, P, N, Q, V, H.draggableCursor, H.draggingCursor, fa, this);
            R.InitMapEvent(this);
            this.setOptions(H);
            this.setOptions(g);
            K.RefreshMap(!0);
            window.onresize = function() {
                TGOS.TGEvent.trigger(L, "resize")
            };
            TGOS.TGEvent.addListener(this, "resize", E);
            this.dataManager = new TGOS.TGData({
                map: this,
                style: null
            })
        };
        this.getPanes = function() {
            return {
                graphicLayer: w,
                mapLayer: L.getHObj(),
                shadowLayer: t,
                controlLayer: L.getHPackage(),
                overlayviewLayer: D
            }
        };
        this.addLayer =
            function(a, b) {
                a.skip = b;
                T.push(a);
                K.AddLayer(a);
                K.RefreshMap(!0)
            };
        this.removeLayer = function(a) {
            var b = T.indexOf(a);
            T.splice(b, 1);
            K.RemoveLayer(a);
            K.RefreshMap(!0)
        };
        this.getShadowPaper = function() {
            return u
        };
        this.getPaper = function() {
            return C
        };
        var B = g,
            C, u, w, t, D, H = {
                backgroundColor: "#a5bfdd",
                disableDefaultUI: !1,
                draggable: !0,
                scrollwheel: !0,
                keyboardShortcuts: !0,
                draggableCursor: "",
                draggingCursor: "",
                mapTypeControl: !0,
                mapTypeControlOptions: {
                    mapTypeIds: "EPSG3825" == B ? [TGOS.TGMapTypeId.TGOSMAP, TGOS.TGMapTypeId.NLSCMAP] : [TGOS.TGMapTypeId.TGOSMAP, TGOS.TGMapTypeId.NLSCMAP, TGOS.TGMapTypeId.MOTCMAP, TGOS.TGMapTypeId.F2IMAGE, TGOS.TGMapTypeId.ROADMAP, TGOS.TGMapTypeId.HILLSHADEMIX, TGOS.TGMapTypeId.HILLSHADE, TGOS.TGMapTypeId.IMAGENLSC],
                    controlPosition: TGOS.TGControlPosition.TOP_RIGHT,
                    mapTypeControlStyle: TGOS.TGMapTypeControlStyle.DROPDOWN_MENU
                },
                navigationControl: !0,
                navigationControlOptions: {
                    controlPosition: TGOS.TGControlPosition.LEFT_CENTER,
                    navigationControlStyle: TGOS.TGNavigationControlStyle.DEFAULT
                },
                scaleControl: !0,
                scaleControlOptions: {
                    controlPosition: TGOS.TGControlPosition.LEFT_BOTTOM,
                    scaleControlstyle: TGOS.TGScaleControlStyle.DEFAULT
                },
                indexViewControl: !1,
                indexViewControlOptions: TGOS.TGIndexViewControlOptions.MINIMIZED,
                maxZoom: null,
                minZoom: null,
                dbClickZoomIn: !0
            },
            J = {
                backgroundColor: "#a5bfdd",
                disableDefaultUI: !0,
                draggable: !0,
                scrollwheel: !0,
                keyboardShortcuts: !0,
                draggableCursor: "",
                dragInertia: !0,
                draggingCursor: "",
                mapTypeControl: !0,
                mapTypeControlOptions: {
                    mapTypeIds: "EPSG3825" == B ? [TGOS.TGMapTypeId.TGOSMAP, TGOS.TGMapTypeId.NLSCMAP] : [TGOS.TGMapTypeId.TGOSMAP, TGOS.TGMapTypeId.NLSCMAP, TGOS.TGMapTypeId.MOTCMAP,
                        TGOS.TGMapTypeId.F2IMAGE, TGOS.TGMapTypeId.ROADMAP, TGOS.TGMapTypeId.HILLSHADEMIX, TGOS.TGMapTypeId.HILLSHADE, TGOS.TGMapTypeId.IMAGENLSC
                    ],
                    controlPosition: TGOS.TGControlPosition.RIGHT_TOP,
                    mapTypeControlStyle: TGOS.TGMapTypeControlStyle.DEFAULT
                },
                navigationControl: !0,
                navigationControlOptions: {
                    controlPosition: TGOS.TGControlPosition.LEFT_TOP,
                    navigationControlStyle: TGOS.TGNavigationControlStyle.DEFAULT
                },
                scaleControl: !0,
                scaleControlOptions: {
                    controlPosition: TGOS.TGControlPosition.LEFT_BOTTOM,
                    scaleControlstyle: TGOS.TGScaleControlStyle.DEFAULT
                },
                indexViewControl: !1,
                indexViewControlOptions: TGOS.TGIndexViewControlOptions.NORMAL,
                maxZoom: null,
                minZoom: null,
                dbClickZoomIn: !0
            },
            P = !0,
            N = !0,
            Q = !0,
            V = !1,
            R = null,
            K = null,
            L = this,
            I = null,
            O = null,
            W = [],
            Z = [],
            aa = TGOS.TGMapTypeId.TGOSMAP,
            S = "97",
            T = [],
            M = [],
            ka = this,
            va = f,
            ha = null,
            ga = 0,
            X = null,
            U = !1,
            ca = null,
            da = null,
            fa = null,
            ba = null,
            ea = null;
        this.initialize_(h);
        TGOS.Log("web", "A01", "")
    };
    TGOS.TGOnlineMap.prototype = new TGOS.MVCObject;
    var f = TGOS.TGOnlineMap.prototype;
    f.triggerEvent = function(a, b) {
        var d = this.getMapBase();
        if (d) {
            var e =
                d.getPackageOffset(),
                f, g;
            a.changedTouches && a.changedTouches.length ? (f = a.changedTouches[0].clientX, g = a.changedTouches[0].clientY) : (f = a.clientX, g = a.clientY);
            var d = d.ToMapPoint(f - e.x, g - e.y),
                h;
            switch (this.getMap().getCoordSys()) {
                case TGOS.TGCoordSys.EPSG3857:
                    h = TGOS.GooToWGS84(d.x, d.y);
                    break;
                case TGOS.TGCoordSys.EPSG3826:
                    h = d;
                    break;
                case TGOS.TGCoordSys.EPSG3825:
                    h = d
            }
            d = new TGOS.TGMouseEvent(a);
            d.point = new TGOS.TGPoint(h.x, h.y);
            d.target = this;
            TGOS.TGEvent.trigger_(this, b, d)
        }
    };
    f.onMouseUp = function(a) {
        this.triggerEvent.call(this,
            a, "mouseup")
    };
    f.onMouseMove = function(a) {
        this.triggerEvent.call(this, a, "mousemove")
    };
    f.onMouseDown = function(a) {
        this.__downE = a;
        this.triggerEvent.call(this, a, "mousedown");
        var b = this;
        a = function() {
            b.onDrag.apply(b, arguments)
        };
        var d = function() {
            b.onDragEnd.apply(b, arguments)
        };
        this.elem.dragWrapper = a;
        this.elem.dragEndWrapper = d;
        AttachEvent(this.elem, "mousemove", a);
        AttachEvent(this.elem, "mouseup", d);
        AttachEvent(this.elem, "touchmove", a);
        AttachEvent(this.elem, "touchend", d)
    };
    f.onMouseOver = function(a) {
        this.triggerEvent.call(this,
            a, "mouseover")
    };
    f.onMouseOut = function(a) {
        this.triggerEvent.call(this, a, "mouseout")
    };
    f.onDblClick = function(a) {
        this.triggerEvent.call(this, a, "dblclick")
    };
    f.isSamePosition = function(a, b) {
        var d, e, f, g;
        a.changedTouches && b.changedTouches && a.changedTouches.length && b.changedTouches.length ? (d = a.changedTouches[0].screenX, e = a.changedTouches[0].screenY, f = b.changedTouches[0].screenX, g = b.changedTouches[0].screenY) : (d = a.screenX, e = a.screenY, f = b.screenX, g = b.screenY);
        return d === f && e === g
    };
    f.onDrag = function(a) {
        this.isSamePosition(this.__downE,
            a) || (DetachEvent(this.elem, "mousemove", this.elem.dragWrapper), DetachEvent(this.elem, "mouseup", this.elem.dragEndWrapper), DetachEvent(this.elem, "touchmove", this.elem.dragWrapper), DetachEvent(this.elem, "touchend", this.elem.dragEndWrapper))
    };
    f.onDragEnd = function(a) {
        DetachEvent(this.elem, "mousemove", this.elem.dragWrapper);
        DetachEvent(this.elem, "mouseup", this.elem.dragEndWrapper);
        DetachEvent(this.elem, "touchmove", this.elem.dragWrapper);
        DetachEvent(this.elem, "touchend", this.elem.dragEndWrapper);
        a.button ==
            TGOS.TGEvent.RIGHTBUTTON ? this.triggerEvent.call(this, a, "rightclick") : this.triggerEvent.call(this, a, "click")
    };
    f.bindEvents = function() {
        if (this.elem = this.getEventElement()) {
            var a = this;
            AttachEvent(this.elem, "mouseup", function(b) {
                a.onMouseUp.apply(a, arguments)
            });
            AttachEvent(this.elem, "mousemove", function(b) {
                a.onMouseMove.apply(a, arguments)
            });
            AttachEvent(this.elem, "mousedown", function(b) {
                a.onMouseDown.apply(a, arguments)
            });
            AttachEvent(this.elem, "mouseover", function(b) {
                a.onMouseOver.apply(a, arguments)
            });
            AttachEvent(this.elem, "mouseout", function(b) {
                a.onMouseOut.apply(a, arguments)
            });
            AttachEvent(this.elem, "dblclick", function(b) {
                a.onDblClick.apply(a, arguments)
            });
            AttachEvent(this.elem, "touchstart", function(b) {
                a.onMouseDown.apply(a, arguments)
            });
            AttachEvent(this.elem, "touchend", function(b) {
                a.onMouseUp.apply(a, arguments)
            });
            AttachEvent(this.elem, "touchmove", function(b) {
                a.onMouseMove.apply(a, arguments)
            })
        }
    };
    TGOS.RegisterEvent(TGOS.TGOnlineMap, "bounds_changed center_changed zoom_changed maptypeid_changed tilesloaded click mousedown mousemove mouseout mouseover projection_changed dragstart drag dragend idle resize dblclick rightclick".split(" "));
    TGOS.moveMapTo_ = function(a, b, d) {
        var e = a.getMapBase().getCenterX(),
            f = a.getMapBase().getCenterY(),
            g = a.getBounds().toString();
        a.getMapBase().MoveMapTo(b, d);
        var h = a.getBounds().toString();
        e == b && f == d || TGOS.TGEvent.trigger(a, "center_changed");
        g != h && TGOS.TGEvent.trigger(a, "bounds_changed")
    };
    TGOS.TGIndexViewControl = function(a) {
        this.show = function(b) {
            a.IndexViewControl && a.IndexViewControl.Show(b)
        };
        this.minimize = function() {
            a.IndexViewControl.minimize()
        }
    };
    TGOS.TGMapMove = function(a, b, d, e, f, g, h, l, k, G) {
        var A, B = !1,
            C, u = !1,
            w = !1,
            t, D, H, J, P, N, Q = !1,
            V, R, K = !1,
            L, I, O = !1,
            W = "",
            Z = "",
            aa = !0,
            S = !1,
            T = null,
            M, ka = !1,
            va = 0,
            ha = 0,
            ga = 0,
            X = null,
            U = null,
            ca = null,
            da = null,
            fa = function() {
                var a = da - U;
                ha = (ca - X) / 50;
                ga = a / 50
            };
        this.ExitMapEvent = null;
        this.IsMapAction = function() {
            return O
        };
        var ba = function(a, b, d) {
            var e = k.getMapBase(),
                f = e.getCenterX(),
                g = e.getCenterY(),
                h = a.x - f,
                m = a.y - g;
            d = 1E3 / d;
            var l = (new Date).getTime(),
                p = setInterval(function() {
                    var d = (new Date).getTime();
                    d - l > 1E3 * b ? (TGOS.moveMapTo_(k, a.x, a.y), e.RefreshMap(!0), clearInterval(p)) : (d = (d - l) /
                        (1E3 * b), e.putCenterX(f + d * h), e.putCenterY(g + d * m), e.RefreshMap(!1))
                }, d)
        };
        this.panBy = function(a, b) {
            var d = k.getMapBase(),
                e = d.getClientWidth(),
                f = d.getClientHeight(),
                g = d.getCenterX() + a,
                h = d.getCenterY() + b,
                d = d.FromMapPoint(g, h);
            0 <= d.x && d.x <= e && 0 <= d.y && d.y <= f ? ba({
                x: g,
                y: h
            }, 0.5, 30) : TGOS.moveMapTo_(k, g, h)
        };
        this.panToBounds = function(a) {
            var b = k.getMapBase();
            a = b.getClientWidth();
            var d = b.getClientHeight(),
                e = b.getCenterX() + offsetX,
                f = b.getCenterY() + offsetY,
                b = b.FromMapPoint(e, f);
            0 <= b.x && b.x <= a && 0 <= b.y && b.y <= d ? ba({
                x: e,
                y: f
            }, 0.5, 30) : TGOS.moveMapTo_(k, e, f)
        };
        this.setMapBounds = function(a) {
            G = a;
            a = k.getMapBase();
            var b = a.getCenterX(),
                d = a.getCenterY(),
                b = k.checkMapBoundsRestrict(G, b, d);
            null != b && (TGOS.moveMapTo_(k, b.x, b.y), a.RefreshMap(!0))
        };
        this.allowKeyboard = function(a) {
            "boolean" == typeof a && (aa = a)
        };
        this.clearNum = function() {
            c = 0
        };
        var ea = !0;
        this.setDragInertia = function(a) {
            "boolean" == typeof a && (ea = a)
        };
        this.changeDraggableCursor = function(a) {
            W = a;
            M.style.cursor = W
        };
        this.changeDraggingCursor = function(a) {
            Z = a
        };
        this.InitMapEvent = function(g) {
            var h =
                g.getMapBase();
            M = h.getHObject();
            h.getHPackage();
            var l = [],
                v = function(a) {
                    setTimeout(function() {
                        u = !1
                    }, a)
                },
                z = function(a, b, d) {
                    var e = 20;
                    d && (e = d);
                    return Math.abs(a.X - b.X) <= e && Math.abs(a.Y - b.Y) <= e ? !0 : !1
                },
                E = function(a, b) {
                    var d = h.getCursorPosition(a),
                        e = h.getCursorPosition(b),
                        f = parseFloat((d.x + e.x) / 2),
                        g = parseFloat((d.y + e.y) / 2),
                        d = Math.sqrt((d.x - e.x) * (d.x - e.x) + (d.y - e.y) * (d.y - e.y));
                    return {
                        scrCenter: {
                            X: f,
                            Y: g
                        },
                        length: d
                    }
                },
                ba = function(a) {
                    var b;
                    a.preventDefault();
                    l = a.touches;
                    oa && oa.stop();
                    ga = ha = 0;
                    a = l[0];
                    !0 == u && !0 ==
                        z({
                            X: l[0].clientX,
                            Y: l[0].clientY
                        }, A) && (w = !0, u = !1, C = a);
                    A = {
                        X: a.clientX,
                        Y: a.clientY
                    };
                    if (1 < l.length) {
                        b = E(a, l[1]);
                        a = b.scrCenter;
                        var d = b.length;
                        t = b = h.ToMapPoint(a.X, a.Y);
                        D = a;
                        H = d;
                        J = h.getCellSizeX();
                        P = h.getCellSizeY();
                        N = h.getScale();
                        Q = !0
                    } else ca = l[0].clientX, da = l[0].clientY, X = ca, U = da, Oa = setInterval(fa, 50), ta = !1, wa = 0;
                    B = !0
                },
                Ea = function(a) {
                    a.preventDefault();
                    l = a.touches;
                    a = l[0];
                    var b = a.clientX - A.X,
                        d = a.clientY - A.Y;
                    1 < l.length ? K || (K = !0, b = l[1], Q && (a = E(a, b), b = a.scrCenter, z(b, D, 5) || (a = parseFloat(a.length / H), d = h.getClientWidth() /
                        2 - b.X, b = h.getClientHeight() / 2 - b.Y, b = new TGOS.TGPoint(t.x + d * J / a, t.y + b * P / a), V = new TGOS.TGPoint(b.x, b.y), R = N * a, h.putScale(R), TGOS.moveMapTo_(k, b.x, b.y), h.RefreshMap(!0))), K = !1) : (Ca && (clearTimeout(Ca), ta = !1), setTimeout(Aa, 500), wa++, A = {
                        X: a.clientX,
                        Y: a.clientY
                    }, X = ca, U = da, ca = a.clientX, da = a.clientY, B && (TGOS.moveMapTo_(k, h.getCenterX() - h.ToMapDistX(b), h.getCenterY() - h.ToMapDistY(d)), h.RefreshMap(!1)))
                },
                ma = function(b) {
                    b.preventDefault();
                    l = b.touches;
                    if (!0 == w) w = !1, ia(C), k.onDblClick(C);
                    else {
                        if (null != V && null !=
                            R) h.putScale(R), TGOS.moveMapTo_(k, V.x, V.y), a.FitLevel(), h.RefreshMap(!0);
                        else if (ea) {
                            var d = Math.abs(Math.sqrt(ha * ha + ga * ga)),
                                e = -ha;
                            b = -ga;
                            if (d > Ba && 2 < wa && !ta) {
                                d = e * qa;
                                b *= qa;
                                var f = h.getCenterX(),
                                    g = h.getCenterY(),
                                    m = h.ToMapDistX(d),
                                    p = h.ToMapDistY(b);
                                b = f + m;
                                d = g + p;
                                oa = TGOS.fx.createAnimation({
                                    easing: TGOS.fx.easing.quadOut,
                                    type: window.requestAnimationFrame ? "req" : "setTimeout",
                                    duration: qa,
                                    repeat: !1,
                                    onAnimation: function(a) {
                                        TGOS.moveMapTo_(k, f + m * a, g + p * a);
                                        h.RefreshMap(!1)
                                    },
                                    onEnd: function() {
                                        var a = h.getCenterX(),
                                            b =
                                            h.getCenterY(),
                                            a = k.checkMapBoundsRestrict(G, a, b);
                                        null != a ? (TGOS.moveMapTo_(k, a.x, a.y), h.RefreshMap(!1)) : h.RefreshMap(!0);
                                        TGOS.TGEvent.trigger(k, "idle")
                                    }
                                });
                                oa.play()
                            } else b = h.getCenterX(), d = h.getCenterY(), b = k.checkMapBoundsRestrict(G, b, d), null != b && TGOS.moveMapTo_(k, b.x, b.y), h.RefreshMap(!0), TGOS.TGEvent.trigger(k, "idle")
                        } else h.RefreshMap(!0), TGOS.TGEvent.trigger(k, "idle");
                        R = V = null;
                        Q = B = !1;
                        u = !0;
                        v(500)
                    }
                },
                za = function(a) {
                    a.preventDefault();
                    l = [];
                    h.RefreshMap(!0);
                    B = !1
                },
                Aa = function() {
                    ta = !0
                },
                Ha = function(a) {
                    util.disableDefault(a);
                    if (d) {
                        var b = a.screenX - L,
                            e = a.screenY - I;
                        L = a.screenX;
                        I = a.screenY;
                        Ca && (clearTimeout(Ca), ta = !1);
                        setTimeout(Aa, 500);
                        wa++;
                        X = ca;
                        U = da;
                        ca = a.screenX;
                        da = a.screenY;
                        ka = !0;
                        M.style.cursor = Z ? Z : "url(" + TGOS.RES_PATH + "catch.cur),default";
                        a = h.getCenterX() - h.ToMapDistX(b);
                        e = h.getCenterY() - h.ToMapDistY(e);
                        TGOS.moveMapTo_(k, a, e);
                        h.RefreshMap(!1);
                        1 > va && TGOS.TGEvent.trigger(k, "dragstart");
                        TGOS.TGEvent.trigger(k, "drag");
                        va++
                    }
                },
                oa, qa = 500,
                Ba = 0.08,
                Qa = function(a) {
                    util.disableDefault(a);
                    if (d) {
                        DetachEvent(M, "mousemove", Ha, !0);
                        DetachEvent(M,
                            "mouseup", Qa, !0);
                        M.style.cursor = W ? W : "default";
                        O = !1;
                        if (G) {
                            var b = a.screenX - L;
                            a = a.screenY - I;
                            b = h.getCenterX() - h.ToMapDistX(b);
                            a = h.getCenterY() - h.ToMapDistY(a);
                            b = k.checkMapBoundsRestrict(G, b, a);
                            null != b && (TGOS.moveMapTo_(k, b.x, b.y), h.RefreshMap(!1))
                        } else if (ea) {
                            a = Math.abs(Math.sqrt(ha * ha + ga * ga));
                            var e = -ha,
                                b = -ga;
                            if (a > Ba && 2 < wa && !ta) {
                                a = e * qa;
                                var b = b * qa,
                                    f = h.getCenterX(),
                                    g = h.getCenterY(),
                                    m = h.ToMapDistX(a),
                                    l = h.ToMapDistY(b),
                                    b = f + m;
                                a = g + l;
                                oa = TGOS.fx.createAnimation({
                                    easing: TGOS.fx.easing.quadOut,
                                    type: window.requestAnimationFrame ?
                                        "ra" : "setTimeout",
                                    duration: qa,
                                    repeat: !1,
                                    onAnimation: function(a) {
                                        TGOS.moveMapTo_(k, f + m * a, g + l * a);
                                        h.RefreshMap(!1)
                                    },
                                    onEnd: function() {
                                        h.RefreshMap(!0);
                                        TGOS.TGEvent.trigger(k, "idle")
                                    }
                                });
                                oa.play()
                            } else h.RefreshMap(!0), TGOS.TGEvent.trigger(k, "idle")
                        } else h.RefreshMap(!0), TGOS.TGEvent.trigger(k, "idle");
                        clearInterval(Oa);
                        ka && TGOS.TGEvent.trigger(k, "dragend");
                        TGOS.Log("web", "A01", "")
                    }
                },
                Oa, Ca, wa = 0,
                ta = !0,
                pa = function(a) {
                    util.disableDefault(a);
                    oa && oa.stop();
                    ta = !1;
                    ga = ha = wa = 0;
                    ca = a.screenX;
                    da = a.screenY;
                    X = ca;
                    U = da;
                    Oa = setInterval(fa, 50);
                    d && (O = !0, ka = !1, va = 0, AttachEvent(M, "mouseup", Qa, !0), AttachEvent(M, "mousemove", Ha, !0), M.focus())
                },
                Ia = function(a) {
                    util.disableDefault(a);
                    d && (O = !0, L = a.screenX, I = a.screenY)
                },
                ia = function(d) {
                    util.disableDefault(d);
                    b && (O = !0, d = h.getCursorPosition(d), d = h.ToMapPoint(d.x, d.y), a.putMapLevel(a.getMapLevel() + 1), TGOS.moveMapTo_(k, d.x, d.y), h.RefreshMap(!0), TGOS.TGEvent.trigger(k, "idle"))
                },
                Ja = function(b) {
                    util.disableDefault(b);
                    if (e) {
                        O = !0;
                        var d = h.getCursorPosition(b),
                            f = h.getClientWidth() / 2,
                            g = h.getClientHeight() /
                            2;
                        h.FromMapPoint(f, g);
                        d = h.ToMapPoint(d.x, d.y);
                        f = h.getScale();
                        b = b.wheelDelta ? b.wheelDelta : -b.detail;
                        g = 0;
                        0 < b ? g = 1 : 0 > b && (g = -1);
                        a.putMapLevel(a.getMapLevel() + g);
                        b = h.getScale() / f;
                        d = new TGOS.TGPoint((h.getCenterX() - d.x) / b + d.x, (h.getCenterY() - d.y) / b + d.y);
                        G && (b = k.checkMapBoundsRestrict(G, d.x, d.y), null != b && (d.x = b.x, d.y = b.y));
                        TGOS.moveMapTo_(k, d.x, d.y);
                        h.RefreshMap(!0);
                        TGOS.TGEvent.trigger(k, "idle")
                    }
                },
                ua = 0,
                Ka = function(a) {
                    aa && (ua = 0)
                },
                La = function(a) {
                    function b(a, d) {
                        TGOS.moveMapTo_(k, h.getCenterX() + a, h.getCenterY() +
                            d);
                        h.RefreshMap(!1)
                    }
                    if (aa && !S) {
                        var d = h.getTransformation();
                        ua += 4;
                        24 < ua && (ua = 24);
                        var e = 1 / d.getScaleX() * ua,
                            f = 1 / d.getScaleY() * ua;
                        switch (a.keyCode) {
                            case 37:
                                b(-e, 0);
                                break;
                            case 38:
                                b(0, -f);
                                break;
                            case 39:
                                b(e, 0);
                                break;
                            case 40:
                                b(0, f);
                                break;
                            case 107:
                                d.putMapLevel(d.getMapLevel() + 1);
                                h.RefreshMap(!0);
                                break;
                            case 109:
                                d.putMapLevel(d.getMapLevel() + -1), h.RefreshMap(!0)
                        }
                    }
                };
            this.OpenCloseDblClick = function(a) {
                b && a || ((b = a) ? AttachEvent(M, "dblclick", ia, !1) : DetachEvent(M, "dblclick", ia, !1))
            };
            var Da = function(a) {
                if (S) {
                    var b =
                        TGOS.KeyboardEditor.NONE;
                    switch (a.keyCode) {
                        case 37:
                            b = TGOS.KeyboardEditor.LEFT;
                            break;
                        case 38:
                            b = TGOS.KeyboardEditor.UP;
                            break;
                        case 39:
                            b = TGOS.KeyboardEditor.RIGHT;
                            break;
                        case 40:
                            b = TGOS.KeyboardEditor.DOWN;
                            break;
                        case 46:
                            b = TGOS.KeyboardEditor.DEL
                    }
                    T && T.call(this, b, k)
                }
            };
            this.OpenCloseKeyboardEditor = function(a, b) {
                S && a || (S = a, T = b, a ? AttachEvent(M, "keydown", Da, !1) : DetachEvent(M, "keydown", Da, !1))
            };
            this.OpenCloseMove = function(a) {
                d && a || ((d = a) ? (AttachEvent(M, "mousedown", pa, !1), AttachEvent(M, "touchstart", ba, !1), AttachEvent(M,
                    "touchend", ma, !1), AttachEvent(M, "touchcancel", za, !1), AttachEvent(M, "touchleave", ma, !1), AttachEvent(M, "touchmove", Ea, !1)) : (DetachEvent(M, "mousedown", pa, !1), DetachEvent(M, "touchstart", ba, !1), DetachEvent(M, "touchend", ma, !1), DetachEvent(M, "touchcancel", za, !1), DetachEvent(M, "touchleave", ma, !1), DetachEvent(M, "touchmove", Ea, !1)))
            };
            this.OpenCloseWheel = function(a) {
                e && a || (a ? AttachEvent(M, "mousewheel", Ja, !1) : DetachEvent(M, "mousewheel", Ja, !1), e = a)
            };
            this.OpenClosekeyboard = function(a) {
                f && a || (f = a, !1 == a ? (DetachEvent(M,
                    "keydown", La, !1), DetachEvent(M, "keyup", Ka, !1)) : (AttachEvent(M, "keydown", La, !1), AttachEvent(M, "keyup", Ka, !1)))
            };
            this.ExitMapEvent = function() {
                e && DetachEvent(M, "mousewheel", Ja, !1);
                DetachEvent(M, "mousedown", pa, !1);
                DetachEvent(M, "mousedown", Ia, !1);
                b && DetachEvent(M, "dblclick", ia, !1);
                DetachEvent(M, "touchstart", ba, !1);
                DetachEvent(M, "touchend", ma, !1);
                DetachEvent(M, "touchcancel", za, !1);
                DetachEvent(M, "touchleave", ma, !1);
                DetachEvent(M, "touchmove", Ea, !1)
            };
            AttachEvent(M, "mousedown", pa, !1);
            AttachEvent(M, "mousedown",
                Ia, !1);
            AttachEvent(M, "contextmenu", function(a) {}, !1);
            AttachEvent(M, "keydown", La, !1);
            AttachEvent(M, "keyup", Ka, !1);
            b && AttachEvent(M, "dblclick", ia, !1);
            e && AttachEvent(M, "mousewheel", Ja, !1);
            AttachEvent(M, "touchstart", ba, !1);
            AttachEvent(M, "touchend", ma, !1);
            AttachEvent(M, "touchcancel", za, !1);
            AttachEvent(M, "touchleave", ma, !1);
            AttachEvent(M, "touchmove", Ea, !1)
        }
    };
    TGOS.MapScaleLevel = function(a, b, d, e, f) {
        function g(a) {
            for (var b = 0, b = 0; b < C.length - 1 && !(a < C[b + 1]); b++);
            if (b < C.length - 1) var d = C[b],
                e = C[b + 1],
                b = b + Math.log(a /
                    d) / Math.log(e / d);
            return b
        }

        function h(a) {
            var b = Math.floor(Math.max(0, Math.min(a, C.length - 2))),
                d = C[b];
            return d * Math.pow(C[b + 1] / d, a - b)
        }
        var k = 1,
            l = b,
            G = null,
            A = 256 / d,
            B = 256 / e,
            C = [];
        for (b = 0; b < f.length; b++) C.push(f[f.length - 1] / f[b]);
        C.reverse();
        var u = 1,
            w;
        this.FitLevel = function() {
            this.putMapLevel(Math.round(k))
        };
        this.setMapBoundsLevel = function(b) {
            if (w = b) b = a.getMapBase(), b.getClientHeight(), b = b.getClientWidth() / (w.right - w.left), b = Math.ceil(g(b / A)), b < G && (b = G), b > l && (b = l), this.setMapMinLevel(b)
        };
        this.getBaseScaleX =
            function() {
                return A
            };
        this.putBaseScaleX = function(a) {
            A = a
        };
        this.getBaseScaleY = function() {
            return B
        };
        this.putBaseScaleY = function(a) {
            B = a
        };
        this.getMapMinLevel = function() {
            return G
        };
        this.setMapMinMaxLevel = function(b, d) {
            l = null == d ? TGOS.MapTypeMaxZoomLevel[a.getCoordSys()][a.getMapTypeId()] : Math.min(d, TGOS.MapTypeMaxZoomLevel[a.getCoordSys()][a.getMapTypeId()]);
            G = null == b ? 0 : b;
            k > l ? (this.putMapLevel(l), a.setZoom(l)) : k < G && (this.putMapLevel(G), a.setZoom(G))
        };
        this.setMapMaxLevel = function(b) {
            l = null == b ? TGOS.MapTypeMaxZoomLevel[a.getCoordSys()][a.getMapTypeId()] :
                Math.min(b, TGOS.MapTypeMaxZoomLevel[a.getCoordSys()][a.getMapTypeId()]);
            k > l && (this.putMapLevel(l), a.setZoom(l))
        };
        this.getMapMaxLevel = function() {
            Math.min(l, TGOS.MapTypeMaxZoomLevel[a.getCoordSys()][a.getMapTypeId()]);
            return l
        };
        this.setMapMinLevel = function(b) {
            G = null == b ? 0 : b;
            k < G && (this.putMapLevel(G), a.setZoom(G))
        };
        this.getLevelNumber = function() {
            return this.getMapMaxLevel() - this.getMapMinLevel()
        };
        this.getMapLevel = function() {
            return k
        };
        this.putMapLevel = function(b) {
            var d = a.getMapBase().getCenterX(),
                e = a.getMapBase().getCenterY(),
                f = a.getBounds().toString(),
                g = TGOS.MapTypeMaxZoomLevel[a.getCoordSys()][a.getMapTypeId()],
                g = null == l ? g : g > l ? l : g,
                m = null == G ? 0 : G,
                p = b > g ? g : b < m ? m : b,
                s = k !== b;
            k = p;
            u = h(k);
            var q = a.getMapTypeId(),
                v = a.getCoordSys();
            TGOS.Log("web", "A02", TGOS.TGMapTypeIdCode[q]);
            "EPSG3826" == v || "EPSG3825" == v ? "TGOSMAP" == q && 13 == p && TGOS.Log("web", "A02", TGOS.TGMapTypeIdCode.NLSCMAP) : "EPSG3857" == v && "TGOSMAP" == q && 19 == p && TGOS.Log("web", "A02", TGOS.TGMapTypeIdCode.NLSCMAP);
            p = a.getMapBase().getCenterX();
            q = a.getMapBase().getCenterY();
            v = a.getBounds().toString();
            d == p && e == q || TGOS.TGEvent.trigger(a, "center_changed");
            f != v && TGOS.TGEvent.trigger(a, "bounds_changed");
            s && TGOS.TGEvent.trigger(a, "zoom_changed");
            w && (d = a.getMapBase().getCenterX(), e = a.getMapBase().getCenterY(), d = a.checkMapBoundsRestrict(w, d, e), null != d && (TGOS.moveMapTo_(a, d.x, d.y), a.getMapBase().RefreshMap(!1)));
            TGOS.TGEvent.trigger(a, "idle");
            return b > g || b < m ? !1 : !0
        };
        this.getScale = function() {
            return A * u
        };
        this.putScale = function(a) {
            this.putMapLevel(g(a / A))
        };
        this.getScaleX = function() {
            return A * u
        };
        this.getScaleY =
            function() {
                return B * u
            };
        this.getLevelScale = function(a) {
            return A * h(a)
        }
    };
    TGOS.TGTransStatus = {
        OK: "OK",
        INVALID_REQUEST: "INVALID_REQUEST"
    };
    TGOS.TGMaxZoomLevel = function() {
        this.getMaxZoomLevel = function(a, b, d) {
            return d.call(this, TGOS.MapTypeMaxZoomLevel[b][a])
        }
    };
    Proj4js.defs["EPSG:3826"] = "+title=TWD97 TM2+proj=tmerc +lat_0=0 +lon_0=121 +k=0.9999 +x_0=250000 +y_0=0 +ellps=GRS80 +units=\u516c\u5c3a +no_defs";
    Proj4js.defs["EPSG:3857"] = "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext  +no_defs";
    Proj4js.defs["EPSG:3825"] = "+title=\u4e8c\u5ea6\u5206\u5e36\uff1aTWD97 TM2 \u6f8e\u6e56 +proj=tmerc +lat_0=0 +lon_0=119 +k=0.9999 +x_0=250000 +y_0=0 +ellps=GRS80 +units=\u516c\u5c3a +no_defs";
    var g = new Proj4js.Proj("EPSG:3826"),
        h = new Proj4js.Proj("EPSG:3825"),
        k = new Proj4js.Proj("EPSG:3857"),
        l = new Proj4js.Proj("EPSG:4326");
    TGOS.TWD97toWGS84 = function(a, b) {
        var d = new Proj4js.Point(parseFloat(a), parseFloat(b));
        Proj4js.transform(g, l, d);
        return d
    };
    TGOS.WGS84toTWD97 = function(a, b) {
        var d = new Proj4js.Point(parseFloat(a),
            parseFloat(b));
        Proj4js.transform(l, g, d);
        return d
    };
    TGOS.TWD97_119toWGS84 = function(a, b) {
        var d = new Proj4js.Point(parseFloat(a), parseFloat(b));
        Proj4js.transform(h, l, d);
        return d
    };
    TGOS.TWD67toWGS84 = TGOS.TWD97_119toWGS84;
    TGOS.WGS84toTWD97_119 = function(a, b) {
        var d = new Proj4js.Point(parseFloat(a), parseFloat(b));
        Proj4js.transform(l, h, d);
        return d
    };
    TGOS.WGS84toTWD67 = TGOS.WGS84toTWD97_119;
    TGOS.TWD97toTWD97_119 = function(a, b) {
        var d = new Proj4js.Point(parseFloat(a), parseFloat(b));
        Proj4js.transform(g, h, d);
        return d
    };
    TGOS.TWD97toTWD67 = TGOS.TWD97toTWD97_119;
    TGOS.TWD97_119toTWD97 = function(a, b) {
        var d = new Proj4js.Point(parseFloat(a), parseFloat(b));
        Proj4js.transform(EPSG4325, g, d);
        return d
    };
    TGOS.TWD67toTWD97 = TGOS.TWD97_119toTWD97;
    TGOS.GooToWGS84 = function(a, b) {
        var d = new Proj4js.Point(parseFloat(a), parseFloat(b));
        Proj4js.transform(k, l, d);
        return d
    };
    TGOS.WGS84ToGoo = function(a, b) {
        var d = new Proj4js.Point(parseFloat(a), parseFloat(b));
        Proj4js.transform(l, k, d);
        return d
    };
    TGOS.TGTransformation = function() {
        this.twd97towgs84 = function(a,
            b) {
            var d = new Proj4js.Point(parseFloat(a), parseFloat(b));
            Proj4js.transform(g, l, d);
            this.transResult = new TGOS.TGPoint(d.x, d.y);
            TGOS.Log("web", "A06", "")
        };
        this.wgs84totwd97 = function(a, b) {
            var d = new Proj4js.Point(parseFloat(a), parseFloat(b));
            Proj4js.transform(l, g, d);
            this.transResult = new TGOS.TGPoint(d.x, d.y);
            TGOS.Log("web", "A06", "")
        };
        this.twd97_119towgs84 = function(a, b) {
            var d = new Proj4js.Point(parseFloat(a), parseFloat(b));
            Proj4js.transform(h, l, d);
            this.transResult = new TGOS.TGPoint(d.x, d.y);
            TGOS.Log("web",
                "A06", "")
        };
        this.wgs84totwd97_119 = function(a, b) {
            var d = new Proj4js.Point(parseFloat(a), parseFloat(b));
            Proj4js.transform(l, h, d);
            this.transResult = new TGOS.TGPoint(d.x, d.y);
            TGOS.Log("web", "A06", "")
        };
        this.transResult = null
    }
})();
TGOS.Graphic = function() {
    var a = function() {
        this.type = "TGGraphic"
    };
    TGOS.extend(TGOS.MVCObject, a);
    var d = a.prototype;
    d.triggerEvent = function(a, d) {
        var f = this.getMapBase();
        if (f) {
            var g = f.getPackageOffset(),
                h, k;
            a.changedTouches && a.changedTouches.length ? (h = a.changedTouches[0].clientX, k = a.changedTouches[0].clientY) : (h = a.clientX, k = a.clientY);
            var f = f.ToMapPoint(h - g.x, k - g.y),
                l;
            switch (this.getMap().getCoordSys()) {
                case TGOS.TGCoordSys.EPSG3857:
                    l = TGOS.GooToWGS84(f.x, f.y);
                    break;
                case TGOS.TGCoordSys.EPSG3826:
                    l = f;
                    break;
                case TGOS.TGCoordSys.EPSG3825:
                    l = f
            }
            f = new TGOS.TGMouseEvent(a);
            f.point = new TGOS.TGPoint(l.x, l.y);
            f.target = this;
            TGOS.TGEvent.trigger_(this, d, f)
        }
    };
    d.onMouseUp = function(a) {
        this.triggerEvent.call(this, a, "mouseup")
    };
    d.onMouseMove = function(a) {
        this.triggerEvent.call(this, a, "mousemove")
    };
    d.onMouseDown = function(a) {
        this.__downE = a;
        this.triggerEvent.call(this, a, "mousedown");
        var d = this;
        a = function() {
            d.onDrag.apply(d, arguments)
        };
        var f = function() {
            d.onDragEnd.apply(d, arguments)
        };
        this.elem.dragWrapper = a;
        this.elem.dragEndWrapper =
            f;
        this.elem.mousemove(a);
        this.elem.mouseup(f);
        this.elem.touchmove(a);
        this.elem.touchend(f)
    };
    d.onMouseOver = function(a) {
        this.triggerEvent.call(this, a, "mouseover")
    };
    d.onMouseOut = function(a) {
        this.triggerEvent.call(this, a, "mouseout")
    };
    d.onDblClick = function(a) {
        this.triggerEvent.call(this, a, "dblclick")
    };
    d.isSamePosition = function(a, d) {
        var f, g, h, k;
        a.changedTouches && d.changedTouches && a.changedTouches.length && d.changedTouches.length ? (f = a.changedTouches[0].screenX, g = a.changedTouches[0].screenY, h = d.changedTouches[0].screenX,
            k = d.changedTouches[0].screenY) : (f = a.screenX, g = a.screenY, h = d.screenX, k = d.screenY);
        return f === h && g === k
    };
    d.onDrag = function(a) {
        this.isSamePosition(this.__downE, a) || (this.elem.unmousemove(this.elem.dragWrapper), this.elem.unmouseup(this.elem.dragEndWrapper), this.elem.untouchmove(this.elem.dragWrapper), this.elem.untouchend(this.elem.dragEndWrapper))
    };
    d.onDragEnd = function(a) {
        this.elem.unmousemove(this.elem.dragWrapper);
        this.elem.unmouseup(this.elem.dragEndWrapper);
        this.elem.untouchmove(this.elem.dragWrapper);
        this.elem.untouchend(this.elem.dragEndWrapper);
        a.button == TGOS.TGEvent.RIGHTBUTTON ? this.triggerEvent.call(this, a, "rightclick") : this.triggerEvent.call(this, a, "click")
    };
    d.bindEvents = function() {
        if (this.elem = this.getEventElement()) {
            var a = this;
            this.elem.mouseup(function(d) {
                a.onMouseUp.apply(a, arguments)
            });
            this.elem.mousemove(function(d) {
                a.onMouseMove.apply(a, arguments)
            });
            this.elem.mousedown(function(d) {
                a.onMouseDown.apply(a, arguments)
            });
            this.elem.mouseover(function(d) {
                a.onMouseOver.apply(a, arguments)
            });
            this.elem.mouseout(function(d) {
                a.onMouseOut.apply(a, arguments)
            });
            this.elem.dblclick(function(d) {
                a.onDblClick.apply(a, arguments)
            });
            this.elem.touchstart(function(d) {
                a.onMouseDown.apply(a, arguments)
            });
            this.elem.touchend(function(d) {
                a.onMouseUp.apply(a, arguments)
            });
            this.elem.touchmove(function(d) {
                a.onMouseMove.apply(a, arguments)
            })
        }
    };
    d.annotation = null;
    return a
}();
TGOS.TGGraphic = function() {
    var a = function(a) {
            this.gs_ = [];
            a && (a.geometry instanceof TGOS.TGGeometry && (this.geometry = a.geometry), a.properties && (this.properties = a.properties), a.id && (this.id = a.id))
        },
        d = a.prototype;
    d.id = null;
    d.geometry = null;
    d.properties = null;
    d.style = null;
    d.gs_ = null;
    d.getGeometry = function() {
        return this.geoemtry
    };
    d.getProperty = function(a) {
        if (this.properties) return this.properties[a]
    };
    d.setProperty = function(a, d) {
        if (this.properties && a) {
            var f = this.properties[a];
            this.properties[a] = d;
            TGOS.TGEvent.trigger_(this,
                "setproperty", {
                    graphic: this,
                    name: a,
                    oldValue: f,
                    newValue: d
                })
        }
    };
    d.redraw = function(a) {
        this.clear();
        this.draw(a)
    };
    d.setGeometry = function(a) {
        if (!a) {
            var d = this.geometry;
            this.geometrty = a;
            TGOS.TGEvent.trigger_(this, "setgeometry", {
                graphic: this,
                oldGeometry: d,
                newGeometry: value
            })
        }
    };
    d.removeProperty = function(a) {
        if (this.properties && a && a in this.properties) {
            var d = this.properties[a];
            this.properties[a] = void 0;
            TGOS.TGEvent.trigger_(this, "removeproperty", {
                graphic: this,
                name: a,
                oldValue: d
            })
        }
    };
    d.setStyle = function(a) {
        this.style =
            a
    };
    d.clear = function() {
        for (var a = 0; a < this.gs_.length; a++) this.gs_[a].setMap(null);
        this.gs_ = []
    };
    d.bindEvents = function(a) {
        var d = this;
        TGOS.TGEvent.addListener(a, "mousedown", function(a) {
            TGOS.TGEvent.trigger_(d, "mousedown", a)
        });
        TGOS.TGEvent.addListener(a, "mouseup", function(a) {
            TGOS.TGEvent.trigger_(d, "mouseup", a)
        });
        TGOS.TGEvent.addListener(a, "mousemove", function(a) {
            TGOS.TGEvent.trigger_(d, "mousemove", a)
        });
        TGOS.TGEvent.addListener(a, "mouseover", function(a) {
            TGOS.TGEvent.trigger_(d, "mouseover", a)
        });
        TGOS.TGEvent.addListener(a,
            "dblclick",
            function(a) {
                TGOS.TGEvent.trigger_(d, "dblclick", a)
            });
        TGOS.TGEvent.addListener(a, "click", function(a) {
            TGOS.TGEvent.trigger_(d, "click", a)
        });
        TGOS.TGEvent.addListener(a, "rightclick", function(a) {
            TGOS.TGEvent.trigger_(d, "rightclick", a)
        });
        TGOS.TGEvent.addListener(a, "mouseout", function(a) {
            TGOS.TGEvent.trigger_(d, "mouseout", a)
        })
    };
    d.style_changed = function() {};
    d.ownStyle = null;
    d.draw = function(a, d) {
        if (a && (d = d ? d : this.geometry)) {
            var f = this.ownStyle || this.style;
            "function" == typeof f && (f = f(this));
            if (d instanceof TGOS.TGPoint) {
                var g = new TGOS.TGMarker(a, d, null, null, f);
                this.bindEvents(g);
                this.gs_.push(g)
            } else if (d instanceof TGOS.TGLineString) f = new TGOS.TGLine(a, d, f), this.bindEvents(g), this.gs_.push(f);
            else if (d instanceof TGOS.TGPolygon) g = new TGOS.TGFill(a, d, f), this.bindEvents(g), this.gs_.push(g);
            else if (d instanceof TGOS.TGMultiLineString) f = new TGOS.TGLine(a, d, f), this.bindEvents(f), this.gs_.push(f);
            else if (d instanceof TGOS.TGMultiPolygon) g = new TGOS.TGFill(a, d, f), this.bindEvents(g), this.gs_.push(g);
            else if (d instanceof TGOS.TGMultiPoint)
                for (g = d.getArray(), f = 0; f < g.length; f++) this.draw(a, g[f]);
            else if (d instanceof TGOS.TGGeometryCollection)
                for (g = d.getArray(), f = 0; f < g.length; f++) this.draw(a, g[f])
        }
    };
    TGOS.RegisterEvent(a, "setproperty removeproperty click dblclick mousedown mouseup mouseout mouseover mousemove rightclick".split(" "));
    return a
}();
(function() {
    function a(a) {
        a.cancelBubble = !0;
        a.stopPropagation && a.stopPropagation()
    }
    var d = function(a, b) {
            switch (a) {
                case TGOS.TGCoordSys.EPSG3857:
                    var d = TGOS.WGS84ToGoo(b.x, b.y);
                    break;
                case TGOS.TGCoordSys.EPSG3826:
                    d = b;
                    break;
                case TGOS.TGCoordSys.EPSG3825:
                    d = b
            }
            return d
        },
        b = function(a, b, g, h) {
            var k = "";
            g = g.getPath().getPath();
            var l = h ? d(b, g[g.length - 1]) : d(b, g[0]),
                l = a.FromMapPoint(l.x, l.y),
                k = k + "M" + l.x + " " + l.y;
            for (h = 0; h < g.length; h++) l = d(b, g[h]), l = a.FromMapPoint(l.x, l.y), k = k + "L" + l.x + " " + l.y;
            return k + " Z "
        };
    TGOS.TGFill =
        function(e, f, g) {
            var h = 0,
                k = 0,
                l = e,
                n = f,
                m = !0,
                p = 1,
                s = "#88ff88",
                q = "#000000",
                v = 1,
                z = 1,
                E = "none",
                F = 0,
                G = !0,
                A = null;
            this.getEventElement = function() {
                return null == l ? null : u
            };
            var B = this;
            this.endDrag = function(b) {
                if (2 < B.sclientx - b.clientX || 2 < B.sclienty - b.clientY || -2 > B.sclientx - b.clientX || -2 > B.sclienty - b.clientY) B.dragMoved = !0;
                a(b);
                DetachEvent(document.body, "mousemove", B.markMove, !0);
                DetachEvent(document.body, "mouseup", B.endDrag, !0);
                !B.dragMoved && B.editable && null != B.clickCallback && B.clickCallback.call(this, B)
            };
            this.markMove =
                function(b) {
                    a(b);
                    var d = l.getMapBase(),
                        e = d.getPackageOffset(),
                        f;
                    switch (l.getCoordSys()) {
                        case TGOS.TGCoordSys.EPSG3857:
                            f = d.ToMapPoint(b.clientX - e.x, b.clientY - e.y);
                            f = TGOS.GooToWGS84(f.x, f.y);
                            f = new TGOS.TGPoint(f.x, f.y);
                            break;
                        case TGOS.TGCoordSys.EPSG3826:
                            f = d.ToMapPoint(b.clientX - e.x, b.clientY - e.y);
                            break;
                        case TGOS.TGCoordSys.EPSG3825:
                            f = d.ToMapPoint(b.clientX - e.x, b.clientY - e.y)
                    }
                    b = f.x - B.spos.x;
                    f = f.y - B.spos.y;
                    d = n.getBounds();
                    n.transform(1, 0, 0, 1, b - (d.left - B.senv.left), f - (d.top - B.senv.top));
                    B.update();
                    B.editable &&
                        null != B.movedCallback && B.movedCallback.call(this, B)
                };
            this.markDrag = function(b) {
                a(b);
                B.sclientx = b.clientX;
                B.sclienty = b.clientY;
                B.dragMoved = !1;
                var d = l.getMapBase(),
                    e = d.getPackageOffset(),
                    f;
                switch (l.getCoordSys()) {
                    case TGOS.TGCoordSys.EPSG3857:
                        b = d.ToMapPoint(b.clientX - e.x, b.clientY - e.y);
                        b = TGOS.GooToWGS84(b.x, b.y);
                        f = new TGOS.TGPoint(b.x, b.y);
                        break;
                    case TGOS.TGCoordSys.EPSG3826:
                        f = d.ToMapPoint(b.clientX - e.x, b.clientY - e.y);
                        break;
                    case TGOS.TGCoordSys.EPSG3825:
                        f = d.ToMapPoint(b.clientX - e.x, b.clientY - e.y)
                }
                B.spos =
                    f;
                b = n.getBounds();
                B.senv = new TGOS.TGEnvelope(b.left, b.top, b.right, b.bottom);
                AttachEvent(document.body, "mousemove", B.markMove, !0);
                AttachEvent(document.body, "mouseup", B.endDrag, !0)
            };
            this.setClickCallback = function(a) {
                this.clickCallback = a
            };
            this.setMovedCallback = function(a) {
                this.movedCallback = a
            };
            this.getEditable = function() {
                return this.editable
            };
            this.setEditable = function(a) {
                this.editable = a;
                this.setDraggable(a)
            };
            this.getDraggable = function() {
                return this.draggable
            };
            this.setDraggable = function(a) {
                this.draggable =
                    a;
                u && (a && u ? u.mousedown(this.markDrag) : u.unmousedown(this.markDrag))
            };
            this.getVisible = function() {
                return G
            };
            this.setVisible = function(a) {
                switch (a) {
                    case !0:
                        G = !0;
                        u.show();
                        this.redraw();
                        this.update();
                        break;
                    case !1:
                        u.hide(), G = !1, this.redraw(), this.update()
                }
            };
            this.getMap = function() {
                return l
            };
            this.setMap = function(a) {
                u && u.remove();
                if (null == a) {
                    if (!l) return;
                    l.overlay.containing(this) && l.overlay.remove(this);
                    TGOS.TGEvent.clearInstanceListeners(this);
                    l = null
                }
                a instanceof TGOS.TGOnlineMap && (l = a)
            };
            this.getPath = function() {
                return n
            };
            this.setPath = function(a) {
                n = a;
                this.redraw(!0)
            };
            this.getBounds = function() {
                if (n) return n.getBounds()
            };
            this.setClickable = function(a) {
                "boolean" === typeof a && ((m = a) ? TGOS.TGEvent.releaseEventLock(this, "click") : TGOS.TGEvent.lockEvent(this, "click"), TGOS.TGEvent.trigger(this, "clickable_changed"))
            };
            this.getOpacity = function() {
                return p
            };
            this.setOpacity = function(a) {
                p = a;
                u && u.attr({
                    "fill-opacity": p
                })
            };
            this.getClickable = function() {
                return m
            };
            this.getFillColor = function() {
                return s
            };
            this.setFillColor = function(a) {
                s = a;
                u &&
                    u.attr({
                        fill: s
                    })
            };
            this.getStrokeColor = function() {
                return q
            };
            this.setStrokeColor = function(a) {
                q = a;
                u && u.attr({
                    stroke: a
                })
            };
            this.getStrokeWeight = function() {
                return v
            };
            this.setStrokeWeight = function(a) {
                v = a;
                u && u.attr({
                    "stroke-width": v
                })
            };
            this.getStrokeOpacity = function() {
                return z
            };
            this.setStrokeOpacity = function(a) {
                z = a;
                u && u.attr({
                    "stroke-opacity": z
                })
            };
            this.getZIndex = function() {
                return F
            };
            this.setZIndex = function(a, b) {
                "number" === typeof a && u && (F = parseFloat(a), l.overlay.updateArrayOrder(this), l.overlay.updateElementOrder(this),
                    TGOS.TGEvent.trigger(this, "zindex_changed"))
            };
            this.update = function() {
                if (n && l)
                    if (G) {
                        var a = l.getMapBase(),
                            b = this.getAnchorPoint(),
                            a = a.FromMapPoint(b.x, b.y);
                        u.transform("t" + (a.x - h) + "," + (a.y - k))
                    } else u.hide()
            };
            this.createPathStr = function() {
                var a = "",
                    e = l.getCoordSys(),
                    f = l.getMapBase();
                if (n instanceof TGOS.TGPolygon)
                    for (var a = a + b(f, e, n.getExteriorRing()), g = n.getInteriorRings(), h = 0; h < g.length; h++) a += b(f, e, g[h], !0);
                else if (n instanceof TGOS.TGMultiPolygon)
                    for (var a = "", m = 0; m < n.getLength(); m++)
                        for (g = n.getArray()[m],
                            a += b(f, e, g.getExteriorRing()), g = g.getInteriorRings(), h = 0; h < g.length; h++) a += b(f, e, g[h], !0);
                else if (n instanceof TGOS.TGCircle) {
                    for (var g = n.getVertexCount(), a = d(e, n.getCenter()), e = f.FromMapPoint(a.x, a.y), a = n.getRadius(), f = f.FromMapDistX(a), k = 0, h = e.x + Math.cos(0) * f, k = e.y + Math.sin(0) * f, a = "M" + Math.round(h) + " " + Math.round(k), p = m = 360 / g, u = 0; u < g; u++) k = p / 180 * Math.PI, h = Math.round(e.x + Math.cos(k) * f), k = Math.round(e.y + Math.sin(k) * f), a = a + "L" + h + " " + k, p += m;
                    a += " Z"
                } else n instanceof TGOS.TGEnvelope && (m = d(e, new TGOS.TGPoint(n.left,
                    n.top)), h = d(e, new TGOS.TGPoint(n.right, n.top)), a = d(e, new TGOS.TGPoint(n.right, n.bottom)), g = d(e, new TGOS.TGPoint(n.left, n.bottom)), e = f.FromMapPoint(m.x, m.y), h = f.FromMapPoint(h.x, h.y), a = f.FromMapPoint(a.x, a.y), f = f.FromMapPoint(g.x, g.y), a = "M" + Math.round(e.x) + " " + Math.round(e.y) + "L" + Math.round(h.x) + " " + Math.round(h.y) + "L" + Math.round(a.x) + " " + Math.round(a.y) + "L" + Math.round(f.x) + " " + Math.round(f.y) + " Z");
                return a
            };
            this.getAnchorPoint = function() {
                var a, b = l.getCoordSys();
                n instanceof TGOS.TGPolygon ? a = d(b,
                    n.getExteriorRing().getPath().getPath()[0]) : n instanceof TGOS.TGMultiPolygon ? a = d(b, n.getArray()[0].getExteriorRing().getPath().getPath()[0]) : n instanceof TGOS.TGCircle ? a = d(b, n.getCenter()) : n instanceof TGOS.TGEnvelope && (a = d(b, new TGOS.TGPoint(n.left, n.top)));
                return a
            };
            this.redraw = function(a) {
                if (u && l && n)
                    if (G) {
                        var b = l.getMapBase(),
                            d = l.getCoordSys(),
                            e = n.getBounds(d),
                            d = Math.abs(b.FromMapDistX(e.right - e.left)),
                            f = Math.abs(b.FromMapDistY(e.top - e.bottom)),
                            g = this.getAnchorPoint(),
                            m = l.getMapSize().width,
                            B =
                            l.getMapSize().height,
                            C;
                        l.getCoordSys() == TGOS.TGCoordSys.EPSG3857 ? (C = TGOS.WGS84ToGoo(e.left, e.top), e = TGOS.WGS84ToGoo(e.right, e.bottom), C = b.FromMapPoint(C.x, C.y), e = b.FromMapPoint(e.x, e.y)) : (C = b.FromMapPoint(e.left, e.top), e = b.FromMapPoint(e.right, e.bottom));
                        if (util.intersectRect({
                                left: C.x,
                                top: C.y,
                                right: e.x,
                                bottom: e.y
                            }, {
                                left: 0,
                                top: 0,
                                right: m,
                                bottom: B
                            })) {
                            u.show();
                            if (!a) {
                                if (A == b.getScale()) return;
                                A = b.getScale()
                            }
                            a = b.FromMapPoint(g.x, g.y);
                            h = a.x;
                            k = a.y;
                            a = this.createPathStr();
                            u.attr({
                                "stroke-width": v,
                                stroke: q,
                                "stroke-opacity": z,
                                fill: s,
                                "fill-opacity": p,
                                width: d,
                                height: f,
                                "stroke-dasharray": E,
                                path: a
                            })
                        } else u.hide()
                    } else u.hide()
            };
            this.getMapBase = function() {
                if (l) return l.getMapBase()
            };
            var C, u;
            this.init = function() {
                C = l.getPaper();
                u = C.path("");
                l.overlay.updateArrayOrder(this);
                l.overlay.updateElementOrder(this);
                l.overlay.push(this);
                this.bindEvents(u);
                this.redraw();
                this.update();
                this.setDraggable(this.draggable)
            };
            void 0 != g && ("undefined" != typeof g.visible && "boolean" == typeof g.visible && (G = g.visible), "undefined" !=
                typeof g.path && g.path instanceof TGOS.TGPolygon && (n = g.path), "undefined" != typeof g.clickable && "boolean" == typeof g.clickable && (m = g.clickable), "undefined" != typeof g.fillColor && "string" == typeof g.fillColor && (s = g.fillColor), "undefined" != typeof g.fillOpacity && "number" == typeof g.fillOpacity && (p = g.fillOpacity), "undefined" != typeof g.strokeWeight && "number" == typeof g.strokeWeight && (v = g.strokeWeight), "undefined" != typeof g.strokeOpacity && "number" == typeof g.strokeOpacity && (z = g.strokeOpacity), "undefined" != typeof g.zIndex &&
                "number" == typeof g.zIndex && (F = g.zIndex), "undefined" != typeof g.strokeColor && "string" == typeof g.strokeColor && (q = g.strokeColor), "undefined" != typeof g.strokeDasharray && "string" == typeof g.strokeDasharray && (E = g.strokeDasharray), "undefined" != typeof g.draggable && "boolean" == typeof g.draggable && this.setDraggable(g.draggable));
            this.init()
        };
    TGOS.extend(TGOS.Graphic, TGOS.TGFill);
    TGOS.RegisterEvent(TGOS.TGFill, "click mousedown mouseup mousemove mouseout mouseover dblclick rightclick zindex_changed".split(" "))
})();
(function() {
    function a(a) {
        a.cancelBubble = !0;
        a.stopPropagation && a.stopPropagation()
    }
    var d = function(a, d) {
        var f;
        switch (a) {
            case TGOS.TGCoordSys.EPSG3857:
                f = TGOS.WGS84ToGoo(d.x, d.y);
                break;
            case TGOS.TGCoordSys.EPSG3826:
                f = d;
                break;
            case TGOS.TGCoordSys.EPSG3825:
                f = d
        }
        return f
    };
    TGOS.TGLine = function(b, e, f) {
        var g = new TGOS.TGPoint(0, 0),
            h = b,
            k = e,
            l = !0,
            n = !0,
            m = "#000000",
            p = "none",
            s, q = 1,
            v = new TGOS.TGEnvelope(0, 0, 0, 0),
            z = 1,
            E = 0,
            F = 0,
            G = 0,
            A = this;
        this.getBounds = function() {
            this.calEnv();
            return v
        };
        this.endDrag = function(b) {
            if (2 <
                A.sclientx - b.clientX || 2 < A.sclienty - b.clientY || -2 > A.sclientx - b.clientX || -2 > A.sclienty - b.clientY) A.dragMoved = !0;
            a(b);
            DetachEvent(document.body, "mousemove", A.markMove, !0);
            DetachEvent(document.body, "mouseup", A.endDrag, !0);
            !A.dragMoved && A.editable && null != A.clickCallback && A.clickCallback.call(this, A)
        };
        this.markMove = function(b) {
            a(b);
            var d = h.getMapBase(),
                e = d.getPackageOffset(),
                f;
            switch (h.getCoordSys()) {
                case TGOS.TGCoordSys.EPSG3857:
                    f = d.ToMapPoint(b.clientX - e.x, b.clientY - e.y);
                    f = TGOS.GooToWGS84(f.x, f.y);
                    f =
                        new TGOS.TGPoint(f.x, f.y);
                    break;
                case TGOS.TGCoordSys.EPSG3826:
                    f = d.ToMapPoint(b.clientX - e.x, b.clientY - e.y);
                    break;
                case TGOS.TGCoordSys.EPSG3825:
                    f = d.ToMapPoint(b.clientX - e.x, b.clientY - e.y)
            }
            b = k.Envelope;
            k.transform(1, 0, 0, 1, f.x - A.spos.x - (b.left - A.senv.left), f.y - A.spos.y - (b.top - A.senv.top));
            A.update();
            A.editable && null != A.movedCallback && A.movedCallback.call(this, A)
        };
        this.markDrag = function(b) {
            A.sclientx = b.clientX;
            A.sclienty = b.clientY;
            A.dragMoved = !1;
            A.selected = !1;
            a(b);
            var d = h.getMapBase(),
                e = d.getPackageOffset(),
                f;
            switch (h.getCoordSys()) {
                case TGOS.TGCoordSys.EPSG3857:
                    b = d.ToMapPoint(b.clientX - e.x, b.clientY - e.y);
                    b = TGOS.GooToWGS84(b.x, b.y);
                    f = new TGOS.TGPoint(b.x, b.y);
                    break;
                case TGOS.TGCoordSys.EPSG3826:
                    f = d.ToMapPoint(b.clientX - e.x, b.clientY - e.y);
                    break;
                case TGOS.TGCoordSys.EPSG3825:
                    f = d.ToMapPoint(b.clientX - e.x, b.clientY - e.y)
            }
            A.spos = f;
            b = k.Envelope;
            A.senv = new TGOS.TGEnvelope(b.left, b.top, b.right, b.bottom);
            AttachEvent(document.body, "mousemove", A.markMove, !0);
            AttachEvent(document.body, "mouseup", A.endDrag, !0)
        };
        this.setClickCallback =
            function(a) {
                this.clickCallback = a
            };
        this.setMovedCallback = function(a) {
            this.movedCallback = a
        };
        this.getEditable = function() {
            return this.editable
        };
        this.setEditable = function(a) {
            this.editable = a;
            this.setDraggable(a)
        };
        this.getDraggable = function() {
            return this.draggable
        };
        this.setDraggable = function(a) {
            this.draggable = a;
            B && (a && B ? B.mousedown(this.markDrag) : B.unmousedown(this.markDrag))
        };
        this.getEventElement = function() {
            return B
        };
        this.calEnv = function() {
            for (var a = k.getPath(), b = Infinity, d = -Infinity, e = -Infinity, f = Infinity,
                    g = 0; g < a.length; g++) b = Math.min(b, a[g].x), f = Math.min(f, a[g].y), d = Math.max(d, a[g].x), e = Math.max(e, a[g].y);
            v.left = b;
            v.right = d;
            v.top = e;
            v.bottom = f;
            return new TGOS.TGEnvelope(b, e, d, e)
        };
        this.getMap = function() {
            return h
        };
        this.setMap = function(a) {
            B && B.remove();
            if (null == a) {
                if (!h) return;
                h.overlay.containing(this) && h.overlay.remove(this);
                TGOS.TGEvent.clearInstanceListeners(this);
                h = null
            }
            a instanceof TGOS.TGOnlineMap && (h = a, h.overlay.add(this))
        };
        this.getPath = function() {
            return k
        };
        this.setPath = function(a) {
            a instanceof
            TGOS.TGLineString && (k = a, this.redraw())
        };
        this.getVisible = function() {
            return l
        };
        this.setVisible = function(a) {
            switch (a) {
                case !0:
                    l = !0;
                    this.update();
                    this.redraw();
                    break;
                case !1:
                    l = !1, this.update(), this.redraw()
            }
        };
        this.getClickable = function() {
            return n
        };
        this.setClickable = function(a) {
            "boolean" === typeof a && ((n = a) ? TGOS.TGEvent.releaseEventLock(this, "click") : TGOS.TGEvent.lockEvent(this, "click"), TGOS.TGEvent.trigger(this, "clickable_changed"))
        };
        this.getStrokeColor = function() {
            return m
        };
        this.setStrokeColor = function(a) {
            m =
                a;
            B && B.attr({
                stroke: m
            })
        };
        this.getStrokeOpacity = function() {
            return q
        };
        this.setStrokeOpacity = function(a) {
            q = a;
            B && B.attr({
                "stroke-opacity": q
            })
        };
        this.getStrokeWeight = function() {
            return z
        };
        this.setStrokeWeight = function(a) {
            z = a;
            B && B.attr({
                "stroke-width": z
            })
        };
        this.getZIndex = function() {
            return E
        };
        this.setZIndex = function(a, b) {
            "number" === typeof a && B && (E = parseFloat(a), h.overlay.updateArrayOrder(this), h.overlay.updateElementOrder(this), TGOS.TGEvent.trigger(this, "zindex_changed"))
        };
        this.redraw = function() {
            if (k)
                if (l) {
                    var a =
                        h.getMapBase(),
                        a = a.FromMapPoint(100, 100);
                    if (a.x || a.y) {
                        var b = k.getBounds(),
                            e, a = h.getMapBase(),
                            f = k instanceof TGOS.TGMultiLineString ? k.getArray()[0].getPath() : k.getPath(),
                            n = a.FromMapPoint(f[0]);
                        Math.abs(n.x - g.x);
                        Math.abs(n.y - g.y);
                        g.x = n.x;
                        g.y = n.y;
                        a.FromMapPoint(b.left, b.top);
                        a.FromMapPoint(b.right, b.right);
                        a.getClientWidth();
                        a.getClientHeight();
                        var s = h.getMapSize().width,
                            v = h.getMapSize().height,
                            A, n = h.getCoordSys();
                        n == TGOS.TGCoordSys.EPSG3857 ? (A = TGOS.WGS84ToGoo(b.left, b.top), b = TGOS.WGS84ToGoo(b.right,
                            b.bottom), A = a.FromMapPoint(A.x, A.y), b = a.FromMapPoint(b.x, b.y)) : (A = a.FromMapPoint(b.left, b.top), b = a.FromMapPoint(b.right, b.bottom));
                        if (util.intersectRect({
                                left: A.x,
                                top: A.y,
                                right: b.x,
                                bottom: b.y
                            }, {
                                left: 0,
                                top: 0,
                                right: s,
                                bottom: v
                            })) {
                            B.show();
                            e = d(n, f[0]);
                            A = a.FromMapPoint(e.x, e.y);
                            F = A.x;
                            G = A.y;
                            s = k instanceof TGOS.TGMultiLineString ? k.getArray() : [k];
                            v = "";
                            for (b = 0; b < s.length; b++)
                                for (f = s[b].getPath(), A = d(n, f[0]), A = a.FromMapPoint(A.x, A.y), v = v + "M" + A.x + "," + A.y, A = 1; A < f.length; A++) {
                                    e = f[A];
                                    var C;
                                    0 < A && (C = f[A - 1]);
                                    e = d(n,
                                        e);
                                    e = a.FromMapPoint(e.x, e.y);
                                    if (C) var E = d(n, C),
                                        E = a.FromMapPoint(E.x, E.y),
                                        v = v + "L" + (E.x + e.x) / 2 + "," + (E.y + e.y) / 2;
                                    v = v + "L" + e.x + "," + e.y
                                }
                            B.attr({
                                "stroke-opacity": q,
                                stroke: m,
                                "stroke-width": z,
                                "stroke-dasharray": p,
                                path: v
                            })
                        } else B.hide()
                    }
                } else B.hide()
        };
        this.update = function() {
            if (k)
                if (l) {
                    k.getBounds();
                    var a = h.getMapBase(),
                        b = (k instanceof TGOS.TGMultiLineString ? k.getArray()[0].getPath() : k.getPath())[0],
                        b = d(h.getCoordSys(), b),
                        a = a.FromMapPoint(b.x, b.y);
                    B.transform("t" + (a.x - F) + "," + (a.y - G))
                } else B.hide()
        };
        var B, C;
        this.init = function() {
            h.getMapBase().getHObject();
            C = h.getPaper();
            s && (this.marker = C.createMarker(icons));
            B = C.path();
            this.marker && (B.node.style.marker = "url(#" + this.marker + ")");
            h.overlay.add(this);
            this.bindEvents(B);
            this.redraw();
            this.update();
            this.setDraggable(this.draggable)
        };
        this.getMapBase = function() {
            if (h) return h.getMapBase()
        };
        this.getEventElement = function() {
            return null == h ? null : B
        };
        if (void 0 != f) {
            f.map instanceof TGOS.TGOnlineMap && this.setMap(f.map);
            if ("undefined" != typeof f.visible && "boolean" == typeof f.visible) switch (f.visible) {
                case !0:
                    l = !0;
                    break;
                case !1:
                    l = !1
            }
            "undefined" != typeof f.path && f.path instanceof TGOS.TGLineString && this.setPath(f.path);
            "undefined" != typeof f.clickable && "boolean" == typeof f.clickable && (n = f.clickable);
            "undefined" != typeof f.strokeWeight && "number" == typeof f.strokeWeight && (z = f.strokeWeight);
            "undefined" != typeof f.strokeOpacity && "number" == typeof f.strokeOpacity && (q = f.strokeOpacity);
            "undefined" != typeof f.zIndex && "number" == typeof f.zIndex && (E = f.zIndex);
            "undefined" != typeof f.strokeColor && "string" == typeof f.strokeColor &&
                (m = f.strokeColor);
            "undefined" != typeof f.strokeDasharray && "string" == typeof f.strokeDasharray && (p = f.strokeDasharray);
            "undefined" != typeof f.draggable && "boolean" == typeof f.draggable && this.setDraggable(f.draggable);
            f && f.icons && (s = f.icons)
        }
        this.init()
    };
    TGOS.extend(TGOS.Graphic, TGOS.TGLine);
    TGOS.RegisterEvent(TGOS.TGLine, "click mousedown mouseup mousemove mouseout mouseover dblclick rightclick zindex_changed".split(" "))
})();
(function() {
    TGOS.TGGroundOverlay = function(a, d, b, e) {
        var f = null,
            g = 1,
            h = null,
            k = null,
            l = new TGOS.TGEnvelope(0, 0, 0, 0),
            n, m, p = 0,
            s = !0,
            q;
        this.getMap = function() {
            return f
        };
        this.getEventElement = function() {
            return m
        };
        this.setMap = function(a) {
            m && m.remove();
            if (null == a) f && (f.overlay.containing(this) && f.overlay.remove(this), TGOS.TGEvent.clearInstanceListeners(this), f = null);
            else if (a instanceof TGOS.TGOnlineMap && !a.overlay.containing(this)) {
                f = a;
                q = f.getCoordSys();
                switch (q) {
                    case TGOS.TGCoordSys.EPSG3857:
                        a = TGOS.WGS84ToGoo(k.left,
                            k.top);
                        var b = TGOS.WGS84ToGoo(k.right, k.bottom);
                        l.left = a.x;
                        l.top = a.y;
                        l.right = b.x;
                        l.bottom = b.y;
                        break;
                    case TGOS.TGCoordSys.EPSG3826:
                        l = k;
                        break;
                    case TGOS.TGCoordSys.EPSG3825:
                        l = k
                }
                n = f.getPaper();
                m = n.image(h.getUrl(), 10, 10, 80, 80);
                m.attr({
                    opacity: g
                });
                f.overlay.add(this);
                this.bindEvents(m);
                this.redraw();
                this.update()
            }
        };
        this.getClickable = function() {
            return s
        };
        this.setClickable = function(a) {
            "boolean" === typeof a && ((s = a) ? TGOS.TGEvent.releaseEventLock(this, "click") : TGOS.TGEvent.lockEvent(this, "click"), TGOS.TGEvent.trigger(this,
                "clickable_changed"))
        };
        this.getOpacity = function() {
            return g
        };
        this.setZIndex = function(a) {
            "number" === typeof a && m && (p = parseFloat(a), f.overlay.updateArrayOrder(this), f.overlay.updateElementOrder(this), TGOS.TGEvent.trigger(this, "zindex_changed"))
        };
        this.getMapBase = function() {
            if (f) return f.getMapBase()
        };
        this.getZIndex = function() {
            return p
        };
        this.setOpacity = function(a) {
            "number" == typeof a && 1 > a && 0 <= a && (g = a, m && m.attr({
                opacity: a
            }), this.redraw(), this.update())
        };
        this.getImage = function() {
            return h
        };
        this.setImage = function(a) {
            a instanceof
            TGOS.TGImage && (h = a, m && (m.attr({
                src: h.getUrl()
            }), this.redraw(), this.update()))
        };
        this.getBounds = function() {
            return k
        };
        this.setBounds = function(a) {
            if (a instanceof TGOS.TGEnvelope) {
                k = a;
                if (f) switch (q) {
                    case TGOS.TGCoordSys.EPSG3857:
                        a = TGOS.WGS84ToGoo(k.left, k.top);
                        var b = TGOS.WGS84ToGoo(k.right, k.bottom);
                        l.left = a.x;
                        l.top = a.y;
                        l.right = b.x;
                        l.bottom = b.y;
                        break;
                    case TGOS.TGCoordSys.EPSG3826:
                        l = k;
                        break;
                    case TGOS.TGCoordSys.EPSG3825:
                        l = k
                }
                this.redraw();
                this.update()
            }
        };
        this.redraw = function() {
            if (f) {
                var a = f.getMapBase().FromMapPoint(100,
                    100);
                if (a.x || a.y) {
                    f.getMapBase().FromMapPoint(l.left, l.top);
                    var a = Math.abs(f.getMapBase().FromMapDistX(Math.abs(l.right - l.left))),
                        b = Math.abs(f.getMapBase().FromMapDistY(Math.abs(l.bottom - l.top)));
                    m.attr({
                        width: a,
                        height: b
                    })
                }
            }
        };
        this.update = function() {
            if (f) {
                var a = f.getMapBase().FromMapPoint(l.left, l.top);
                m.attr({
                    x: a.x,
                    y: a.y
                })
            }
        };
        this.setImage(d);
        this.setBounds(b);
        this.setMap(a);
        this.setZIndex(p);
        this.setOpacity(e);
        this.redraw()
    };
    TGOS.extend(TGOS.Graphic, TGOS.TGGroundOverlay);
    TGOS.RegisterEvent(TGOS.TGGroundOverlay,
        "zindex_changed click dblclick rightclick mousemove mousedown mouseup mouseover mouseout".split(" "))
})();
TGOS.TGGeometry = function() {};
TGOS.Geometry = TGOS.TGGeometry;
TGOS.TGGeometry.prototype.srs = null;
TGOS.TGGeometry.prototype.lon = NaN;
TGOS.TGGeometry.prototype.lat = NaN;
TGOS.TGGeometry.prototype.getType = function() {
    return this.type
};
TGOS.TGGeometry.prototype.fromWKT = function(a) {
    var d = function(a, b) {
            return a.slice(0, b.length) == b
        },
        b = /^\s*\(?(.*?)\)?\s*$/,
        e = /\s+/,
        f = /\s*,\s*/,
        g = /\)\s*,\s*\(/,
        h = /\)\s*\)\s*,\s*\(\s*\(/,
        k = /^\s*(\w+)\s*\(\s*(.*)\s*\)\s*$/.exec(a);
    if (!k || 0 >= k.length) throw "Invalid WKT : " + a;
    var l = k[1].toUpperCase();
    a = k[2];
    if (d(l, "POINT")) return d = a.split(e), {
        type: "POINT",
        geometry: new TGOS.TGPoint(parseFloat(d[0]), parseFloat(d[1]))
    };
    if (d(l, "LINESTRING")) {
        k = [];
        a = a.split(f);
        for (h = 0; h < a.length; h++) d = a[h].split(e), k.push(new TGOS.TGPoint(parseFloat(d[0]),
            parseFloat(d[1])));
        if (d = new TOGS.TGLineString(k)) return {
            type: "LINESTRING",
            geometry: d
        }
    } else if (d(l, "POLYGON")) {
        for (var n = b.exec(a)[1].split(g), m = [], p = 0; p < n.length; p++) {
            a = n[p].split(f);
            k = [];
            for (h = 0; h < a.length; h++) d = a[h].split(e), k.push(new TGOS.TGPoint(parseFloat(d[0]), parseFloat(d[1])));
            d = new TGOS.TGLineString(k);
            d = new TGOS.TGLinearRing(d);
            m.push(d)
        }
        if (d = new TGOS.TGPolygon(m)) return {
            type: "POLYGON",
            geometry: d
        }
    } else {
        if (d(l, "MULTIPOINT")) {
            g = new sg.geometry.MultiPoint;
            f = a.split(f);
            g = [];
            for (h = 0; h < f.length; h++) d =
                b.exec(f[h])[1].split(e), g.push(new TGOS.TGPoint(parseFloat(d[0]), parseFloat(d[1])));
            g = TGOS.TGMultiPoint(g);
            return {
                type: "MULTIPOINT",
                geometry: g
            }
        }
        if (d(l, "MULTILINESTRING")) {
            b = b.exec(a)[1].split(g);
            g = [];
            for (l = 0; l < b.length; l++) {
                k = [];
                a = b[l].split(f);
                for (h = 0; h < a.length; h++) d = a[h].split(e), k.push(new TGOS.TGPoint(parseFloat(d[0]), parseFloat(d[1])));
                (d = new TOGS.TGLineString(k)) && g.push(d)
            }
            return {
                type: "MULTILINESTRING",
                geometry: new TGOS.TGMultiLineString(g)
            }
        }
        if (d(l, "MULTIPOLYGON")) {
            for (var l = b.exec(a)[1].split(h),
                    s = [], q = 0; q < l.length; q++) {
                n = b.exec(l[q])[1].split(g);
                m = [];
                for (p = 0; p < n.length; p++) {
                    a = n[p].split(f);
                    k = [];
                    for (h = 0; h < a.length; h++) d = a[h].split(e), k.push(new TGOS.TGPoint(parseFloat(d[0]), parseFloat(d[1])));
                    d = new TGOS.TGLineString(k);
                    d = new TGOS.TGLinearRing(d);
                    m.push(d)
                }(d = new TGOS.TGPolygon(m)) && s.push(d)
            }
            return {
                type: "MULTIPOLYGON",
                geometry: new TGOS.TGMultiPolygon(s)
            }
        }
        if (d(l, "GEOMETRYCOLLECTION")) return null;
        throw "Unknown WKT geometry type : " + l;
    }
};
TGOS.TGGeometry.prototype.toWkt = function(a) {
    if (a.toWkt) return a.toWkt()
};
TGOS.TGGeometry.PointToLineSegment = function(a, d, b) {
    var e = 0,
        f = b.x - d.x,
        g = b.y - d.y,
        h = ((a.x - d.x) * f + (a.y - d.y) * g) / (f * f + g * g);
    0 > h || d.x == b.x && d.y == b.y ? (e = -1, f = d.x, d = d.y) : 1 < h ? (e = 1, f = b.x, d = b.y) : (f = d.x + h * f, d = d.y + h * g);
    b = a.x - f;
    a = a.y - d;
    a = Math.sqrt(b * b + a * a);
    return {
        fit: e,
        point: {
            x: f,
            y: d
        },
        distance: a
    }
};
TGOS.TGGeometry.Transform = function(a, d) {
    if (a && d) {
        if (a instanceof TGOS.TGPoint) {
            var b = d(a.x, a.y);
            return new TGOS.TGPoint(b.x, b.y)
        }
        if (a instanceof TGOS.TGLineString) {
            for (var e = [], f = 0; f < a.path.length; f++) b = a.path[f], b = d(b.x, b.y), e.push(new TGOS.TGPoint(b.x, b.y));
            return new TGOS.TGLineString(e)
        }
        if (a instanceof TGOS.TGLinearRing) return f = TGOS.TGGeometry.Transform(a.linestring, d), new TGOS.TGLinearRing(f);
        if (a instanceof TGOS.TGEnvelope) return f = new TGOS.TGPoint(a.left, a.top), e = new TGOS.TGPoint(a.right,
            a.bottom), f = TGOS.TGGeometry.Transform(f, d), e = TGOS.TGGeometry.Transform(e, d), new TGOS.TGEnvelope(f.x, f.y, e.x, e.y);
        if (a instanceof TGOS.TGCircle) return f = new TGOS.TGCircle, b = a.getCenter(), e = a.getRadius(), b = TGOS.TGGeometry.Transform(b, d), f.setCenter(b), f.setRadius(e), f;
        if (a instanceof TGOS.TGPolygon) {
            b = [];
            for (f = 0; f < a.rings_.length; f++) e = a.rings_[f], e = TGOS.TGGeometry.Transform(e, d), b.push(e);
            return new TGOS.TGPolygon(b)
        }
    }
};
TGOS.TGPoint = function(a, d, b) {
    this.srs = b ? b : null;
    this.srs == TGOS.TGCoordSys.EPSG3857 && (this.lon = parseFloat(a), this.lat = parseFloat(d));
    this.Envelope = null;
    this.x = parseFloat(a);
    this.y = parseFloat(d)
};
TGOS.extend(TGOS.TGGeometry, TGOS.TGPoint);
TGOS.TGPoint.prototype.transform = function(a, d, b, e, f, g) {
    var h = this.x,
        k = this.y;
    this.x = h * a + k * b + f;
    this.y = h * d + k * e + g
};
TGOS.TGPoint.prototype.nearestPoint = function(a, d, b) {
    var e = null,
        f = null,
        g = Infinity;
    void 0 !== d && (g = d);
    d = !0;
    void 0 !== b.snapPoint && (d = b.snapPoint);
    if (a instanceof TGOS.TGPoint && d) {
        b = this.x;
        d = this.y;
        var h = a.x - b;
        a = a.y - d;
        a = Math.sqrt(h * h + a * a);
        a <= g && (e = new TGOS.TGPoint(b, d), f = a)
    }
    return null != e ? {
        point: e,
        distance: f
    } : null
};
TGOS.TGPoint.prototype.isEmpty = function() {
    return IsNumeric(this.x) || IsNumeric(this.y) ? !0 : !1
};
TGOS.TGPoint.prototype.setEmpty = function() {
    this.y = this.x = null
};
TGOS.TGPoint.prototype.isSimple = function() {
    return !0
};
TGOS.TGPoint.prototype.getBounds = function() {
    return new TGOS.TGEnvelope(this.x, this.y, this.x, this.y)
};
TGOS.TGPoint.prototype.type = "TGPoint";
TGOS.TGPoint.prototype.toGeoJson = function() {
    return {
        type: "Point",
        coordinates: [this.x, this.y]
    }
};
TGOS.TGPoint.prototype.toWkt = function() {
    return "POINT(" + this.x + " " + this.y + ")"
};
TGOS.TGSize = function(a, d) {
    this.width = parseFloat(a);
    this.height = parseFloat(d)
};
TGOS.TGEnvelope = function(a, d, b, e) {
    this.left = parseFloat(a);
    this.right = parseFloat(b);
    this.top = parseFloat(d);
    this.bottom = parseFloat(e);
    this.renderer = null
};
TGOS.extend(TGOS.TGGeometry, TGOS.TGEnvelope);
TGOS.TGEnvelope.prototype.type = "TGEnvelope";
TGOS.TGEnvelope.prototype.Extend = function(a) {
    a.constructor == TGOS.TGEnvelope && (!a.left || null != this.left && this.left > a.left != this.right > this.left || (this.left = a.left), !a.top || null != this.top && this.top < a.top != this.bottom < this.top || (this.top = a.top), !a.right || null != this.right && this.right < a.right != this.left < this.right || (this.right = a.right), !a.bottom || null != this.bottom && this.bottom > a.bottom != this.top > this.bottom || (this.bottom = pEnv.bottom))
};
TGOS.TGEnvelope.prototype.Shrink = function(a) {
    a.constructor == TGOS.TGEnvelope && (!a.left || null != this.left && this.left < a.left != this.right > this.left || (this.left = a.left), !a.top || null != this.top && this.top > a.top != this.bottom < this.top || (this.top = a.top), !a.right || null != this.right && this.right > a.right != this.left < this.right || (this.right = a.right), !a.bottom || null != this.bottom && this.bottom < a.bottom != this.top > this.bottom || (this.bottom = a.bottom))
};
TGOS.TGEnvelope.prototype.toString = function() {
    return Math.min(this.left, this.right) + " " + Math.min(this.top, this.bottom) + "," + Math.max(this.left, this.right) + " " + Math.max(this.top, this.bottom)
};
TGOS.TGEnvelope.prototype.nearestPoint = function(a, d, b) {
    var e = null,
        f = null,
        g = Infinity;
    void 0 !== d && (g = d);
    if (a instanceof TGOS.TGPoint) {
        d = new TGOS.TGPoint(this.left, this.top);
        var h = new TGOS.TGPoint(this.right, this.top),
            k = new TGOS.TGPoint(this.right, this.bottom),
            l = new TGOS.TGPoint(this.left, this.bottom),
            n = new TGOS.TGPoint(this.left, this.top);
        d = new TGOS.TGLineString([d, h, k, l, n]);
        d.nearestPoint && (a = d.nearestPoint(a, g, b), null != a && (null != a.point && (e = a.point), null != a.distance && (f = a.distance)))
    }
    return null !=
        e ? {
            point: e,
            distance: f
        } : null
};
TGOS.TGEnvelope.prototype.transform = function(a, d, b, e, f, g) {
    var h = new TGOS.TGPoint(this.left, this.top),
        k = new TGOS.TGPoint(this.right, this.bottom);
    h.transform(a, d, b, e, f, g);
    k.transform(a, d, b, e, f, g);
    this.left = h.x;
    this.top = h.y;
    this.right = k.x;
    this.bottom = k.y;
    this.renderer && this.renderer.redraw()
};
TGOS.TGEnvelope.prototype.isEmpty = function() {
    var a = IsNumeric(this.left),
        d = IsNumeric(this.top),
        b = IsNumeric(this.right),
        e = IsNumeric(this.bottom);
    return !0 == a && !0 == d && !0 == b && !0 == e ? !0 : !1
};
TGOS.TGEnvelope.prototype.setEmpty = function() {
    this.bottom = this.right = this.top = this.left = null
};
TGOS.TGEnvelope.prototype.getLeft = function() {
    return this.left
};
TGOS.TGEnvelope.prototype.getTop = function() {
    return this.top
};
TGOS.TGEnvelope.prototype.getRight = function() {
    return this.right
};
TGOS.TGEnvelope.prototype.getBottom = function() {
    return this.bottom
};
TGOS.TGEnvelope.prototype.setLeft = function(a) {
    this.left = a
};
TGOS.TGEnvelope.prototype.setTop = function(a) {
    this.top = a
};
TGOS.TGEnvelope.prototype.setRight = function(a) {
    this.right = a
};
TGOS.TGEnvelope.prototype.setBottom = function(a) {
    this.bottom = a
};
TGOS.TGEnvelope.prototype.getWidth = function() {
    return Math.abs(this.left - this.right)
};
TGOS.TGEnvelope.prototype.getHeight = function() {
    return Math.abs(this.top - this.bottom)
};
TGOS.TGEnvelope.prototype.getBounds = function() {
    return this
};
TGOS.TGEnvelope.prototype.contains = function(a) {
    return a.x >= this.left && a.x <= this.right && a.y >= this.bottom && a.y <= this.top
};
TGOS.TGLineString = function(a) {
    this.path = a;
    this.renderer = null;
    this.Envelope = new TGOS.TGEnvelope(0, 0, 0, 0);
    this.updateEnvelope()
};
TGOS.extend(TGOS.TGGeometry, TGOS.TGLineString);
TGOS.TGLineString.prototype.type = "TGLineString";
TGOS.TGLineString.prototype.nearestPoint = function(a, d, b) {
    var e = null,
        f = null,
        g = Infinity;
    void 0 !== d && (g = d);
    var h = !0;
    void 0 !== b.snapEdge && (h = b.snapEdge);
    d = !0;
    void 0 !== b.snapVertex && (d = b.snapVertex);
    if (a instanceof TGOS.TGPoint && (h || d)) {
        if (d) {
            var k = a.x,
                l = a.y;
            b = Infinity;
            var n;
            for (d = 0; d < this.path.length; d++) {
                var m = this.path[d].x,
                    p = this.path[d].y,
                    s = Math.sqrt((k - m) * (k - m) + (l - p) * (l - p));
                s < b && (b = s, n = new TGOS.TGPoint(m, p))
            }
            b <= g && (e = new TGOS.TGPoint(n.x, n.y), f = b)
        }
        if (h) {
            b = Infinity;
            for (d = 0; d < this.path.length - 1; d++) h =
                this.path[d], k = this.path[d + 1], h = TGOS.TGGeometry.PointToLineSegment(a, h, k), 0 == h.fit && h.distance < b && (b = h.distance, n = new TGOS.TGPoint(h.point.x, h.point.y));
            b <= g && (null != f ? b < f && (e = new TGOS.TGPoint(n.x, n.y), f = b) : (e = new TGOS.TGPoint(n.x, n.y), f = b))
        }
    }
    return null != e ? {
        point: e,
        distance: f
    } : null
};
TGOS.TGLineString.prototype.getPath = function() {
    return this.path
};
TGOS.TGLineString.prototype.setPath = function(a) {
    this.path = a;
    this.updateEnvelope();
    this.renderer && this.renderer.redraw()
};
TGOS.TGLineString.prototype.isEmpty = function() {};
TGOS.TGLineString.prototype.setEmpty = function() {};
TGOS.TGLineString.prototype.getLength = function() {
    for (var a = 0, d = 0, b = d = 0, e = 0; e < this.path.length - 1; e++) d = this.path[e].x - this.path[e + 1].x, b = this.path[e].y - this.path[e + 1].y, d = Math.sqrt(d * d + b * b), a += d;
    return a
};
TGOS.TGLineString.prototype.startPoint = function() {
    return this.path[0]
};
TGOS.TGLineString.prototype.endPoint = function() {
    return this.path[this.path.length - 1]
};
TGOS.TGLineString.prototype.isSimple = function() {};
TGOS.TGLineString.prototype.transform = function(a, d, b, e, f, g) {
    for (var h = 0; h < this.path.length; h++) this.path[h].transform(a, d, b, e, f, g);
    this.updateEnvelope();
    this.renderer && this.renderer.redraw()
};
TGOS.TGLineString.prototype.value = function(a) {
    return this.path[a]
};
TGOS.TGLineString.prototype.getBounds = function() {
    return this.Envelope
};
TGOS.TGLineString.prototype.isClosed = function() {
    return this.path[0].x == this.path[this.path.length - 1].x && this.path[0].y == this.path[this.path.length - 1].y ? !0 : !1
};
TGOS.TGLineString.prototype.getEnvelope = function() {
    return this.Envelope
};
TGOS.TGLineString.prototype.updateEnvelope = function() {
    for (var a = this.path, d = Infinity, b = -Infinity, e = -Infinity, f = Infinity, g = 0; g < a.length; g++) d = Math.min(d, a[g].x), f = Math.min(f, a[g].y), b = Math.max(b, a[g].x), e = Math.max(e, a[g].y);
    this.Envelope.setLeft(d);
    this.Envelope.setRight(b);
    this.Envelope.setTop(e);
    this.Envelope.setBottom(f)
};
TGOS.TGLineString.prototype.toGeoJson = function() {
    for (var a = [], d = 0; d < this.path.length; d++) a.push([this.path[d].x, this.path[d].y]);
    return {
        type: "LineString",
        coordinates: a
    }
};
TGOS.TGLineString.prototype.toWkt = function() {
    for (var a = "LINESTRING(", d = 0; d < this.path.length; d++) a += this.path[d].x + " " + this.path[d].y + ",";
    "," == a[a.length - 1] && (a = a.substring(0, a.length - 1));
    return a + ")"
};
TGOS.TGLinearRing = function(a) {
    this.linestring = a;
    this.renderer = null
};
TGOS.extend(TGOS.TGGeometry, TGOS.TGLinearRing);
TGOS.TGLinearRing.prototype.nearestPoint = function(a, d, b) {
    var e = this.getPath();
    return void 0 !== e && e.nearestPoint ? e.nearestPoint(a, d, b) : null
};
TGOS.TGLinearRing.prototype.getPath = function() {
    return this.linestring
};
TGOS.TGLinearRing.prototype.setPath = function(a) {
    this.linestring = a;
    this.renderer && this.renderer.redraw()
};
TGOS.TGLinearRing.prototype.type = "TGLinearRing";
TGOS.TGPolygon = function(a) {
    this.rings_ = a;
    this.empty_ = !0;
    this.extIdx = 0;
    this.ext_ = a[this.extIdx];
    this.renderer = a.renderer;
    this.Envelope = new TGOS.TGEnvelope(0, 0, 0, 0);
    this.updateEnvelope()
};
TGOS.extend(TGOS.TGGeometry, TGOS.TGPolygon);
TGOS.TGPolygon.prototype.type = "TGPolygon";
TGOS.TGPolygon.prototype.nearestPoint = function(a, d, b) {
    var e = null,
        f = null,
        g = Infinity;
    void 0 !== d && (g = d);
    for (var h = Infinity, k, l = 0; l < this.rings_.length; l++) {
        var n = this.rings_[l];
        if (n.nearestPoint && (n = n.nearestPoint(a, d, b), null != n)) {
            var m, p;
            null != n.point && (m = n.point);
            null != n.distance && (p = n.distance);
            null != p && p < h && (k = m, h = p)
        }
    }
    h <= g && (e = new TGOS.TGPoint(k.x, k.y), f = h);
    return null != e ? {
        point: e,
        distance: f
    } : null
};
TGOS.TGPolygon.prototype.getEnvelope = function() {
    return this.Envelope
};
TGOS.TGPolygon.prototype.isEmpty = function() {
    return !0
};
TGOS.TGPolygon.prototype.setEmpty = function() {
    this.empty_ = !0
};
TGOS.TGPolygon.prototype.getBounds = function() {
    return this.Envelope
};
TGOS.TGPolygon.prototype.getArea = function() {
    for (var a = 0, d = this.rings_[this.extIdx].getPath().getPath(), b = d.length, e = d[b - 1], f = 0; f < b; f++) var g = d[f],
        a = a + (g.x * e.y - e.x * g.y),
        e = g;
    return Math.abs(0.5 * a)
};
TGOS.TGPolygon.prototype.isSimple = function() {};
TGOS.TGPolygon.prototype.updateEnvelope = function() {
    for (var a = Infinity, d = -Infinity, b = -Infinity, e = Infinity, f = 0; f < this.rings_.length; f++)
        for (var g = this.rings_[f].getPath().getPath(), h = 0; h < g.length; h++) a = Math.min(a, g[h].x), e = Math.min(e, g[h].y), d = Math.max(d, g[h].x), b = Math.max(b, g[h].y);
    this.Envelope.left = a;
    this.Envelope.right = d;
    this.Envelope.top = b;
    this.Envelope.bottom = e
};
TGOS.TGPolygon.prototype.transform = function(a, d, b, e, f, g) {
    for (var h = 0; h < this.rings_.length; h++) this.rings_[h].getPath().transform(a, d, b, e, f, g);
    this.updateEnvelope();
    this.renderer && this.renderer.redraw()
};
TGOS.TGPolygon.prototype.setExterior = function(a) {
    this.extIdx = this.rings_[this.rings_.indexOf(a)];
    this.updateEnvelope();
    this.renderer && this.renderer.redraw()
};
TGOS.TGPolygon.prototype.setInterior = function(a, d) {
    this.rings_[a].setPath(d)
};
TGOS.TGPolygon.prototype.addInterior = function(a) {
    this.rings_.push(a);
    this.updateEnvelope();
    this.renderer && this.renderer.redraw()
};
TGOS.TGPolygon.prototype.removeInterior = function(a) {
    this.rings_.splice(a, 1);
    this.updateEnvelope();
    this.renderer && this.renderer.redraw()
};
TGOS.TGPolygon.prototype.removeAllInterior = function() {
    var a = this.rings_.length - this.extIdx + 1;
    this.rings_.splice(0, this.extIdx);
    this.rings_.splice(1, a);
    this.updateEnvelope();
    this.renderer && this.renderer.redraw()
};
TGOS.TGPolygon.prototype.getExteriorRing = function() {
    return this.rings_[this.extIdx]
};
TGOS.TGPolygon.prototype.getInteriorRings = function() {
    var a = this.rings_.slice(0, this.extIdx),
        d = this.rings_.slice(this.extIdx + 1, this.rings_.length - this.extIdx + 1);
    return a.concat(d)
};
TGOS.TGPolygon.prototype.getNumInteriorRing = function() {
    return path_.length - 1
};
TGOS.TGPolygon.prototype.type = "TGPolygon";
TGOS.TGPolygon.prototype.toGeoJson = function() {
    for (var a = [], d = 0; d < this.rings_.length; d++) {
        for (var b = [], e = this.rings_[d].getPath().getPath(), f = 0; f < e.length; f++) b.push([e[f].x, e[f].y]);
        a.push(b)
    }
    return {
        type: "Polygon",
        coordinates: a
    }
};
TGOS.TGPolygon.prototype.toWkt = function() {
    for (var a = "POLYGON(", d = 0; d < this.rings_.length; d++) {
        for (var a = a + "(", b = this.rings_[d].getPath().getPath(), e = 0; e < b.length; e++) a += b[e].x + " " + b[e].y + ",";
        "," == a[a.length - 1] && (a = a.substring(0, a.length - 1));
        a += "),"
    }
    "," == a[a.length - 1] && (a = a.substring(0, a.length - 1));
    return a + ")"
};
TGOS.TGCircle = function() {
    var a = 36,
        d = new TGOS.TGPoint(0, 0),
        b = 0;
    this.renderer = null;
    this.getBounds = function(a) {
        if (a == TGOS.TGCoordSys.EPSG3857) {
            var f = TGOS.WGS84ToGoo(d.x, d.y);
            a = f.x + b;
            var g = f.y - b,
                f = TGOS.GooToWGS84(f.x - b, f.y + b);
            a = TGOS.GooToWGS84(a, g);
            return new TGOS.TGEnvelope(f.x, f.y, a.x, a.y)
        }
        return new TGOS.TGEnvelope(d.x - b, d.y + b, d.x + b, d.y - b)
    };
    this.setCenter = function(a) {
        a instanceof TGOS.TGPoint && (d = a, this.renderer && this.renderer.update())
    };
    this.getCenter = function() {
        return d
    };
    this.setRadius = function(a) {
        "number" ==
        typeof a && (b = a, this.renderer && this.renderer.redraw())
    };
    this.getRadius = function() {
        return b
    };
    this.setVertexCount = function(b) {
        "number" == typeof b && (a = b, 30 > a && (a = 30), 120 < a && (a = 120), this.renderer && this.renderer.redraw())
    };
    this.getVertexCount = function() {
        return a
    };
    this.transform = function(a, b, g, h, k, l) {
        d.transform(a, b, g, h, k, l);
        this.renderer && this.renderer.redraw()
    }
};
TGOS.extend(TGOS.TGGeometry, TGOS.TGCircle);
TGOS.TGCircle.prototype.type = "TGCircle";
TGOS.TGCircle.prototype.nearestPoint = function(a, d, b) {
    var e = null,
        f = null,
        g = Infinity;
    void 0 !== d && (g = d);
    var h = !0;
    void 0 !== b.snapPoint && (h = b.snapPoint);
    var k = !0;
    void 0 !== b.snapEdge && (k = b.snapEdge);
    b = Infinity;
    d = null;
    if (a instanceof TGOS.TGPoint && (k || h)) {
        var l = this.getCenter(),
            n = this.getRadius(),
            m = a.x - l.x;
        a = a.y - l.y;
        var p = Math.sqrt(m * m + a * a);
        h && p <= g && (b = p, d = new TGOS.TGPoint(l.x, l.y));
        k && (h = Infinity, k = null, h = n / p, k = new TGOS.TGPoint(l.x + m * h, l.y + a * h), h = 0 < p - n ? p - n : n - p, h <= g && (null != d ? h < b && (b = h, d = k) : (b = h, d = k)))
    }
    b <=
        g && (e = new TGOS.TGPoint(d.x, d.y), f = b);
    return null != e ? {
        point: e,
        distance: f
    } : null
};
TGOS.TGMultiGeometry = function() {};
TGOS.extend(TGOS.TGGeometry, TGOS.TGMultiGeometry);
TGOS.TGMultiGeometry.prototype.getArray = function() {
    return this.geoms
};
TGOS.TGMultiGeometry.prototype.getAt = function(a) {
    return this.geoms[a]
};
TGOS.TGMultiGeometry.prototype.getLength = function() {
    return this.geoms.length
};
TGOS.TGMultiGeometry.prototype.getBounds = function() {
    return this.Envelope
};
TGOS.TGMultiGeometry.prototype.transform = function(a, d, b, e, f, g) {
    for (var h = 0; h < this.geoms.length; h++) this.geoms[h].transform(a, d, b, e, f, g);
    this.updateEnvelope();
    this.renderer && this.renderer.redraw()
};
TGOS.TGMultiGeometry.prototype.updateEnvelope = function() {
    if (!this.geoms || !this.geoms.length) return null;
    for (var a = Infinity, d = -Infinity, b = -Infinity, e = Infinity, f = 0; f < this.geoms.length; f++) var g = this.geoms[f].getBounds(),
        a = Math.min(a, g.left),
        d = Math.max(d, g.top),
        b = Math.max(b, g.right),
        e = Math.min(e, g.bottom);
    this.Envelope = new TGOS.TGEnvelope(a, d, b, e)
};
TGOS.TGMultiPoint = function(a) {
    this.geoms = a;
    this.updateEnvelope()
};
TGOS.extend(TGOS.TGMultiGeometry, TGOS.TGMultiPoint);
TGOS.TGMultiPoint.prototype.type = "TGMultiPoint";
TGOS.TGMultiPoint.prototype.toGeoJson = function() {
    for (var a = [], d = 0; d < this.geoms.length; d++) {
        var b = this.geoms[d];
        a.push([b.x, b.y])
    }
    return {
        type: "MultiPoint",
        coordinates: a
    }
};
TGOS.TGMultiPoint.prototype.toWkt = function() {
    for (var a = "MULTIPOINT(", d = 0; d < this.geoms.length; d++) a += this.geoms[d].x + " " + this.geoms[d].y + ",";
    "," == a[a.length - 1] && (a = a.substring(0, a.length - 1));
    return a + ")"
};
TGOS.TGMultiPolygon = function(a) {
    this.geoms = a;
    this.updateEnvelope()
};
TGOS.extend(TGOS.TGMultiGeometry, TGOS.TGMultiPolygon);
TGOS.TGMultiPolygon.prototype.type = "TGMultiPolygon";
TGOS.TGMultiPolygon.prototype.toGeoJson = function() {
    for (var a = [], d = 0; d < this.geoms.length; d++) {
        for (var b = this.geoms[d], e = [], f = 0; f < b.rings_.length; f++) {
            for (var g = [], h = b.rings_[f].getPath().getPath(), k = 0; k < h.length; k++) g.push([h[k].x, h[k].y]);
            e.push(g)
        }
        a.push(e)
    }
    return {
        type: "MultiPolygon",
        coordinates: a
    }
};
TGOS.TGMultiPolygon.toWkt = function() {
    for (var a = "MULTIPOLYGON(", d = 0; d < this.geoms.length; d++) {
        for (var a = a + "(", b = this.geoms[d], e = 0; e < b.rings_.length; e++) {
            for (var a = a + "(", f = b.rings_[e].getPath().getPath(), g = 0; g < f.length; g++) a += f[g].x + " " + f[g].y + ",";
            "," == a[a.length - 1] && (a = a.substring(0, a.length - 1));
            a += "),"
        }
        "," == a[a.length - 1] && (a = a.substring(0, a.length - 1));
        a += "),"
    }
    "," == a[a.length - 1] && (a = a.substring(0, a.length - 1));
    return a + ")"
};
TGOS.TGMultiLineString = function(a) {
    this.geoms = a;
    this.updateEnvelope()
};
TGOS.extend(TGOS.TGMultiGeometry, TGOS.TGMultiLineString);
TGOS.TGMultiLineString.prototype.type = "TGMultiLineString";
TGOS.TGMultiLineString.prototype.toGeoJson = function() {
    for (var a = [], d = 0; d < this.geoms.length; d++) {
        for (var b = this.geoms[d], e = [], f = 0; f < b.path.length; f++) {
            var g = b.path[f];
            e.push([g.x, g.y])
        }
        a.push(e)
    }
    return {
        type: "MultiLineString",
        coordinates: a
    }
};
TGOS.TGMultiLineString.prototype.toWkt = function() {
    for (var a = "MULTILINESTRING(", d = 0; d < this.geoms.length; d++) {
        for (var a = a + "(", b = this.geoms[d], e = 0; e < b.path.length; e++) a += b.path[e].x + " " + b.path[e].y + ",";
        "," == a[a.length - 1] && (a = a.substring(0, a.length - 1));
        a += "),"
    }
    "," == a[a.length - 1] && (a = a.substring(0, a.length - 1));
    return a + ")"
};
TGOS.TGGeometryCollection = function(a) {
    this.geoms = a;
    this.updateEnvelope()
};
TGOS.extend(TGOS.TGMultiGeometry, TGOS.TGGeometryCollection);
TGOS.TGGeometryCollection.prototype.type = "TGGeometryCollection";
TGOS.TGGeometryCollection.prototype.toGeoJson = function() {
    for (var a = [], d = 0; d < this.geoms.length; d++) a.push(this.geoms[d].toGeoJson());
    return {
        type: "GeometryCollection",
        geometries: a
    }
};
TGOS.TGLabel = function(a) {
    var d = "",
        b = 12,
        e = "",
        f = "#000000",
        g = 1,
        h = "",
        k, l, n, m, p, s, q;
    this.getEventElement = function() {
        return q
    };
    this.update = function() {
        if (p) {
            switch (p.getCoordSys()) {
                case TGOS.TGCoordSys.EPSG3857:
                    s.FromMapPoint(k.x, k.y);
                    var a = TGOS.WGS84ToGoo(k.x, k.y),
                        b = s.FromMapPoint(a.x, a.y);
                    break;
                case TGOS.TGCoordSys.EPSG3826:
                    b = s.FromMapPoint(k.x, k.y);
                    break;
                case TGOS.TGCoordSys.EPSG3825:
                    b = s.FromMapPoint(k.x, k.y)
            }
            a = b.x;
            b = b.y;
            this.offset && (a += this.offset.x, b += this.offset.y);
            q.transform("t" + a + "," + b)
        }
    };
    this.setVisible =
        function(a) {
            q && (!0 == a ? q.show() : !1 == a && q.hide());
            m = a;
            TGOS.TGEvent.trigger(this, "visible_changed")
        };
    this.getVisible = function() {
        return m
    };
    this.setZIndex = function(a, b) {
        void 0 != a && q && (n = a, p.overlay.updateArrayOrder(this), p.overlay.updateElementOrder(this), TGOS.TGEvent.trigger(this, "zindex_changed"))
    };
    this.getZIndex = function() {
        return n
    };
    this.setFont = function(a) {
        d = a;
        q && q.attr({
            "font-family": d
        })
    };
    this.getFont = function() {
        return d
    };
    this.setFontSize = function(a) {
        b = a;
        q && q.attr({
            "font-size": b
        })
    };
    this.getFontSize =
        function() {
            return b
        };
    this.setSize = function(a) {
        size_ = a
    };
    this.getSize = function() {
        return size_
    };
    this.setFontColor = function(a) {
        f = a;
        q && q.attr({
            fill: f
        })
    };
    this.getFontColor = function() {
        return f
    };
    this.setOpacity = function(a) {
        g = a;
        q && q.attr({
            opacity: g
        })
    };
    this.getOpacity = function() {
        return g
    };
    this.setBackgroundColor = function(a) {
        h = a
    };
    this.getBackgroundColor = function() {
        return h
    };
    this.setPosition = function(a) {
        k = a;
        TGOS.TGEvent.trigger(this, "position_changed")
    };
    this.getPosition = function() {
        return k
    };
    this.setLabel = function(a) {
        l =
            a;
        q && q.attr({
            opacity: l
        });
        TGOS.TGEvent.trigger(this, "label_changed")
    };
    this.getLabel = function() {
        return l
    };
    this.setFontWeight = function(a) {
        e = a;
        q && q.attr({
            "font-weight": e
        })
    };
    this.getFontWeight = function() {
        return e
    };
    this.destroy = function() {
        p && (p.overlay.remove(this), q && q.remove())
    };
    this.offset = null;
    this.setOffset = function(a) {
        a instanceof TGOS.TGPoint && (this.offset = a, this.update())
    };
    this.setMap = function(a) {
        this.destroy();
        null == a && p ? (p = null, TGOS.TGEvent.clearInstanceListeners(this)) : a instanceof TGOS.TGOnlineMap &&
            (p = a, paper = p.getPaper(), q = paper.text(0, 0, l), p.overlay.add(this), this.bindEvents(q), s = p.getMapBase(), q.attr({
                "font-family": d,
                fill: f,
                "font-weight": e,
                "font-size": b,
                text: l,
                opacity: g
            }), this.update())
    };
    this.getMap = function() {
        return p
    };
    this.getMapBase = function() {
        return s
    };
    this.setOptions = function(a) {
        void 0 !== a.zIndex && this.setZIndex(a.zIndex);
        a.font && this.setFont(a.font);
        a.fontColor && this.setFontColor(a.fontColor);
        a.fontWeight && this.setFontWeight(a.fontWeight);
        a.fontSize && this.setFontSize(a.fontSize);
        a.label &&
            this.setLabel(a.label);
        a.backgroundColor && this.setBackgroundColor(a.backgroundColor);
        void 0 !== a.opacity && this.setOpacity(a.opacity);
        a.position && this.setPosition(a.position);
        a.map && this.setMap(a.map);
        this.update()
    };
    this.setOptions(a)
};
TGOS.extend(TGOS.Graphic, TGOS.TGLabel);
TGOS.RegisterEvent(TGOS.TGLabel, "zindex_changed click dblclick rightclick mousemove mousedown mouseup mouseover mouseout".split(" "));
TGOS.TGInfoWindow = function(a, d, b) {
    var e = "",
        f, g, h, k, l = this,
        n, m;
    k = document.createElement("img");
    f = document.createElement("div");
    g = document.createElement("div");
    h = document.createElement("div");
    document.createElement("div");
    k.src = TGOS.RES_PATH + "Sample/Angle.png";
    k.style.position = "absolute";
    k.style.height = "21px";
    k.style.width = "34px";
    k.style.zIndex = 1E6;
    f.style.position = "absolute";
    f.style.border = "solid 1px #AAAAAA";
    f.style.backgroundColor = "#ffffff";
    f.style.opacity = 1;
    f.style.borderRadius = "5px";
    f.style.overflow =
        "auto";
    g.style.width = "auto";
    g.style.height = "auto";
    g.style.position = "absolute";
    g.style.overflow = "auto";
    g.style.margin = "10px";
    g.style["word-break"] = "keep-all";
    h.style.position = "absolute";
    h.top = "5px";
    h.style.width = "15px";
    h.style.height = "15px";
    h.style.overflow = "auto";
    h.style.right = "5px";
    h.style.zIndex = 1E6;
    h.style.backgroundImage = 'url("' + TGOS.RES_PATH + 'Sample/Close.png")';
    this.onCloseClick = function(a) {
        l.close()
    };
    AttachEvent(h, "click", this.onCloseClick);
    f.appendChild(g);
    var p = {
        position: d || new TGOS.TGPoint(0,
            0),
        pixelOffset: new TGOS.TGSize(0, 0),
        zIndex: 1E6,
        disableAutoPan: !0
    };
    this.getElement = function() {
        return f
    };
    this.open = function(a) {
        a.infoWindowLayer.containing(this) ? this.update() : (a.getHPack().appendChild(f), a.getHPack().appendChild(k), a.getHPack().appendChild(h), a.infoWindowLayer.add(this), n = a, m = n.getMapBase(), f.style.zIndex = p.zIndex, g.innerHTML = '<p style="white-space: nowrap">' + e + "</p>", f.style.width = g.scrollWidth + 40 > p.maxWidth ? p.maxWidth + 40 + "px" : g.scrollWidth + 40 + "px", k.style.display = "inline", h.style.display =
            "inline", f.style.height = g.scrollHeight + 30 + "px", this.update(), this.panToCenter())
    };
    this.close = function() {
        n && n.infoWindowLayer.containing(this) && (n.infoWindowLayer.remove(this), k.parentNode && k.parentNode.removeChild(k), h.parentNode && h.parentNode.removeChild(h))
    };
    this.setContent = function(a) {
        "string" == typeof a ? e = a : a instanceof HTMLElement && g.appendChild(a);
        e = a;
        g.innerHTML = '<p style="white-space: nowrap">' + e + "</p>";
        f.style.width = g.scrollWidth + 40 > p.maxWidth ? p.maxWidth + 40 + "px" : g.scrollWidth + 40 + "px";
        f.style.height =
            g.scrollHeight + 30 + "px";
        TGOS.TGEvent.trigger(this, "content_changed")
    };
    this.setPosition = function(a) {
        a instanceof TGOS.TGPoint && (a.x !== p.position.x || a.y !== p.position.y) && (p.position = a, this.update(), TGOS.TGEvent.trigger(this, "position_changed"))
    };
    this.getPosition = function() {
        return p.position
    };
    this.getContentPane = function() {
        return g
    };
    this.setMaxWidth = function(a) {
        p.maxWidth = a;
        f.style.width = g.scrollWidth + 40 > p.maxWidth ? p.maxWidth + 40 + "px" : g.scrollWidth + 40 + "px";
        f.style.height = g.scrollHeight + 30 + "px"
    };
    this.setZIndex =
        function(a) {
            a !== p.zIndex && (p.zIndex = a, f.style.zIndex = a, k.style.zIndex = a, h.style.zIndex = a, this.update(), TGOS.TGEvent.trigger(this, "zindex_changed"))
        };
    this.getZIndex = function() {
        return p.zIndex
    };
    this.setPixelOffset = function(a) {
        p.pixelOffset = a;
        this.update()
    };
    this.disableAutoPan = function(a) {
        "boolean" == typeof a && (p.disableAutoPan = a)
    };
    this.putOpacity = function(a) {
        f.style.opacity = a;
        k.style.opacity = a;
        h.style.opacity = a;
        f.style.filter = "alpha(opacity=" + 100 * a + ")";
        k.style.filter = "alpha(opacity=" + 100 * a + ")";
        h.style.filter =
            "alpha(opacity=" + 100 * a + ")"
    };
    this.panToCenter = function() {
        if (!1 == p.disableAutoPan && m && n) {
            var a = m.FromMapPoint(p.position.x, p.position.y),
                b = parseInt(a.x) - f.offsetWidth / 2,
                a = parseInt(a.y) - f.offsetHeight / 2;
            m.ToMapPoint(b, a);
            n.setCenter(p.position)
        }
    };
    this.setMessageText = function(a) {
        this.setContent(a)
    };
    this.setOptions = function(a) {
        void 0 != a && ("boolean" == typeof a.disableAutoPan && this.disableAutoPan(a.disableAutoPan), a.position instanceof TGOS.TGPoint && this.setPosition(a.position), "number" == typeof a.maxWidth &&
            this.setMaxWidth(a.maxWidth), a.pixelOffset instanceof TGOS.TGSize && this.setPixelOffset(a.pixelOffset), "number" == typeof a.zIndex && this.setZIndex(a.zIndex), "string" == typeof a.messageText && this.setMessageText(a.messageText), "number" == typeof a.opacity && this.putOpacity(a.opacity), this.update())
    };
    this.update = function() {
        if ("undefined" != typeof m && n) {
            switch (n.getCoordSys()) {
                case TGOS.TGCoordSys.EPSG3857:
                    var a = TGOS.WGS84ToGoo(p.position.x, p.position.y),
                        a = m.FromMapPoint(a.x, a.y);
                    break;
                case TGOS.TGCoordSys.EPSG3826:
                    a =
                        m.FromMapPoint(p.position.x, p.position.y);
                    break;
                case TGOS.TGCoordSys.EPSG3825:
                    a = m.FromMapPoint(p.position.x, p.position.y)
            }
            f.style.left = parseInt(a.x) + p.pixelOffset.width + "px";
            f.style.top = parseInt(a.y) - 19 - parseInt(f.offsetHeight) + p.pixelOffset.height + "px";
            k.style.left = parseInt(a.x) + p.pixelOffset.width + "px";
            k.style.top = parseInt(a.y) - 19 + p.pixelOffset.height + "px";
            h.style.left = parseInt(a.x) + f.clientWidth + p.pixelOffset.width - 20 + "px";
            h.style.top = parseInt(f.style.top) + 5 + "px"
        }
    };
    this.setContent(a);
    this.setOptions({
        position: d
    });
    this.setOptions(b)
};
TGOS.RegisterEvent(TGOS.TGLabel, ["closeclick", "content_changed", "position_changed", "zindex_changed", "domready"]);
TGOS.TGImage = function(a, d, b, e, f) {
    var g = "";
    this.size = d instanceof TGOS.TGSize ? d : new TGOS.TGSize(32, 32);
    this.scaledSize = f instanceof TGOS.TGPoint ? f : new TGOS.TGSize(32, 32);
    this.anchor = e instanceof TGOS.TGPoint ? e : new TGOS.TGPoint(this.size.width / 2 - 1, this.size.height - 1);
    this.origin = b instanceof TGOS.TGPoint ? b : new TGOS.TGPoint(0, 0);
    this.setUrl = function(a) {
        "string" == typeof a && (g = a)
    };
    this.getUrl = function() {
        return g
    };
    this.setUrl(a)
};
TGOS.extend(TGOS.MVCObject, TGOS.TGImage);
TGOS.TGSymbol = function() {
    var a = {
        FORWARD_OPEN_ARROW: 1,
        BACKWARD_OPEN_ARROW: 3
    };
    TGOS.TGSymbolStyle = {
        FORWARD_CLOSED_ARROW: 0,
        FORWARD_OPEN_ARROW: 1,
        BACKWARD_CLOSED_ARROW: 2,
        BACKWARD_OPEN_ARROW: 3,
        CIRCLE: 4,
        DOUBLE_CIRCLE: 5,
        TRIPLE_CIRCLE: 6,
        CIRCLE_SPOT: 7,
        TRIANGLE: 8,
        INVERT_TRIANGLE: 9,
        SQUARE: 10,
        PENTAGON: 11,
        HEXAGON: 12,
        OCTAGON: 13,
        PENTASTAR: 14,
        HEXASTAR: 15
    };
    var d = function() {
        this.anchor = new TGOS.TGPoint(0, 0);
        this.symbolStyle = TGOS.TGSymbolStyle.CIRCLE;
        this.yPixel = this.xPixel = 48;
        this.rotation = 0;
        this.fillColor = "#ffffff";
        this.fillOpacity = 0;
        this.strokeColor = "#000000";
        this.strokeWeight = 2;
        this.strokeOpacity = 1
    };
    TGOS.extend(TGOS.MVCObject, d);
    d.noFill = function(b) {
        for (var d in a)
            if (a[d] == b) return !0;
        return !1
    };
    d.SymbolPath = "M0 0 L 100 50 L0 100L50 50Z;M0 0 L 100 50 L0 100;M100 0 L 0 50 L100 100L50 50Z;M100 0 L 0 50 L100 100;M0 50 A 50 50 0 0 1 100 50 A50 50 0 0 1 0 50z;M0 50A50 50 0 0 1 100 50 A50 50 0 0 1 0 50zM25 50A25 25 0 0 1 75 50 A25 25 0 0 1 25 50z;M0 50A50 50 0 0 1 100 50 A50 50 0 0 1 0 50zM16.67 50A33.33 33.33 0 0 1 83.33 50 A33.33 33.33 0 0 1 16.67 50zM33.33 50A16.67 16.67 0 0 1 66.67 50 A16.67 16.67 0 0 1 33.33 50z;M0 50A50 50 0 0 1 100 50 A50 50 0 0 1 0 50ZM45 45L55 55M55 45L45 55;M50 0L7 75L93 75Z;M93 25L7 25L50 100Z;M0 0L100 0L100 100L0 100Z;M50 0L2 35L21 90L79 90L98 35Z;M50 0L7 25L7 75L50 100L93 75L93 25Z;M50 0L15 15L0 50L15 85L50 100L85 85L100 50L85 15Z;M50 0L35 30L2 35 L26 58L21 90L50 75L79 90L74\t58L98 35L65\t30Z;M50,0L38,28L7,25L25,50L7,75L37,72L50,100L62,72L93,75L75,50L93,25L63,28Z".split(";");
    return d
}();
TGOS.TGEvent = function() {
    var a = 0 > util.getInternetExplorerVersion() ? 0 : 1,
        d = {
            standardDomMouseEvents: {
                click: "click",
                mousemove: "mousemove",
                mousedown: "mousedown",
                mouseover: "mouseover",
                mouseout: "mouseout",
                mouseup: "mouseup",
                dblclick: "dblclick",
                rightclick: "rightclick"
            },
            drawingManagerEvents: {
                circle_complete: "circle_complete",
                marker_complete: "marker_complete",
                overlay_complete: "overlay_complete",
                polygon_complete: "polygon_complete",
                linestring_complete: "linestring_complete",
                envelope_complete: "envelope_complete",
                edit_complete: "edit_complete",
                modify_complete: "modify_complete"
            },
            RIGHTBUTTON: 2
        };
    d.LEFTBUTTON = a;
    TGOS.MapsEventListener = function() {};
    TGOS.OverlayCompleteEvent = function(a, d) {
        this.overlay = a;
        this.type = d
    };
    TGOS.TGMouseEvent = function(a) {
        this.mapListener_ = null;
        this.stop = function() {
            d.removeListener(this.mapListener_);
            this.mapListener_ = null
        };
        this.stopPropagation = function() {
            a.stopPropagation && a.stopPropagation();
            a.cancelBubble = !0
        };
        this.point = new TGOS.TGPoint
    };
    d.addListener_ = function(a, d, f, g, h) {
        if (a && d && a.events &&
            !(0 > a.events.indexOf(d))) {
            var k = a[d + "_"],
                l = null;
            k || (a[d + "_"] = [], k = a[d + "_"]);
            if (k) return l = {
                target_: a,
                eventName_: d,
                targetQueue_: d + "_",
                handler_: f,
                executeLimit: h,
                capture: g
            }, k.push(l), l
        }
    };
    d.addDomListener = function(a, e, f, g) {
        return d.addListener_(a, e, f, g, Infinity)
    };
    d.addDomListenerOnce = function(a, e, f, g) {
        return d.addListener_(a, e, f, g, 1)
    };
    d.addListener = function(a, e, f, g) {
        return d.addListener_(a, e, f, g, Infinity)
    };
    d.addListenerOnce = function(a, e, f, g) {
        return d.addListener_(a, e, f, g, 1)
    };
    d.clearInstanceListeners =
        function(a) {
            if (a.events)
                for (var e = 0; e < a.events.length; e++) d.clearListeners(a, a.events[e])
        };
    d.copyEvent = function(a, e) {
        for (var f = 0; f < a.events.length; f++) {
            var g = a.events[f],
                h = a[g + "_"];
            if (h)
                for (var k = 0; k < h.length; k++) {
                    var l = h[k];
                    d.addListener_(e, g, l.handler_, l.capture, l, l.executeLimit)
                }
        }
    };
    d.clearListeners = function(a, d) {
        var f = a[d + "_"];
        if (f)
            for (var g = 0; g < f.length; g++);
    };
    d.removeListener = function(a) {
        var d = null;
        a && (d = a.target_[a.targetQueue_], d.splice(d.indexOf(a), 1))
    };
    d.trigger_ = function(a, e) {
        var f = null,
            f = a[e + "_"];
        if (!f || 0 >= f.length) return !1;
        for (var g = 0; g < f.length; g++) f[g].handler_.apply(a, Array.prototype.slice.call(arguments).slice(2)), f[g].executeLimit--, 0 >= f[g].executeLimit && d.removeListener(f[g])
    };
    d.trigger = function(a, e) {
        d.trigger_(a, e)
    };
    d.releaseEventLock = function(a, d) {
        if (a && a.events && a.events.length && d && a.lockEvt && 0 <= a.lockEvt.indexOf(d)) {
            var f = a.lockEvt.indexOf(d);
            0 > f || a.lockEvt.splice(f, 1)
        }
    };
    d.lockEvent = function(a, d) {
        a && a.events && a.events.length && d && (a.lockEvt || (a.lockEvt = []), 0 <= a.lockEvt.indexOf(d) ||
            a.lockEvt.push(d))
    };
    return d
}();
(function() {
    var a = TGOS.RES_PATH + "marker2.png",
        d = TGOS.RES_PATH + "shadow2.png";
    TGOS.TGMarker = function(a, b, d, e, l) {
        var n = this;
        this.endDrag = function(a) {
            if (2 < n.sclientx - a.clientX || 2 < n.sclienty - a.clientY || -2 > n.sclientx - a.clientX || -2 > n.sclienty - a.clientY) n.dragMoved = !0;
            DetachEvent(document.body, "mousemove", n.markMove, !0);
            DetachEvent(document.body, "mouseup", n.endDrag, !0);
            !n.dragMoved && n.editable && null != n.clickCallback && n.clickCallback.call(this, n)
        };
        this.markMove = function(a) {
            var b = n.map.getMapBase(),
                d = b.getPackageOffset();
            switch (n.map.getCoordSys()) {
                case TGOS.TGCoordSys.EPSG3857:
                    a = b.ToMapPoint(a.clientX - d.x, a.clientY - d.y);
                    a = TGOS.GooToWGS84(a.x, a.y);
                    var e = new TGOS.TGPoint(a.x, a.y);
                    break;
                case TGOS.TGCoordSys.EPSG3826:
                    e = b.ToMapPoint(a.clientX - d.x, a.clientY - d.y);
                    break;
                case TGOS.TGCoordSys.EPSG3825:
                    e = b.ToMapPoint(a.clientX - d.x, a.clientY - d.y)
            }
            n.setPosition(e);
            n.editable && null != n.movedCallback && n.movedCallback.call(this, n)
        };
        this.markDrag = function(a) {
            n.sclientx = a.clientX;
            n.sclienty = a.clientY;
            n.dragMoved = !1;
            a.cancelBubble = !0;
            a.stopPropagation && a.stopPropagation();
            AttachEvent(document.body, "mousemove", n.markMove, !0);
            AttachEvent(document.body, "mouseup", n.endDrag, !0)
        };
        this.setClickCallback = function(a) {
            this.clickCallback = a
        };
        this.setMovedCallback = function(a) {
            this.movedCallback = a
        };
        b instanceof TGOS.TGPoint && (this.position = b);
        e && (this.icon = e);
        d && (this.title = d);
        l && this.setMarkerOptions(l);
        a && this.setMap(a)
    };
    var b = TGOS.TGMarker;
    TGOS.extend(TGOS.Graphic, b);
    var e = b.prototype;
    e.elem = null;
    e.map = null;
    e.gPos = null;
    e.getBounds = function() {
        return new TGOS.TGEnvelope(this.position.x,
            this.position.y, this.position.x, this.position.y)
    };
    e.setMap = function(a) {
        if (null === a) this.destroy(), this.map = null;
        else if (this.destroy(), a instanceof TGOS.TGOnlineMap) {
            (this.map = a) && this.map.getCoordSys() == TGOS.TGCoordSys.EPSG3857 && (this.gPos = TGOS.WGS84ToGoo(this.position.x, this.position.y));
            this.map.overlay.add(this);
            this.map.getPaper();
            a = this.map.getShadowPaper();
            var b = this.shadow ? this.shadow.getUrl() : d;
            this.sImg = a.image(b, 0, 0, this.shadow.size.width, this.shadow.size.height);
            !0 != this.flat && !1 != this.visible ||
                this.sImg.hide();
            this.redrawMarker();
            this.update()
        }
    };
    e.getMap = function() {
        return this.map
    };
    e.getMapBase = function() {
        if (this.map) return this.map.getMapBase()
    };
    e.destroy = function() {
        this.map && (this.elem && this.elem.remove(), this.sImg && this.sImg.remove(), this.map.overlay.remove(this), this.sImg = this.elem = null)
    };
    e.getEventElement = function() {
        return this.elem
    };
    e.title = "";
    e.getTitle = function() {
        return this.title
    };
    e.setTitle = function(a) {
        this.title = a;
        this.elem && (this.elem.attr({
            title: this.title
        }), TGOS.TGEvent.trigger(this,
            "title_changed"))
    };
    e.position = null;
    e.getPosition = function() {
        return this.position
    };
    e.setPosition = function(a) {
        a instanceof TGOS.TGPoint && (this.position = a, this.map && this.map.getCoordSys() == TGOS.TGCoordSys.EPSG3857 && (this.gPos = TGOS.WGS84ToGoo(this.position.x, this.position.y)), this.update(), TGOS.TGEvent.trigger(this, "position_changed"))
    };
    this.infoAnchorPosition = null;
    e.getInfoAnchorPoint = function() {
        return this.infoAnchorPoint
    };
    e.setInfoAnchorPoint = function(a) {
        this.infoAnchorPoint = a
    };
    e.icon = new TGOS.TGImage(a,
        new TGOS.TGSize(31, 30), new TGOS.TGPoint(0, 0), new TGOS.TGPoint(9, 28));
    e.getIcon = function() {
        return this.icon
    };
    e.setIcon = function(a) {
        if (a instanceof TGOS.TGImage || a instanceof TGOS.TGSymbol) this.icon = a, this.redrawMarker(), this.update(), TGOS.TGEvent.trigger(this, "icon_changed")
    };
    e.clickable = !1;
    e.getClickable = function() {
        return this.clickable
    };
    e.setClickable = function(a) {
        "boolean" === typeof a && ((this.clickable = a) ? TGOS.TGEvent.releaseEventLock(this, "click") : TGOS.TGEvent.lockEvent(this, "click"), TGOS.TGEvent.trigger(this,
            "clickable_changed"))
    };
    e.redrawMarker = function() {
        if ((this.icon instanceof TGOS.TGImage || this.icon instanceof TGOS.TGSymbol) && this.map) {
            this.elem && this.elem.remove();
            var a = this.map.getPaper();
            if (this.icon instanceof TGOS.TGImage)
                if (this.fitImageSize) {
                    var b = document.createElement("img"),
                        d = this;
                    b.onload = function() {
                        var b = e.icon.size.width,
                            g = e.icon.size.height;
                        try {
                            b = this.width, g = this.height
                        } catch (n) {}
                        e.elem = a.image(d.icon.getUrl(), 0, 0, b, g);
                        !1 === e.visible ? e.elem.hide() : e.elem.show();
                        null != e.cursor && e.elem.attr({
                            cursor: e.cursor
                        });
                        null != e.title && e.elem.attr({
                            title: e.title
                        });
                        d.map.overlay.updateElementOrder(d);
                        d.bindEvents();
                        d.update()
                    };
                    b.src = this.icon.getUrl()
                } else this.elem = a.image(this.icon.getUrl(), 0, 0, this.icon.size.width, this.icon.size.height), !1 === this.visible ? this.elem.hide() : this.elem.show(), null != this.cursor && this.elem.attr({
                    cursor: this.cursor
                }), null != this.title && this.elem.attr({
                    title: this.title
                }), this.map.overlay.updateElementOrder(this), this.bindEvents(), this.update();
            else if (this.icon instanceof TGOS.TGSymbol) {
                b =
                    this.icon.symbolStyle in TGOS.TGSymbol.SymbolPath ? TGOS.TGSymbol.SymbolPath[this.icon.symbolStyle] : this.icon.symbolStyle;
                if (!b) throw "Invalid SymbolStyle or path";
                this.elem = a.path(b);
                this.bbox_ = this.elem.getBBox(!0);
                b = TGOS.TGSymbol.noFill(this.icon.symbolStyle);
                this.elem.attr({
                    fill: this.icon.fillColor,
                    "fill-opacity": b ? 0 : this.icon.fillOpacity,
                    stroke: this.icon.strokeColor,
                    "stroke-opacity": this.icon.strokeOpacity,
                    "stroke-width": this.icon.strokeWeight
                });
                !1 === this.visible ? this.elem.hide() : this.elem.show();
                null != this.cursor && this.elem.attr({
                    cursor: this.cursor
                });
                null != this.title && this.elem.attr({
                    title: this.title
                });
                this.map.overlay.updateElementOrder(this);
                this.bindEvents();
                this.update()
            }
        }
    };
    e.icon_changed = function() {
        this.redrawMarker()
    };
    e.visible = !0;
    e.getVisible = function() {
        return this.visible
    };
    e.setVisible = function(a, b) {
        this.visible = a;
        this.map && (!0 === this.visible ? (this.elem.show(), !1 === this.flat && this.sImg.show()) : (this.elem.hide(), this.sImg.hide()), b || this.update(), TGOS.TGEvent.trigger(this, "visible_changed"))
    };
    e.cursor = null;
    e.getCursor = function() {
        return this.cursor
    };
    e.setCursor = function(a) {
        this.cursor = a;
        this.elem && (this.elem.attr({
            cursor: this.cursor
        }), TGOS.TGEvent.trigger(this, "cursor_changed"))
    };
    e.zIndex = 0;
    e.getZIndex = function() {
        return this.zIndex
    };
    e.setZIndex = function(a) {
        this.zIndex = parseInt(a);
        this.map && (this.map.overlay.updateArrayOrder(this), this.map.overlay.updateElementOrder(this), TGOS.TGEvent.trigger(this, "zindex_changed"))
    };
    e.editable = !1;
    e.getEditable = function() {
        return this.editable
    };
    e.setEditable =
        function(a) {
            this.editable = a;
            this.setDraggable(a)
        };
    e.draggable = !1;
    e.getDraggable = function() {
        return this.draggable
    };
    e.setDraggable = function(a) {
        this.draggable = a;
        TGOS.TGEvent.trigger(this, "draggable_changed");
        this.elem && (this.elem && !0 == a ? this.elem.mousedown(this.markDrag) : this.elem && !1 == a && this.elem.unmousedown(this.markDrag))
    };
    e.flat = !1;
    e.getFlat = function() {
        return this.flat
    };
    e.setFlat = function(a) {
        this.flat = a;
        this.sImg && (!0 === this.flat ? this.sImg.hide() : this.sImg.show(), TGOS.TGEvent.trigger(this, "flat_changed"))
    };
    e.shadow = new TGOS.TGImage(d, new TGOS.TGSize(31, 30), new TGOS.TGPoint(0, 0), new TGOS.TGPoint(9, 25));
    e.getShadow = function() {
        return this.shadow
    };
    e.setShadow = function(a) {
        this.shadow = a;
        TGOS.TGEvent.trigger(this, "shadow_changed")
    };
    e.fitImageSize = !1;
    e.setFitImageSize = function(a) {
        this.fitImageSize = a
    };
    e.setMarkerOptions = function(a) {
        a && (void 0 !== a.visible && this.setVisible(a.visible), void 0 != a.icon && this.setIcon(a.icon), void 0 !== a.shadow && this.setShadow(a.shadow), void 0 != a.title && this.setTitle(a.title), void 0 !==
            a.position && this.setPosition(a.position), void 0 !== a.infoAnchor && this.setInfoAnchorPoint(a.infoAnchor), void 0 !== a.clickable && this.setClickable(a.clickable), void 0 !== a.cursor && this.setCursor(a.cursor), void 0 != a.zIndex && this.setZIndex(a.zIndex), void 0 !== a.draggable && this.setDraggable(a.draggable), void 0 !== a.flat && this.setFlat(a.flat), void 0 !== a.shape && this.setShape(a.shape), void 0 !== a.fitImageSize && this.setFitImageSize(a.fitImageSize))
    };
    e.update = function() {
        if (this.position && this.visible && this.elem &&
            this.map) {
            var a;
            switch (this.map.getCoordSys()) {
                case TGOS.TGCoordSys.EPSG3857:
                    a = this.gPos;
                    break;
                default:
                    a = this.position
            }
            var b = this.map.getMapBase();
            if (this.map.getRawBound().contains(a)) {
                this.visible && (this.elem.show(), !0 !== this.flat && this.sImg.show());
                a = b.FromMapPoint(a.x, a.y);
                if (this.icon instanceof TGOS.TGImage) this.elem.attr({
                    x: a.x - this.icon.anchor.x,
                    y: a.y - this.icon.anchor.y
                });
                else if (this.icon instanceof TGOS.TGSymbol) {
                    if (!this.bbox_) {
                        this.bbox_ = this.elem.getBBox(!0);
                        return
                    }
                    this.elem.transform("t" +
                        (a.x - this.icon.anchor.x) + "," + (a.y - this.icon.anchor.y) + "r" + this.icon.rotation + "," + this.icon.anchor.x + "," + this.icon.anchor.y + "s" + this.icon.xPixel / this.bbox_.width + "," + this.icon.yPixel / this.bbox_.height + ",0,0")
                } else return;
                !1 === this.flat && this.sImg.attr({
                    x: a.x - this.shadow.anchor.x,
                    y: a.y - this.shadow.anchor.y
                })
            } else this.elem.hide(), this.sImg.hide()
        }
    };
    TGOS.RegisterEvent(b, "clickable_changed icon_changed position_changed title_changed visible_changed zindex_changed click mousedown mouseup mouseover mouseout mousemove cursor_changed draggable_changed flat_changed shadow_changed shape_changed dblclick rightclick".split(" "))
})();
TGOS.TGDrawing = function() {
    var a = function(a, b, d, e) {
            var f = this;
            this.manager = a;
            this.mode = b;
            this.active = !1;
            this.activeImage = d;
            this.inactiveImage = e;
            this.div = document.createElement("div");
            this.img = document.createElement("img");
            this.div.appendChild(this.img);
            this.setActive = function(a) {
                this.active = a;
                this.img.src = this.active ? f.activeImage : f.inactiveImage
            };
            this.destructor = function() {
                div.parentNode && div.parentNode.removeChild(this.div);
                this.img = this.div = null
            };
            this.setActive(!1);
            this.div.onclick = function() {
                f.manager.setDrawingMode(f.manager.getDrawingMode() ==
                    f.mode ? null : f.mode)
            }
        },
        d = function(a, b, d, e) {
            var f = this;
            this.manager = a;
            this.mode = b;
            this.active = !0;
            this.enabledImage = d;
            this.disabledImage = e;
            this.div = document.createElement("div");
            this.img = document.createElement("img");
            this.div.appendChild(this.img);
            this.setActive = function(a) {
                this.active = a;
                this.img.src = this.active ? f.enabledImage : f.disabledImage
            };
            this.destructor = function() {
                div.parentNode && div.parentNode.removeChild(this.div);
                this.img = this.div = null
            };
            this.setActive(!0);
            this.div.onclick = function() {
                f.active &&
                    f.manager.setModifyMode(f.mode)
            }
        },
        b = function(a) {
            a.cancelBubble = !0;
            a.stopPropagation && a.stopPropagation()
        },
        e = function(a, b) {
            this.buttons = [];
            a && (this.manager = a);
            this.position = TGOS.TGControlPosition.BOTTOM_RIGHT;
            this.div = document.createElement("div");
            util.disableSelect(this.div);
            this.table = document.createElement("table");
            this.div.appendChild(this.table);
            this.row = this.table.insertRow(-1);
            a.map && this.setMap(a.map);
            b && this.setOptions(b)
        },
        f = e.prototype;
    f.setMap = function(a) {
        this.map != a && (this.map = a, this.position &&
            a.controls[this.position].push(this.div))
    };
    f.setImages = function(a) {
        this.images = a
    };
    f.setVisible = function(a) {
        this.div.style.display = a ? "" : "none"
    };
    f.setPosition = function(a) {
        if (this.manager.map) {
            var b = this.manager.map.controls[this.position].indexOf(this.div);
            0 <= b && (this.manager.map.controls[this.position].removeAt(b), this.manager.map.controls[a].push(this.div), this.position = a)
        }
    };
    f.setOptions = function(a) {
        a.images && this.setImages(a.images);
        a.controlPosition && this.setPosition(a.controlPosition);
        a.modifyModes &&
            this.setModes(a.modifyModes)
    };
    f.setButtonState = function(a, b) {
        for (var d = !1, e = 0; e < this.buttons.length; e++) {
            var f = this.buttons[e];
            f.mode == a && (f.setActive(b), d = !0)
        }
        return d
    };
    f.setModes = function(a) {
        this.div.innerHTML = "";
        this.table = document.createElement("table");
        this.div.appendChild(this.table);
        this.buttons = [];
        this.row = this.table.insertRow(-1);
        for (var b = 0; b < a.length; b++) {
            var e = new d(this.manager, a[b], this.images.enabled[a[b]], this.images.disabled[a[b]]);
            this.row.insertCell(-1).appendChild(e.div);
            this.buttons.push(e)
        }
    };
    var g = function(a, b) {
            this.buttons = [];
            a && (this.manager = a);
            this.position = TGOS.TGControlPosition.BOTTOM_RIGHT;
            this.div = document.createElement("div");
            util.disableSelect(this.div);
            this.table = document.createElement("table");
            this.div.appendChild(this.table);
            this.row = this.table.insertRow(-1);
            a.map && this.setMap(a.map);
            b && this.setOptions(b)
        },
        f = g.prototype;
    f.setMap = function(a) {
        this.map != a && (this.map = a, this.position && a.controls[this.position].push(this.div))
    };
    f.setImages = function(a) {
        this.images = a
    };
    f.setVisible =
        function(a) {
            this.div.style.display = a ? "" : "none"
        };
    f.setPosition = function(a) {
        if (this.manager.map) {
            var b = this.manager.map.controls[this.position].indexOf(this.div);
            0 <= b && (this.manager.map.controls[this.position].removeAt(b), this.manager.map.controls[a].push(this.div), this.position = a)
        }
    };
    f.clearAllGraphics = function() {};
    f.getAllGraphics = function() {};
    f.setOptions = function(a) {
        a.images && this.setImages(a.images);
        a.controlPosition && this.setPosition(a.controlPosition);
        a.drawingModes && this.setModes(a.drawingModes)
    };
    f.toggleMode = function(a) {
        for (var b = 0; b < this.buttons.length; b++) {
            var d = this.buttons[b];
            d.setActive(a == d.mode)
        }
    };
    f.setModes = function(b) {
        this.div.innerHTML = "";
        this.table = document.createElement("table");
        this.div.appendChild(this.table);
        this.buttons = [];
        this.row = this.table.insertRow(-1);
        for (var d = 0; d < b.length; d++)
            if ("LABEL" != b[d]) {
                var e = new a(this.manager, b[d], this.images.active[b[d]], this.images.inactive[b[d]]);
                this.row.insertCell(-1).appendChild(e.div);
                this.buttons.push(e)
            }
    };
    TGOS.TGOverlayType = {
        CIRCLE: "CIRCLE",
        MARKER: "MARKER",
        POLYGON: "POLYGON",
        LINESTRING: "LINESTRING",
        ENVELOPE: "ENVELOPE",
        LABEL: "LABEL",
        EDIT: "EDIT",
        MODIFY: "MODIFY"
    };
    TGOS.TGModifyType = {
        STARTED: "STARTED",
        ATTRIBUTE: "ATTRIBUTE",
        SAVE: "SAVE",
        DELETE: "DELETE",
        CANCEL: "CANCEL"
    };
    var h = TGOS.RES_PATH + "marker2.png",
        k = TGOS.RES_PATH + "shadow2.png",
        l = function(a) {
            var b = 0,
                d = 0;
            a.getBoundingClientRect && (a = a.getBoundingClientRect(), b = a.left, d = a.top);
            return new TGOS.TGPoint(b, d)
        },
        f = function(a) {
            var d = this,
                f, n, v, z, E, F, G = null,
                A, B;
            this.useDefaultControl = !0;
            this.graphicSelectedCallback =
                null;
            this.moveGraphicByKey = !0;
            this.moveNodeByKey = !1;
            var C = [],
                u = null,
                w = TGOS.TGOverlayType.MODIFY,
                t = [],
                D = -1,
                H = [],
                J = null,
                P = null,
                N = {
                    flat: !0,
                    draggable: !0
                },
                Q = {
                    flat: !0,
                    draggable: !1,
                    clickable: !0
                },
                V = function(a) {
                    d.getDrawingMode() != TGOS.TGOverlayType.MODIFY && d.setDrawingMode(TGOS.TGOverlayType.MODIFY);
                    if (d.getDrawingMode() == TGOS.TGOverlayType.MODIFY) {
                        d.moveNodeByKey && d.selectVertex(!1, null);
                        var b;
                        if (a instanceof TGOS.TGMarker) {
                            if (b = a.position, void 0 !== b) {
                                d.clearModifies();
                                u = a;
                                w = TGOS.TGOverlayType.MARKER;
                                var e =
                                    d.options.modifyIndicateOptions.circleCenter,
                                    f = new TGOS.TGPoint(b.x, b.y);
                                t.push(new TGOS.TGMarker(d.map, f, "", e, Q))
                            }
                        } else if (a.getPath && (b = a.getPath()), void 0 !== b) {
                            d.clearModifies();
                            u = a;
                            var f = d.options.modifyDrawingOptions.lineOptions,
                                g = d.options.modifyDrawingOptions.circleOptions,
                                h = d.options.modifyIndicateOptions.node,
                                e = d.options.modifyIndicateOptions.circleCenter;
                            J = new TGOS.TGLine(d.map, null, f);
                            P = new TGOS.TGFill(d.map, null, g);
                            if (b instanceof TGOS.TGPolygon) {
                                w = TGOS.TGOverlayType.POLYGON;
                                e = b.getExteriorRing();
                                if (null != e && (e = e.getPath(), null != e && (g = e.getPath(), null != g)))
                                    for (e = 0; e < g.length; e++) f = new TGOS.TGPoint(g[e].x, g[e].y), t.push(new TGOS.TGMarker(d.map, f, "", h, N));
                                b.getInteriorRings()
                            } else if (b instanceof TGOS.TGLineString)
                                for (w = TGOS.TGOverlayType.LINESTRING, g = b.getPath(), e = 0; e < g.length; e++) f = new TGOS.TGPoint(g[e].x, g[e].y), t.push(new TGOS.TGMarker(d.map, f, "", h, N));
                            else b instanceof TGOS.TGEnvelope ? (w = TGOS.TGOverlayType.ENVELOPE, g = b.top, f = b.right, e = b.bottom, t.push(new TGOS.TGMarker(d.map, new TGOS.TGPoint(b.left,
                                g), "", h, N)), t.push(new TGOS.TGMarker(d.map, new TGOS.TGPoint(f, e), "", h, N))) : b instanceof TGOS.TGCircle && (w = TGOS.TGOverlayType.CIRCLE, g = b.getCenter(), f = b.getRadius(), b = new TGOS.TGPoint(g.x, g.y), d.map.getCoordSys() == TGOS.TGCoordSys.EPSG3857 ? (g = TGOS.Geometry.Transform(g, TGOS.WGS84ToGoo), f = new TGOS.TGPoint(g.x + f, g.y), f = TGOS.Geometry.Transform(f, TGOS.GooToWGS84), g = new TGOS.TGPoint(f.x, f.y)) : g = new TGOS.TGPoint(g.x + f, g.y), t.push(new TGOS.TGMarker(d.map, b, "", e, N)), t.push(new TGOS.TGMarker(d.map, g, "", h, N)))
                        }
                        for (e =
                            0; e < t.length; e++)(h = t[e]) && h.setEditable && (h.setEditable(!0), d.moveNodeByKey && h.setClickCallback(d.vertexSelected), h.setMovedCallback(d.vertexDragged), TGOS.TGEvent.addListener(h, "rightclick", d.vertexRemove));
                        d.redrawModifies();
                        d.moveGraphicByKey && null != u && d.map.setKeyboardEdit(!0, d.onKeyboardKey);
                        d.graphicSelectedCallback && d.graphicSelectedCallback.call(this, a)
                    }
                };
            this.snapToGraphics = function(a) {
                var b = new TGOS.TGPoint(a.x, a.y),
                    e = new TGOS.TGPoint(a.x, a.y);
                if (d.options.snapOptions.snapping) {
                    var f = d.map.getMapBase();
                    if (null != f) {
                        var f = f.ToMapDistX(d.options.snapOptions.tolerance),
                            g, h;
                        if (0 < f) {
                            if (d.map.getCoordSys() == TGOS.TGCoordSys.EPSG3857) {
                                var m = new TGOS.TGPoint(a.x, a.y);
                                h = TGOS.Geometry.Transform(m, TGOS.GooToWGS84);
                                m = new TGOS.TGPoint(m.x + f, m.y);
                                m = TGOS.Geometry.Transform(m, TGOS.GooToWGS84);
                                g = m.x - h.x
                            }
                            a = Infinity;
                            for (var k = 0; k < C.length; k++)
                                if (m = C[k], null != m) {
                                    var l;
                                    m.getPath ? l = m.getPath() : m.position && (l = m.position);
                                    if (void 0 !== l && null != l) {
                                        var n = null;
                                        if (l.nearestPoint)
                                            if (d.map.getCoordSys() == TGOS.TGCoordSys.EPSG3857)
                                                if (l instanceof TGOS.TGCircle) {
                                                    var m = l.getCenter(),
                                                        m = TGOS.Geometry.Transform(m, TGOS.WGS84ToGoo),
                                                        n = l.getRadius(),
                                                        t = new TGOS.TGCircle;
                                                    t.setCenter(m);
                                                    t.setRadius(n);
                                                    n = t.nearestPoint(e, f, d.options.snapOptions)
                                                } else n = l.nearestPoint(h, g, d.options.snapOptions);
                                        else n = l.nearestPoint(e, f, d.options.snapOptions);
                                        null != n && (m = n.point, n = n.distance, void 0 !== m && n < a && (a = n, b = new TGOS.TGPoint(m.x, m.y), d.map.getCoordSys() != TGOS.TGCoordSys.EPSG3857 || l instanceof TGOS.TGCircle || (b = TGOS.Geometry.Transform(b, TGOS.WGS84ToGoo))))
                                    }
                                }
                        }
                    }
                }
                return b
            };
            this.onKeyboardKey = function(a, b) {
                var e = b.getMapBase();
                if (a == TGOS.KeyboardEditor.DEL) !d.moveGraphicByKey && !d.moveNodeByKey || d.moveNodeByKey && 0 <= D && D < t.length || d.moveGraphicByKey && 0 < t.length && null != u && d.setModifyMode(TGOS.TGModifyType.DELETE);
                else {
                    var f = 0,
                        g = 0;
                    a == TGOS.KeyboardEditor.UP ? g = 1 : a == TGOS.KeyboardEditor.DOWN ? g = -1 : a == TGOS.KeyboardEditor.LEFT ? f = -1 : a == TGOS.KeyboardEditor.RIGHT && (f = 1);
                    e = e.ToMapDistX(1);
                    f *= e;
                    g *= e;
                    if (d.moveGraphicByKey || d.moveNodeByKey)
                        if (d.moveNodeByKey && 0 <= D && D < t.length) {
                            var e =
                                t[D],
                                h = e.getPosition();
                            b.getCoordSys() == TGOS.TGCoordSys.EPSG3857 && (h = TGOS.Geometry.Transform(h, TGOS.WGS84ToGoo));
                            h.transform(1, 0, 0, 1, f, g);
                            b.getCoordSys() == TGOS.TGCoordSys.EPSG3857 && (h = TGOS.Geometry.Transform(h, TGOS.GooToWGS84));
                            e.setPosition(h);
                            e.update();
                            d.redrawModifies()
                        } else if (d.moveGraphicByKey && 0 < t.length) {
                        for (var m = 0; m < t.length; m++) e = t[m], h = e.getPosition(), b.getCoordSys() == TGOS.TGCoordSys.EPSG3857 && (h = TGOS.Geometry.Transform(h, TGOS.WGS84ToGoo)), h.transform(1, 0, 0, 1, f, g), b.getCoordSys() == TGOS.TGCoordSys.EPSG3857 &&
                            (h = TGOS.Geometry.Transform(h, TGOS.GooToWGS84)), e.setPosition(h), e.update();
                        d.redrawModifies()
                    }
                }
            };
            this.selectVertex = function(a, b) {
                if (d.moveNodeByKey) {
                    if (0 <= D && D < t.length) {
                        var e = t[D];
                        void 0 !== e && e.setIcon(d.options.modifyIndicateOptions.node);
                        D = -1
                    }
                    a && void 0 !== b && (e = t.indexOf(b), 0 <= e && (D = e, b.setIcon(d.options.modifyIndicateOptions.move)))
                }
            };
            this.vertexSelected = function(a) {
                d.selectVertex(!0, a);
                d.redrawModifies()
            };
            this.vertexDragged = function(a) {
                d.moveNodeByKey && d.selectVertex(!1, null);
                var b = a.getPosition();
                d.map.getCoordSys() == TGOS.TGCoordSys.EPSG3857 && (b = TGOS.Geometry.Transform(b, TGOS.WGS84ToGoo));
                b = d.snapToGraphics(b);
                d.map.getCoordSys() == TGOS.TGCoordSys.EPSG3857 && (b = TGOS.Geometry.Transform(b, TGOS.GooToWGS84));
                a.setPosition(b);
                a.update();
                d.redrawModifies()
            };
            this.vertexRemove = function(a) {
                a = a.target;
                if (null != a) {
                    var b = t.indexOf(a);
                    0 <= b && (d.moveNodeByKey && b == D && selecteVertex(!1, null), w == TGOS.TGOverlayType.POLYGON || w == TGOS.TGOverlayType.LINESTRING) && (a.setEditable && (d.moveNodeByKey && a.setClickCallback(null),
                        a.setMovedCallback(null), a.setEditable(!1), a.setMap(null)), t.splice(b, 1))
                }
                d.redrawModifies()
            };
            this.pseudoAdd = function(a) {
                var b = a.target;
                null != b && (a = H.indexOf(b), 0 <= a && (w == TGOS.TGOverlayType.POLYGON || w == TGOS.TGOverlayType.LINESTRING) && (b = new TGOS.TGMarker(d.map, b.position, "", ca, N), b.setEditable && (b.setEditable(!0), d.moveNodeByKey && b.setClickCallback(d.vertexSelected), b.setMovedCallback(d.vertexDragged), TGOS.TGEvent.addListener(b, "rightclick", d.vertexRemove)), t.splice(a + 1, 0, b)));
                d.redrawModifies()
            };
            this.redrawModifies = function() {
                null != J && J.setPath(null);
                null != P && P.setPath(null);
                for (i = 0; i < H.length; i++) {
                    var a = H[i];
                    a && a.setMap(null)
                }
                H = [];
                var b = !0;
                1 >= t.length && (b = !1);
                d.moveGraphicByKey && w == TGOS.TGOverlayType.MARKER && 1 >= t.length && (b = !0);
                var e, a = [],
                    f = d.options.modifyIndicateOptions.pseudo;
                switch (w) {
                    case TGOS.TGOverlayType.POLYGON:
                        3 > t.length && (b = !1);
                        for (i = 0; i < t.length; i++) a.push(t[i].position), 0 < i && (e = new TGOS.TGPoint((t[i].position.x + t[i - 1].position.x) / 2, (t[i].position.y + t[i - 1].position.y) / 2), H.push(new TGOS.TGMarker(d.map,
                            e, "", f, Q)));
                        a.push(t[0].position);
                        e = new TGOS.TGPoint((t[0].position.x + t[t.length - 1].position.x) / 2, (t[0].position.y + t[t.length - 1].position.y) / 2);
                        H.push(new TGOS.TGMarker(d.map, e, "", f, Q));
                        e = new TGOS.TGLineString(a);
                        break;
                    case TGOS.TGOverlayType.LINESTRING:
                        2 > t.length && (b = !1);
                        for (i = 0; i < t.length; i++) a.push(t[i].position), 0 < i && (e = new TGOS.TGPoint((t[i].position.x + t[i - 1].position.x) / 2, (t[i].position.y + t[i - 1].position.y) / 2), H.push(new TGOS.TGMarker(d.map, e, "", f, Q)));
                        e = new TGOS.TGLineString(a);
                        break;
                    case TGOS.TGOverlayType.ENVELOPE:
                        a.push(new TGOS.TGPoint(t[0].position.x,
                            t[0].position.y));
                        a.push(new TGOS.TGPoint(t[1].position.x, t[0].position.y));
                        a.push(new TGOS.TGPoint(t[1].position.x, t[1].position.y));
                        a.push(new TGOS.TGPoint(t[0].position.x, t[1].position.y));
                        a.push(new TGOS.TGPoint(t[0].position.x, t[0].position.y));
                        e = new TGOS.TGLineString(a);
                        break;
                    case TGOS.TGOverlayType.CIRCLE:
                        a.push(new TGOS.TGPoint(t[0].position.x, t[0].position.y)), a.push(new TGOS.TGPoint(t[1].position.x, t[1].position.y)), e = new TGOS.TGLineString(a), a = d.createCircle(t[0].position, t[1].position),
                            null != P && P.setPath(a)
                }
                for (i = 0; i < H.length; i++)(a = H[i]) && TGOS.TGEvent.addListener(a, "click", d.pseudoAdd);
                null != J && J.setPath(e);
                d.modifyControl && d.modifyControl.setButtonState("SAVE", b)
            };
            this.createCircle = function(a, b) {
                var e, f;
                d.map.getCoordSys() == TGOS.TGCoordSys.EPSG3857 ? (e = TGOS.Geometry.Transform(a, TGOS.WGS84ToGoo), f = TGOS.Geometry.Transform(b, TGOS.WGS84ToGoo)) : (e = a, f = b);
                var g = e.x - f.x;
                f = e.y - f.y;
                g = Math.sqrt(g * g + f * f);
                f = new TGOS.TGCircle;
                f.setCenter(e);
                f.setRadius(g);
                d.map.getCoordSys() == TGOS.TGCoordSys.EPSG3857 &&
                    (f = TGOS.Geometry.Transform(f, TGOS.GooToWGS84));
                return f
            };
            this.getAllGraphics = function() {
                return C
            };
            this.clearAllGraphics = function() {
                this.getDrawingMode() == TGOS.TGOverlayType.MODIFY && this.setModifyMode(TGOS.TGModifyType.CANCEL, !1);
                for (i = 0; i < C.length; i++) {
                    var a = C[i];
                    a && (a.setEditable && a.setEditable(!1), a.setMap(null))
                }
                C = []
            };
            this.clearModifies = function() {
                d.moveNodeByKey && d.selectVertex(!1, null);
                for (i = 0; i < t.length; i++) {
                    var a = t[i];
                    a && (a.setEditable && a.setEditable(!1), a.setMap(null))
                }
                t = [];
                null != J && (J.setMap(null),
                    J = null);
                null != P && (P.setMap(null), P = null);
                for (i = 0; i < H.length; i++)(a = H[i]) && a.setMap(null);
                H = []
            };
            this.setModifyMode = function(a, b) {
                var e = !0;
                void 0 !== b && "boolean" == typeof b && (e = b);
                switch (a) {
                    case TGOS.TGModifyType.SAVE:
                        var f;
                        if (null != J) {
                            var g = J.getPath();
                            switch (w) {
                                case TGOS.TGOverlayType.POLYGON:
                                    f = g.getPath();
                                    f.splice(-1, 1);
                                    g = new TGOS.TGLineString(f);
                                    f = new TGOS.TGLinearRing(g);
                                    f = new TGOS.TGPolygon([f]);
                                    break;
                                case TGOS.TGOverlayType.LINESTRING:
                                    f = g;
                                    break;
                                case TGOS.TGOverlayType.ENVELOPE:
                                    f = g.path[0].x;
                                    var h =
                                        g.path[0].y,
                                        m = g.path[2].x,
                                        g = g.path[2].y;
                                    if (f >= m) {
                                        var l = f;
                                        f = m;
                                        m = l
                                    }
                                    h < g && (l = h, h = g, g = l);
                                    f = new TGOS.TGEnvelope(f, h, m, g);
                                    break;
                                case TGOS.TGOverlayType.CIRCLE:
                                    f = d.createCircle(g.path[0], g.path[1])
                            }
                        } else w == TGOS.TGOverlayType.MARKER && (f = new TGOS.TGPoint(t[0].position.x, t[0].position.y));
                        void 0 !== f && (null != u && (h = C.indexOf(u), 0 <= h && (m = C[h], m.setMap(null), C.splice(h, 1)), u = null), d.addGraphic(f, w));
                        break;
                    case TGOS.TGModifyType.DELETE:
                        null != u && (h = C.indexOf(u), 0 <= h && (m = C[h], m.setMap(null), C.splice(h, 1)), u = null);
                        break;
                    case TGOS.TGModifyType.CANCEL:
                        u = null
                }
                a != TGOS.TGModifyType.STARTED && a != TGOS.TGModifyType.ATTRIBUTE && (d.moveGraphicByKey && null == u && d.map.setKeyboardEdit(!1, null), d.clearModifies(), e && d.getDrawingMode() != TGOS.TGOverlayType.EDIT && (d.setDrawingMode(TGOS.TGOverlayType.EDIT), TGOS.TGEvent.trigger_(d, "modify_complete", event)))
            };
            this.addGraphic = function(a, b) {
                if (void 0 !== a) {
                    var e, f;
                    switch (b) {
                        case TGOS.TGOverlayType.POLYGON:
                            e = new TGOS.TGFill(d.map, a, d.options.polygonOptions);
                            f = "polygon_complete";
                            break;
                        case TGOS.TGOverlayType.LINESTRING:
                            e = new TGOS.TGLine(d.map, a, d.options.polylineOptions);
                            f = "linestring_complete";
                            break;
                        case TGOS.TGOverlayType.ENVELOPE:
                            e = new TGOS.TGFill(d.map, a, d.options.envelopeOptions);
                            f = "envelope_complete";
                            break;
                        case TGOS.TGOverlayType.CIRCLE:
                            e = new TGOS.TGFill(d.map, a, d.options.circleOptions);
                            f = "circle_complete";
                            break;
                        case TGOS.TGOverlayType.MARKER:
                            e = new TGOS.TGMarker(d.map, a, d.options.markerOptions), f = "marker_complete"
                    }
                    e.geoJson = R(e, b);
                    e.geoJsonProperties = "{}";
                    C.push(e);
                    e = new TGOS.OverlayCompleteEvent(e,
                        w);
                    TGOS.TGEvent.trigger_(d, f, e);
                    TGOS.TGEvent.trigger_(d, "overlay_complete", e)
                }
            };
            var R = function(a, b) {
                    var e;
                    if (b == TGOS.TGOverlayType.MARKER || b == TGOS.TGOverlayType.LABEL) e = a.position.toGeoJson();
                    else if (b == TGOS.TGOverlayType.ENVELOPE) e = [], a.getPath && (a = a.getPath()), e.push([a.getLeft(), a.getTop()]), e.push([a.getRight(), a.getTop()]), e.push([a.getRight(), a.getBottom()]), e.push([a.getLeft(), a.getBottom()]), e.push([a.getLeft(), a.getTop()]), e = {
                        type: "Polygon",
                        coordinates: [e]
                    };
                    else if (b == TGOS.TGOverlayType.CIRCLE) {
                        a.getPath &&
                            (a = a.getPath());
                        e = d.map.getCoordSys() == TGOS.TGCoordSys.EPSG3857 ? TGOS.WGS84toTWD97(a.getCenter().x, a.getCenter().y) : a.getCenter();
                        var f = e.x,
                            g = e.y,
                            h = a.getRadius();
                        e = [];
                        for (var m = [], l = 0; 360 >= l; l += 12) {
                            var k = f + Math.sin(l * Math.PI / 180) * h,
                                n = g + Math.cos(l * Math.PI / 180) * h;
                            d.map.getCoordSys() == TGOS.TGCoordSys.EPSG3857 ? (k = TGOS.TWD97toWGS84(k, n), k = new TGOS.TGPoint(k.x, k.y)) : k = new TGOS.TGPoint(k, n);
                            m.push(k)
                        }
                        f = new TGOS.TGLineString(m);
                        f = new TGOS.TGLinearRing(f);
                        e.push(f);
                        e = (new TGOS.TGPolygon(e)).toGeoJson()
                    } else if (b ==
                        TGOS.TGOverlayType.POLYGON || b == TGOS.TGOverlayType.LINESTRING) e = a.getPath().toGeoJson();
                    return e
                },
                K = function(a) {
                    util.disableDefault(a);
                    b(a);
                    var e = l(B);
                    f = a.clientX - e.x;
                    n = a.clientY - e.y;
                    switch (d.getDrawingMode()) {
                        case TGOS.TGOverlayType.ENVELOPE:
                            dragGraphic = new TGOS.TGFill(d.map, null, d.options.envelopeOptions);
                            break;
                        case TGOS.TGOverlayType.CIRCLE:
                            dragGraphic = new TGOS.TGFill(d.map, null, d.options.circleOptions)
                    }
                    AttachEvent(document.body, "mousemove", L);
                    AttachEvent(document.body, "mouseup", I);
                    AttachEvent(document.body,
                        "mouseleave", I)
                },
                L = function(a) {
                    util.disableDefault(a);
                    b(a);
                    var e = l(B);
                    v = a.clientX - e.x;
                    z = a.clientY - e.y;
                    a = d.map.getMapBase();
                    var g;
                    if (f != E && F != n) {
                        switch (d.drawingMode) {
                            case TGOS.TGOverlayType.ENVELOPE:
                                var h, m;
                                g = f > v ? v : f;
                                e = n > z ? z : n;
                                h = Math.abs(f - v);
                                m = Math.abs(n - z);
                                mlr = a.ToMapPoint(g, e);
                                a = a.ToMapPoint(g + h, e + m);
                                a = new TGOS.TGEnvelope(mlr.x, mlr.y, a.x, a.y);
                                d.map.getCoordSys() == TGOS.TGCoordSys.EPSG3857 && (a = TGOS.Geometry.Transform(a, TGOS.GooToWGS84));
                                g = a;
                                break;
                            case TGOS.TGOverlayType.CIRCLE:
                                g = f, e = n, h = n - z, m = f -
                                    v, m = Math.sqrt(m * m + h * h), h = new TGOS.TGCircle, g = a.ToMapPoint(g, e), a = a.ToMapDistX(m), h.setCenter(g), h.setRadius(a), d.map.getCoordSys() == TGOS.TGCoordSys.EPSG3857 && (h = TGOS.Geometry.Transform(h, TGOS.GooToWGS84)), g = h
                        }
                        dragGraphic.setPath(g)
                    }
                },
                I = function(a) {
                    util.disableDefault(a);
                    b(a);
                    d.map.getPaper();
                    var e = d.map.getMapBase();
                    E = a.offsetX;
                    F = a.offsetY;
                    if (f != E && F != n) {
                        var g;
                        switch (d.drawingMode) {
                            case TGOS.TGOverlayType.ENVELOPE:
                                var h, m;
                                g = f > v ? v : f;
                                a = n > z ? z : n;
                                h = Math.abs(f - v);
                                m = Math.abs(n - z);
                                mlr = e.ToMapPoint(g, a);
                                e =
                                    e.ToMapPoint(g + h, a + m);
                                g = new TGOS.TGEnvelope(mlr.x, mlr.y, e.x, e.y);
                                d.map.getCoordSys() == TGOS.TGCoordSys.EPSG3857 && (g = TGOS.Geometry.Transform(g, TGOS.GooToWGS84));
                                break;
                            case TGOS.TGOverlayType.CIRCLE:
                                a = f, h = n, g = n - z, m = f - v, m = Math.sqrt(m * m + g * g), g = new TGOS.TGCircle, a = e.ToMapPoint(a, h), e = e.ToMapDistX(m), g.setCenter(a), g.setRadius(e), d.map.getCoordSys() == TGOS.TGCoordSys.EPSG3857 && (g = TGOS.Geometry.Transform(g, TGOS.GooToWGS84))
                        }
                        void 0 !== g && d.addGraphic(g, d.drawingMode);
                        null != dragGraphic && (dragGraphic.setMap(null),
                            dragGraphic = null)
                    }
                    DetachEvent(document.body, "mousemove", L, !1);
                    DetachEvent(document.body, "mouseup", I, !1);
                    DetachEvent(document.body, "mouseleave", I, !1)
                },
                O = function(a, b) {
                    var e;
                    e = a.slice();
                    b && e.pop();
                    d.getDrawingMode() == TGOS.TGOverlayType.POLYGON ? (e = new TGOS.TGLineString(e), e = new TGOS.TGLinearRing(e), e = new TGOS.TGPolygon([e])) : e = new TGOS.TGLineString(e);
                    d.map.getCoordSys() == TGOS.TGCoordSys.EPSG3857 && (e = TGOS.Geometry.Transform(e, TGOS.GooToWGS84));
                    return e
                },
                W = function(a) {
                    var b = d.map.getMapBase(),
                        e = l(B);
                    a = b.ToMapPoint(a.clientX - e.x, a.clientY - e.y);
                    a = d.snapToGraphics(a);
                    !G || 0 >= G.length || !S || (a = O(G.concat(a)), S.setPath(a))
                },
                Z = function(a) {
                    if (!aa) {
                        b(a);
                        var e = d.getDrawingMode();
                        if (e == TGOS.TGOverlayType.MARKER) {
                            AttachEvent(B, "dblclick", ka);
                            var f = d.map.getMapBase(),
                                g = l(B),
                                e = a.clientX - g.x;
                            a = a.clientY - g.y;
                            f = f.ToMapPoint(e, a);
                            f = d.snapToGraphics(f);
                            d.map.getCoordSys() == TGOS.TGCoordSys.EPSG3857 && (e = TGOS.Geometry.Transform(f, TGOS.GooToWGS84), f = new TGOS.TGPoint(e.x, e.y));
                            e = new TGOS.TGMarker(d.map, f);
                            e.setMarkerOptions(d.options.markerOptions);
                            e.geoJson = R(e, d.drawingMode);
                            e.geoJsonProperties = "{}";
                            C.push(e);
                            event = new TGOS.OverlayCompleteEvent(e, TGOS.TGOverlayType.MARKER);
                            TGOS.TGEvent.trigger_(d, "marker_complete", event);
                            TGOS.TGEvent.trigger_(d, "overlay_complete", event)
                        } else e == TGOS.TGOverlayType.LABEL ? (AttachEvent(B, "dblclick", ka), f = d.map.getMapBase(), g = l(B), e = a.clientX - g.x, a = a.clientY - g.y, f = f.ToMapPoint(e, a), d.map.getCoordSys() == TGOS.TGCoordSys.EPSG3857 && (e = TGOS.Geometry.Transform(f, TGOS.GooToWGS84), f = new TGOS.TGPoint(e.x, e.y)), e = d.options.labelOptions,
                            e.position = f, a = new TGOS.TGLabel(e), a.setLabel(e.label), a.geoJson = d.createGeoJson(a, d.drawingMode), a.geoJsonProperties = "{}", C.push(a), event = new TGOS.OverlayCompleteEvent(a, TGOS.TGOverlayType.LABEL), TGOS.TGEvent.trigger_(d, "label_complete", event), TGOS.TGEvent.trigger_(d, "overlay_complete", event)) : (G || (G = []), 0 >= G.length && (AttachEvent(B, "dblclick", ka), S = d.getDrawingMode() == TGOS.TGOverlayType.POLYGON ? new TGOS.TGFill(d.map, null, d.options.polygonOptions) : new TGOS.TGLine(d.map, null, d.options.polylineOptions)),
                            f = d.map.getMapBase(), g = l(B), e = a.clientX - g.x, a = a.clientY - g.y, f = f.ToMapPoint(e, a), f = d.snapToGraphics(f), G.push(f), A || (A = d.map.getPaper().path("M" + e + "," + a)), e = O(G), S.setPath(e))
                    }
                },
                aa = !1,
                S, T = function(a) {
                    util.disableDefault(a);
                    aa = !1;
                    d.getDrawingMode();
                    AttachEvent(B, "mousemove", M);
                    AttachEvent(B, "mousemove", W);
                    AttachEvent(B, "mouseup", Z)
                },
                M = function(a) {
                    util.disableDefault(a);
                    aa = !0;
                    DetachEvent(B, "mousemove", M);
                    DetachEvent(B, "mouseup", Z)
                },
                ka = function(a) {
                    util.disableDefault(a);
                    b(a);
                    var e = d.getDrawingMode();
                    if (e != TGOS.TGOverlayType.MARKER && e != TGOS.TGOverlayType.LABEL) {
                        var e = d.map.getMapBase(),
                            f = l(B);
                        a = e.ToMapPoint(a.clientX - f.x, a.clientY - f.y);
                        d.snapToGraphics(a);
                        a = O(G, !0);
                        G = null;
                        DetachEvent(document.body, "mousemove", W);
                        DetachEvent(B, "dblclick", ka);
                        d.addGraphic(a, d.drawingMode);
                        null != S && (S.setMap(null), S = null)
                    }
                };
            this.enterEnvMode = function() {
                this.setDrawingMode(TGOS.TGOverlayType.ENVELOPE)
            };
            this.enterEnvelopeMode = function() {
                this.setDrawingMode(TGOS.TGOverlayType.ENVELOPE)
            };
            this.enterCircleMode = function() {
                this.setDrawingMode(TGOS.TGOverlayType.CIRCLE)
            };
            this.enterPolyMode = function() {
                this.setDrawingMode(TGOS.TGOverlayType.POLYGON)
            };
            this.enterPolygonMode = function() {
                this.setDrawingMode(TGOS.TGOverlayType.POLYGON)
            };
            this.enterLineStrMode = function() {
                this.setDrawingMode(TGOS.TGOverlayType.LINESTRING)
            };
            this.enterLineMode = function() {
                this.setDrawingMode(TGOS.TGOverlayType.LINESTRING)
            };
            this.enterMarkMode = function() {
                this.setDrawingMode(TGOS.TGOverlayType.MARKER)
            };
            this.enterMarkerMode = function() {
                this.setDrawingMode(TGOS.TGOverlayType.MARKER)
            };
            this.enterLabelMode =
                function() {
                    this.setDrawingMode(TGOS.TGOverlayType.LABEL)
                };
            this.enterEditMode = function() {
                this.setDrawingMode(TGOS.TGOverlayType.EDIT)
            };
            this.enterModifyMode = function() {
                this.setDrawingMode(TGOS.TGOverlayType.MODIFY)
            };
            this.cancelSegDrawing = function() {
                G = null;
                if (null != S) {
                    S.setMap(null);
                    var a = C.indexOf(S);
                    0 <= a && C.splice(a, 1);
                    S = null
                }
                DetachEvent(document.body, "mousemove", W);
                DetachEvent(B, "dblclick", ka)
            };
            this.cancelEditingMode = function() {
                this.useDefaultControl && (B.style.cursor = "default");
                for (i = 0; i < C.length; i++) {
                    var a =
                        C[i];
                    a.setEditable && (a.setEditable(!1), a.setClickCallback(null))
                }
            };
            this.setDrawingMode = function(a) {
                var b = this.drawingMode;
                if (b != a) {
                    null != b && (b == TGOS.TGOverlayType.POLYGON || b == TGOS.TGOverlayType.LINESTRING ? d.cancelSegDrawing() : b == TGOS.TGOverlayType.EDIT ? d.cancelEditingMode() : b == TGOS.TGOverlayType.MODIFY && d.setModifyMode(TGOS.TGModifyType.CANCEL, !1));
                    B = this.map.getPanes().graphicLayer;
                    DetachEvent(B, "mousedown", K);
                    DetachEvent(B, "mouseup", Z);
                    DetachEvent(B, "mousedown", T);
                    DetachEvent(B, "mousemove", W);
                    DetachEvent(B,
                        "mousemove", M);
                    DetachEvent(B, "dblclick", ka);
                    DetachEvent(document.body, "mousemove", L);
                    DetachEvent(document.body, "mouseup", I);
                    DetachEvent(document.body, "mouseleave", I);
                    d.useDefaultControl && (B.style.cursor = "crosshair");
                    switch (a) {
                        case TGOS.TGOverlayType.ENVELOPE:
                            AttachEvent(B, "mousedown", K);
                            this.drawingMode = TGOS.TGOverlayType.ENVELOPE;
                            TGOS.TGEvent.trigger(this, "drawModeChanged");
                            break;
                        case TGOS.TGOverlayType.CIRCLE:
                            AttachEvent(B, "mousedown", K);
                            this.drawingMode = TGOS.TGOverlayType.CIRCLE;
                            TGOS.TGEvent.trigger(this,
                                "drawModeChanged");
                            break;
                        case TGOS.TGOverlayType.POLYGON:
                            AttachEvent(B, "mousedown", T);
                            this.drawingMode = TGOS.TGOverlayType.POLYGON;
                            TGOS.TGEvent.trigger(this, "drawModeChanged");
                            break;
                        case TGOS.TGOverlayType.LINESTRING:
                            AttachEvent(B, "mousedown", T);
                            this.drawingMode = TGOS.TGOverlayType.LINESTRING;
                            TGOS.TGEvent.trigger(this, "drawModeChanged");
                            break;
                        case TGOS.TGOverlayType.MARKER:
                            AttachEvent(B, "mousedown", T);
                            this.drawingMode = TGOS.TGOverlayType.MARKER;
                            TGOS.TGEvent.trigger(this, "drawModeChanged");
                            break;
                        case TGOS.TGOverlayType.LABEL:
                            AttachEvent(B,
                                "mousedown", T);
                            this.drawingMode = TGOS.TGOverlayType.LABEL;
                            TGOS.TGEvent.trigger(this, "drawModeChanged");
                            break;
                        case TGOS.TGOverlayType.EDIT:
                            d.useDefaultControl && (this.modifyControl.setVisible(!1), this.drawingControl.setVisible(!0), B.style.cursor = "pointer");
                            for (i = 0; i < C.length; i++) b = C[i], b.setEditable && (b.setClickCallback(V), b.setEditable(!0));
                            this.drawingMode = TGOS.TGOverlayType.EDIT;
                            TGOS.TGEvent.trigger(this, "drawModeChanged");
                            TGOS.TGEvent.trigger(d.map, "resize");
                            break;
                        case TGOS.TGOverlayType.MODIFY:
                            d.useDefaultControl &&
                                (this.modifyControl.setVisible(!0), this.drawingControl.setVisible(!1), B.style.cursor = "default");
                            for (i = 0; i < C.length; i++) b = C[i], b.setEditable && (b.setEditable(!1), b.setClickCallback(null));
                            this.drawingMode = TGOS.TGOverlayType.MODIFY;
                            TGOS.TGEvent.trigger(this, "drawModeChanged");
                            TGOS.TGEvent.trigger(d.map, "resize");
                            break;
                        case null:
                            d.cancelEditingMode(), this.drawingMode = null
                    }
                    this.drawingControl && this.drawingControl.toggleMode(a)
                }
            };
            this.defaultModifyModes = [TGOS.TGModifyType.DELETE, TGOS.TGModifyType.CANCEL,
                TGOS.TGModifyType.SAVE
            ];
            this.defaultDrawingModes = [TGOS.TGOverlayType.ENVELOPE, TGOS.TGOverlayType.POLYGON, TGOS.TGOverlayType.CIRCLE, TGOS.TGOverlayType.LINESTRING, TGOS.TGOverlayType.LABEL, TGOS.TGOverlayType.MARKER, TGOS.TGOverlayType.EDIT];
            var va = {
                    inactive: {
                        ENVELOPE: TGOS.RES_PATH + "rect.png",
                        CIRCLE: TGOS.RES_PATH + "circle.png",
                        MARKER: TGOS.RES_PATH + "mark.png",
                        LABEL: TGOS.RES_PATH + "label.png",
                        POLYGON: TGOS.RES_PATH + "poly.png",
                        LINESTRING: TGOS.RES_PATH + "line.png",
                        EDIT: TGOS.RES_PATH + "edit.png"
                    },
                    active: {
                        ENVELOPE: TGOS.RES_PATH +
                            "rect2.png",
                        CIRCLE: TGOS.RES_PATH + "circle2.png",
                        MARKER: TGOS.RES_PATH + "mark2.png",
                        LABEL: TGOS.RES_PATH + "label2.png",
                        POLYGON: TGOS.RES_PATH + "poly2.png",
                        LINESTRING: TGOS.RES_PATH + "line2.png",
                        EDIT: TGOS.RES_PATH + "edit2.png"
                    }
                },
                ha = {
                    enabled: {
                        ATTRIBUTE: TGOS.RES_PATH + "attribute.png",
                        SAVE: TGOS.RES_PATH + "save.png",
                        CANCEL: TGOS.RES_PATH + "cancel.png",
                        DELETE: TGOS.RES_PATH + "delete.png"
                    },
                    disabled: {
                        ATTRIBUTE: TGOS.RES_PATH + "attribute2.png",
                        SAVE: TGOS.RES_PATH + "save2.png",
                        CANCEL: TGOS.RES_PATH + "cancel2.png",
                        DELETE: TGOS.RES_PATH +
                            "delete2.png"
                    }
                },
                ga = TGOS.RES_PATH + "vertex_move.png",
                X = TGOS.RES_PATH + "vertex_add.png",
                U = TGOS.RES_PATH + "circle_center.png",
                ca = new TGOS.TGImage(TGOS.RES_PATH + "vertex_edit.png", new TGOS.TGSize(21, 21), new TGOS.TGPoint(0, 0), new TGOS.TGPoint(10, 10)),
                ga = new TGOS.TGImage(ga, new TGOS.TGSize(21, 21), new TGOS.TGPoint(0, 0), new TGOS.TGPoint(10, 10)),
                X = new TGOS.TGImage(X, new TGOS.TGSize(21, 21), new TGOS.TGPoint(0, 0), new TGOS.TGPoint(10, 10)),
                U = new TGOS.TGImage(U, new TGOS.TGSize(21, 21), new TGOS.TGPoint(0, 0), new TGOS.TGPoint(10,
                    10));
            this.options = {
                drawingControl: !0,
                drawingControlOptions: {
                    drawingModes: this.defaultDrawingModes,
                    images: va,
                    controlPosition: TGOS.TGControlPosition.BOTTOM_RIGHT
                },
                modifyControl: !1,
                modifyControlOptions: {
                    modifyModes: this.defaultModifyModes,
                    images: ha,
                    controlPosition: TGOS.TGControlPosition.BOTTOM_RIGHT
                },
                labelOptions: {
                    fontSize: "",
                    fontColor: "",
                    font: "",
                    fontWeight: "",
                    opacity: 1,
                    label: "\u6587\u5b57\u6a19\u8a18"
                },
                markerOptions: {
                    title: "",
                    clickable: !0,
                    cursor: "",
                    zIndex: "auto",
                    flat: !1,
                    icon: new TGOS.TGImage(h, new TGOS.TGSize(31,
                        30), new TGOS.TGPoint(0, 0), new TGOS.TGPoint(11, 30)),
                    shadow: new TGOS.TGImage(k, new TGOS.TGSize(31, 30), new TGOS.TGPoint(0, 0), new TGOS.TGPoint(9, 25))
                },
                polylineOptions: {
                    clickable: !1,
                    strokeWeight: 2,
                    zIndex: "auto",
                    strokeColor: "#555555",
                    strokeOpacity: 1
                },
                polygonOptions: {
                    clickable: !1,
                    fillColor: "#eeaaaa",
                    fillOpacity: 0.5,
                    strokeWeight: 2,
                    zIndex: "auto",
                    strokeColor: "#555555",
                    strokeOpacity: 1
                },
                circleOptions: {
                    clickable: !1,
                    fillColor: "#eeaaaa",
                    fillOpacity: 0.5,
                    strokeWeight: 2,
                    zIndex: "auto",
                    strokeColor: "#555555",
                    strokeOpacity: 1
                },
                envelopeOptions: {
                    clickable: !1,
                    fillColor: "#eeaaaa",
                    fillOpacity: 0.5,
                    strokeWeight: 2,
                    zIndex: "auto",
                    strokeColor: "#555555",
                    strokeOpacity: 1
                },
                modifyDrawingOptions: {
                    lineOptions: {
                        clickable: !1,
                        strokeWeight: 1,
                        zIndex: "auto",
                        strokeColor: "#FFFF22",
                        strokeOpacity: 1
                    },
                    circleOptions: {
                        clickable: !1,
                        fillColor: "#000000",
                        fillOpacity: 0,
                        strokeWeight: 1,
                        zIndex: "auto",
                        strokeColor: "#FFFF22",
                        strokeOpacity: 1
                    }
                },
                modifyIndicateOptions: {
                    node: ca,
                    move: ga,
                    pseudo: X,
                    circleCenter: U
                },
                snapOptions: {
                    snapping: !0,
                    tolerance: 10,
                    snapPoint: !0,
                    snapEdge: !0,
                    snapVertex: !0
                }
            };
            this.modifyControl = new e(this, this.options.modifyControlOptions);
            this.modifyControl.setVisible(!1);
            this.drawingControl = new g(this, this.options.drawingControlOptions);
            this.useDefaultControl || this.drawingControl.setVisible(!1);
            a && (this.map = null)
        },
        n = f.prototype;
    n.setGraphicSelectedCallback = function(a) {
        this.graphicSelectedCallback = a
    };
    n.modifySelectedGraphic = function(a) {
        this.setModifyMode(a)
    };
    n.getDefaultControlVisible = function() {
        return this.useDefaultControl
    };
    n.setDefaultControlVisible =
        function(a) {
            (this.useDefaultControl = a) ? this.getDrawingMode() != TGOS.TGOverlayType.MODIFY ? (this.modifyControl && this.modifyControl.setVisible(!1), this.drawingControl && this.drawingControl.setVisible(!0)) : (this.drawingControl && this.drawingControl.setVisible(!1), this.modifyControl && this.modifyControl.setVisible(!0)): (this.drawingControl && this.drawingControl.setVisible(!1), this.modifyControl && this.modifyControl.setVisible(!1))
        };
    n.getDrawingMode = function() {
        return this.drawingMode
    };
    n.getMap = function() {
        return this.map
    };
    n.setMap = function(a) {
        this.map = a;
        this.drawingControl && this.drawingControl.setMap(this.map);
        this.modifyControl && this.modifyControl.setMap(this.map)
    };
    n.clearAllGraphics = function() {
        this.drawingControl && this.drawingControl.manager && this.drawingControl.manager.clearAllGraphics()
    };
    n.getAllGraphics = function() {
        this.drawingControl && this.drawingControl.manager && this.drawingControl.manager.getAllGraphics()
    };
    n.getSnapping = function() {
        return this.options.snapOptions.snapping
    };
    n.getSnapTolerance = function() {
        return this.options.snapOptions.tolerance
    };
    n.setSnapping = function(a) {
        void 0 !== a && "boolean" == typeof a && (this.options.snapOptions.snapping = a)
    };
    n.setSnapTolerance = function(a) {
        void 0 !== a && "number" == typeof a && (this.options.snapOptions.tolerance = a)
    };
    n.setSnapToPoint = function(a) {
        void 0 !== a && "boolean" == typeof a && (this.options.snapOptions.snapPoint = a)
    };
    n.setSnapToEdge = function(a) {
        void 0 !== a && "boolean" == typeof a && (this.options.snapOptions.snapEdge = a)
    };
    n.setSnapToVertex = function(a) {
        void 0 !== a && "boolean" == typeof a && (this.options.snapOptions.snapVertex =
            a)
    };
    n.setSnapOptions = function(a) {
        a && (void 0 !== a.snapping && this.setSnapping(a.snapping), void 0 !== a.tolerance && this.setSnapTolerance(a.tolerance), void 0 !== a.snapPoint && this.setSnapToPoint(a.snapPoint), void 0 !== a.snapEdge && this.setSnapToEdge(a.snapEdge), void 0 !== a.snapVertex && this.setSnapToVertex(a.snapVertex))
    };
    n.getSnapOptions = function() {
        return this.options.snapOptions
    };
    n.setMarkerOptions = function(a) {
        a && (void 0 !== a.title && (this.options.markerOptions.title = a.title), void 0 !== a.clickable && (this.options.markerOptions.clickable =
            a.clickable), void 0 !== a.cursor && (this.options.markerOptions.cursor = a.cursor), void 0 !== a.zIndex && (this.options.markerOptions.zIndex = a.zIndex), void 0 !== a.flat && (this.options.markerOptions.flat = a.flat), void 0 !== a.icon && (this.options.markerOptions.icon = a.icon), void 0 !== a.shadow && (this.options.markerOptions.shadow = a.shadow))
    };
    n.setLabelOptions = function(a) {
        a && (void 0 !== a.fontSize && (this.options.labelOptions.fontSize = a.fontSize), void 0 !== a.fontColor && (this.options.labelOptions.fontColor = a.fontColor), void 0 !==
            a.font && (this.options.labelOptions.font = a.font), void 0 !== a.fontWeight && (this.options.labelOptions.fontWeight = a.fontWeight), void 0 !== a.opacity && (this.options.labelOptions.opacity = a.opacity), void 0 !== a.label && (this.options.labelOptions.label = a.label))
    };
    n.setLineOptions = function(a) {
        a && (void 0 !== a.clickable && (this.options.polylineOptions.clickable = a.clickable), void 0 !== a.strokeWeight && (this.options.polylineOptions.strokeWeight = a.strokeWeight), void 0 !== a.zIndex && (this.options.polylineOptions.zIndex = a.zIndex),
            void 0 !== a.strokeColor && (this.options.polylineOptions.strokeColor = a.strokeColor), void 0 !== a.strokeOpacity && (this.options.polylineOptions.strokeOpacity = a.strokeOpacity))
    };
    n.setPolygonOptions = function(a) {
        a && (void 0 !== a.clickable && (this.options.polygonOptions.clickable = a.clickable), void 0 !== a.fillColor && (this.options.polygonOptions.fillColor = a.fillColor), void 0 !== a.fillOpacity && (this.options.polygonOptions.fillOpacity = a.fillOpacity), void 0 !== a.strokeWeight && (this.options.polygonOptions.strokeWeight =
            a.strokeWeight), void 0 !== a.zIndex && (this.options.polygonOptions.zIndex = a.zIndex), void 0 !== a.strokeColor && (this.options.polygonOptions.strokeColor = a.strokeColor), void 0 !== a.strokeOpacity && (this.options.polygonOptions.strokeOpacity = a.strokeOpacity))
    };
    n.setCircleOptions = function(a) {
        a && (void 0 !== a.clickable && (this.options.circleOptions.clickable = a.clickable), void 0 !== a.fillColor && (this.options.circleOptions.fillColor = a.fillColor), void 0 !== a.fillOpacity && (this.options.circleOptions.fillOpacity = a.fillOpacity),
            void 0 !== a.strokeWeight && (this.options.circleOptions.strokeWeight = a.strokeWeight), void 0 !== a.zIndex && (this.options.circleOptions.zIndex = a.zIndex), void 0 !== a.strokeColor && (this.options.circleOptions.strokeColor = a.strokeColor), void 0 !== a.strokeOpacity && (this.options.circleOptions.strokeOpacity = a.strokeOpacity))
    };
    n.setEnvOptions = function(a) {
        a && this.setEnvelopeOptions(a)
    };
    n.setEnvelopeOptions = function(a) {
        a && (void 0 !== a.clickable && (this.options.envelopeOptions.clickable = a.clickable), void 0 !== a.fillColor &&
            (this.options.envelopeOptions.fillColor = a.fillColor), void 0 !== a.fillOpacity && (this.options.envelopeOptions.fillOpacity = a.fillOpacity), void 0 !== a.strokeWeight && (this.options.envelopeOptions.strokeWeight = a.strokeWeight), void 0 !== a.zIndex && (this.options.envelopeOptions.zIndex = a.zIndex), void 0 !== a.strokeColor && (this.options.envelopeOptions.strokeColor = a.strokeColor), void 0 !== a.strokeOpacity && (this.options.envelopeOptions.strokeOpacity = a.strokeOpacity))
    };
    n.setModifyDrawingOptions = function(a) {
        a && (a.lineOptions &&
            (void 0 !== a.lineOptions.clickable && (this.options.modifyDrawingOptions.lineOptions.clickable = a.lineOptions.clickable), void 0 !== a.lineOptions.strokeWeight && (this.options.modifyDrawingOptions.lineOptions.strokeWeight = a.lineOptions.strokeWeight), void 0 !== a.lineOptions.zIndex && (this.options.modifyDrawingOptions.lineOptions.zIndex = a.lineOptions.zIndex), void 0 !== a.lineOptions.strokeColor && (this.options.modifyDrawingOptions.lineOptions.strokeColor = a.lineOptions.strokeColor), void 0 !== a.lineOptions.strokeOpacity &&
                (this.options.modifyDrawingOptions.lineOptions.strokeOpacity = a.lineOptions.strokeOpacity)), a.circleOptions && (void 0 !== a.circleOptions.clickable && (this.options.modifyDrawingOptions.circleOptions.clickable = a.circleOptions.clickable), void 0 !== a.circleOptions.fillColor && (this.options.modifyDrawingOptions.circleOptions.fillColor = a.circleOptions.fillColor), void 0 !== a.circleOptions.fillOpacity && (this.options.modifyDrawingOptions.circleOptions.fillOpacity = a.circleOptions.fillOpacity), void 0 !== a.circleOptions.strokeWeight &&
                (this.options.modifyDrawingOptions.circleOptions.strokeWeight = a.circleOptions.strokeWeight), void 0 !== a.circleOptions.zIndex && (this.options.modifyDrawingOptions.circleOptions.zIndex = a.circleOptions.zIndex), void 0 !== a.circleOptions.strokeColor && (this.options.modifyDrawingOptions.circleOptions.strokeColor = a.circleOptions.strokeColor), void 0 !== a.circleOptions.strokeOpacity && (this.options.modifyDrawingOptions.circleOptions.strokeOpacity = a.circleOptions.strokeOpacity)))
    };
    n.setModifyIndicateOptions = function(a) {
        a &&
            (void 0 !== a.node && (this.options.modifyIndicateOptions.node = a.node), void 0 !== a.move && (this.options.modifyIndicateOptions.move = a.move), void 0 !== a.pseudo && (this.options.modifyIndicateOptions.pseudo = a.pseudo), void 0 !== a.circleCenter && (this.options.modifyIndicateOptions.circleCenter = a.circleCenter))
    };
    n.setDrawingControlOptions = function(a) {
        a && this.drawingControl && this.drawingControl.setOptions(a)
    };
    n.setModifyControlOptions = function(a) {
        a && this.modifyControl && this.modifyControl.setOptions(a)
    };
    n.setOptions =
        function(a) {
            a && (!0 == a.drawingControl ? this.drawingControl.setVisible(!0) : !1 == a.drawingControl && this.drawingControl.setVisible(!1), a.drawingControlOptions && this.drawingControl.setOptions(a.drawingControlOptions), !0 == a.modifyControl ? this.modifyControl.setVisible(!0) : !1 == a.modifyControl && this.modifyControl.setVisible(!1), a.modifyControlOptions && this.modifyontrol.setOptions(a.modifyControlOptions), this.setCircleOptions(this.options.circleOptions), this.setEnvelopeOptions(this.options.envelopeOptions), this.setMarkerOptions(this.options.markerOptions),
                this.setLabelOptions(this.options.labelOptions), this.setLineOptions(this.options.polylineOptions), this.setPolygonOptions(this.options.polygonOptions), this.setModifyDrawingOptions(this.options.modifyDrawingOptions), this.setModifyIndicateOptions(this.options.modifyIndicateOptions), this.setSnapOptions(this.options.snapOptions), a.circleOptions && this.setCircleOptions(a.circleOptions), a.envelopeOptions && this.setEnvelopeOptions(a.envelopeOptions), a.markerOptions && this.setMarkerOptions(a.markerOptions), a.labelOptions &&
                this.setLabelOptions(a.labelOptions), a.polylineOptions && this.setLineOptions(a.polylineOptions), a.polygonOptions && this.setPolygonOptions(a.polygonOptions), a.modifyDrawingOptions && this.setModifyDrawingOptions(a.modifyDrawingOptions), a.modifyIndicateOptions && this.setModifyIndicateOptions(a.modifyIndicateOptions), a.snapOptions && this.setSnapOptions(a.snapOptions), this.options.circleOptions.editable = !1, this.options.envelopeOptions.editable = !1, this.options.markerOptions.editable = !1, this.options.labelOptions.editable = !1, this.options.polylineOptions.editable = !1, this.options.polygonOptions.editable = !1, this.options.circleOptions.draggable = !1, this.options.envelopeOptions.draggable = !1, this.options.markerOptions.draggable = !1, this.options.labelOptions.draggable = !1, this.options.polylineOptions.draggable = !1, this.options.polygonOptions.draggable = !1)
        };
    n.getGeoJson = function(a) {
        var b = "\r\n";
        void 0 !== a && (b = a);
        a = "";
        var d = this.getAllGraphics();
        if (void 0 !== d) {
            a = a + ("{" + b) + ('"type": "FeatureCollection",' + b);
            a += '"features": [' + b;
            for (var e = 0; e < d.length; e++) {
                var f = d[e],
                    g = f.geoJson,
                    f = f.geoJsonProperties;
                a += "{" + b;
                a += '"type": "Feature",' + b;
                a += '"properties": ' + f + "," + b;
                a += '"geometry": {' + b;
                a += '"type": "' + g.type + '",' + b;
                a += '"coordinates": [';
                if ("Polygon" != g.type)
                    if ("Point" == g.type) a += g.coordinates[0] + "," + g.coordinates[1];
                    else
                        for (f = 0; f < g.coordinates.length; f++) "Point" != g.type && (a += "["), a += g.coordinates[f][0] + "," + g.coordinates[f][1], "Point" != g.type && (a += "]"), f < g.coordinates.length - 1 && (a += ",");
                else {
                    a += "[";
                    for (f = 0; f < g.coordinates[0].length; f++) "Point" !=
                        g.type && (a += "["), a += g.coordinates[0][f][0] + "," + g.coordinates[0][f][1], "Point" != g.type && (a += "]"), f < g.coordinates[0].length - 1 && (a += ",");
                    a += "]"
                }
                a += "]";
                a += "}";
                a += "}";
                e < d.length - 1 && (a += "," + b)
            }
            a += "]" + b;
            a += "}"
        }
        return a
    };
    n.setGeoJsonProperties = function(a, b) {
        void 0 !== a && (a.geoJsonProperties = b)
    };
    TGOS.RegisterEvent(f, "keydown circle_complete marker_complete overlay_complete polygon_complete linestring_complete envelope_complete label_complete drawmodeChanged".split(" "));
    return f
}();
(function() {
    TGOS.MapIdInfo = TGOS.MapIdInfo || {};
    TGOS.TGMapServiceId = TGOS.TGMapServiceId || {};
    TGOS.TGMapId = TGOS.TGMapId || {};
    TGOS.CacheExtend3857 = TGOS.CacheExtend3857 || {};
    TGOS.CacheExtend3857 = {
        TGOSMAP: [{
            level: 0,
            left: 1.31589401661081E7,
            top: 3048002.94056394,
            right: 1.38680464774819E7,
            bottom: 2498955.76641299
        }, {
            level: 1,
            left: 1.31589401675789E7,
            top: 3048002.93981119,
            right: 1.38681229160124E7,
            bottom: 2498879.32860763
        }, {
            level: 2,
            left: 1.31587872935223E7,
            top: 3048002.93981119,
            right: 1.38681229160124E7,
            bottom: 2498879.32860763
        }, {
            level: 3,
            left: 1.31587872935223E7,
            top: 3048308.68792433,
            right: 1.38681229160124E7,
            bottom: 2498573.58049449
        }, {
            level: 4,
            left: 1.31581757971122E7,
            top: 3048920.1842447,
            right: 1.3868734412051E7,
            bottom: 2498573.58059162
        }, {
            level: 5,
            left: 1.31569528046597E7,
            top: 3050143.17669727,
            right: 1.3868734412051E7,
            bottom: 2497350.58813907
        }, {
            level: 6,
            left: 1.31545068197545E7,
            top: 3052589.16160239,
            right: 1.38687344120509E7,
            bottom: 2494904.60323394
        }, {
            level: 7,
            left: 1.31496148499673E7,
            top: 3052589.16159063,
            right: 1.38736263818847E7,
            bottom: 2494904.60322179
        }, {
            level: 8,
            left: 1.31496148499558E7,
            top: 3052589.16159651,
            right: 1.3873626381873E7,
            bottom: 2485120.66360736
        }, {
            level: 9,
            left: 1.31496148499558E7,
            top: 3052589.16159651,
            right: 1.3893194261114E7,
            bottom: 2465552.78436635
        }, {
            level: 10,
            left: -2.0037508342789E7,
            top: 2.0037508342789E7,
            right: 2.00375083427896E7,
            bottom: -2.00375083427896E7
        }, {
            level: 11,
            left: -2.0037508342789E7,
            top: 2.0037508342789E7,
            right: 2.00375083427896E7,
            bottom: -2.00375083427896E7
        }, {
            level: 12,
            left: -2.0037508342789E7,
            top: 2.0037508342789E7,
            right: 2.00375083427895E7,
            bottom: -2.00375083427895E7
        }, {
            level: 13,
            left: -2.0037508342789E7,
            top: 2.0037508342789E7,
            right: 2.00375083427897E7,
            bottom: -2.00375083427897E7
        }, {
            level: 14,
            left: -2.0037508342789E7,
            top: 2.0037508342789E7,
            right: 2.00375083427894E7,
            bottom: -2.00375083427894E7
        }, {
            level: 15,
            left: -2.0037508342789E7,
            top: 2.0037508342789E7,
            right: 2.00375083427895E7,
            bottom: -2.00375083427895E7
        }, {
            level: 16,
            left: -2.0037508342789E7,
            top: 2.0037508342789E7,
            right: 2.00375083427894E7,
            bottom: -2.00375083427894E7
        }, {
            level: 17,
            left: -2.0037508342789E7,
            top: 2.0037508342789E7,
            right: 2.00375083427895E7,
            bottom: -2.00375083427895E7
        }, {
            level: 18,
            left: -2.0037508342789E7,
            top: 2.0037508342789E7,
            right: 2.00375083427895E7,
            bottom: -2.00375083427895E7
        }, {
            level: 19,
            left: -2.0037508342789E7,
            top: 2.0037508342789E7,
            right: 2.00375083427895E7,
            bottom: -2.00375083427895E7
        }]
    };
    TGOS.ThemeLayerID = {
        REGION: "M05",
        REGION_119: "M06",
        EOC: "M11",
        FIREDEPARTMENT: "M12",
        POLICEDEPARTMENT: "M13",
        NASC: "M14",
        SOCIALSERVICE: "M15",
        SHELTERS: "M18",
        NASC_LANDING: "M19",
        INDUSTRY: "M21",
        SCHOOL: "M22",
        DEBRISFLOW_P: "M08"
    };
    TGOS.ThemeLayerID.MEDICAL =
        "M17";
    TGOS.ThemeTileID = {
        LANDUSE: "T04"
    };
    TGOS.TGMapTypeId = {
        TGOSMAP: "TGOSMAP",
        NLSCMAP: "NLSCMAP",
        F2IMAGE: "F2IMAGE",
        ROADMAP: "ROADMAP",
        HILLSHADE: "HILLSHADE",
        SEGISMAP: "SEGISMAP",
        HILLSHADEMIX: "HILLSHADEMIX",
        IMAGENLSC: "IMAGENLSC"
    };
    TGOS.TGMapTypeIdCode = {
        TGOSMAP: "B01",
        NLSCMAP: "B02",
        F2IMAGE: "B04",
        ROADMAP: "B05",
        HILLSHADE: "B06",
        SEGISMAP: "B08",
        HILLSHADEMIX: "B07",
        IMAGENLSC: "B09"
    };
    TGOS.TGMapTypeId_zh_TW = {
        TGOSMAP: "TGOSMAP",
        NLSCMAP: "\u901a\u7528\u7248\u96fb\u5b50\u5730\u5716",
        F2IMAGE: "\u798f\u885b\u4e8c\u865f\u885b\u661f\u5f71\u50cf",
        ROADMAP: "\u798f\u885b\u6df7\u5408\u5730\u5716",
        HILLSHADE: "\u5730\u5f62\u6688\u6e32\u5716",
        SEGISMAP: "\u7d71\u8a08\u5340\u5730\u5716",
        HILLSHADEMIX: "\u5730\u5f62\u6688\u6e32\u6df7\u5408\u5730\u5716",
        IMAGENLSC: "\u822a\u7167\u5716"
    };
    TGOS.MapTypeDocumentName = {
        TGOSMAP: getWebProtocal() + getAPIPath() + "Agent/TWD97/Agent_TGOSMAP3826.aspx",
        NLSCMAP: getWebProtocal() + getAPIPath() + "Agent/TWD97/Agent_NLSCMAP3826.aspx",
        F2IMAGE: getWebProtocal() + getAPIPath() + "Agent/TWD97/Agent_F2IMAGE3826.aspx",
        ROADMAP: getWebProtocal() +
            getAPIPath() + "Agent/TWD97/Agent_ROADMAP3826.aspx",
        HILLSHADE: getWebProtocal() + getAPIPath() + "Agent/TWD97/Agent_HILLSHADE3826.aspx",
        SEGISMAP: getWebProtocal() + getAPIPath() + "Agent/TWD97/Agent_SEGISMAP3826.aspx",
        HILLSHADEMIX: getWebProtocal() + getAPIPath() + "Agent/TWD97/Agent_HILLSHADEMIX3826.aspx"
    };
    TGOS.MapTypeDocumentNameTWD97_119 = {
        NLSCMAP: getWebProtocal() + getAPIPath() + "Agent/TWD97/Agent_NLSCMAP3825.aspx",
        SEGISMAP: getWebProtocal() + getAPIPath() + "Agent/TWD97Agent_SEGISMAP3825.aspx",
        TGOSMAP: getWebProtocal() +
            getAPIPath() + "Agent/TWD97/Agent_TGOSMAP3825.aspx"
    };
    TGOS.MapTypeDocumentNameGoogle = {
        TGOSMAP: getWebProtocal() + getAPIPath() + "Agent/Google/Agent_TGOSMAPWORLD3857.aspx",
        NLSCMAP: getWebProtocal() + getAPIPath() + "Agent/Google/Agent_NLSCMAP3857.aspx",
        F2IMAGE: getWebProtocal() + getAPIPath() + "Agent/Google/Agent_F2IMAGE3857.aspx",
        ROADMAP: getWebProtocal() + getAPIPath() + "Agent/Google/Agent_ROADMAP3857.aspx",
        HILLSHADE: getWebProtocal() + getAPIPath() + "Agent/Google/Agent_HILLSHADE3857.aspx",
        SEGISMAP: getWebProtocal() + getAPIPath() +
            "Agent/Google/Agent_SEGISMAP3857.aspx",
        HILLSHADEMIX: getWebProtocal() + getAPIPath() + "Agent/Google/Agent_HILLSHADEMIX3857.aspx",
        IMAGENLSC: getWebProtocal() + getAPIPath() + "Agent/Google/Agent_IMAGENLSC3857.aspx"
    };
    TGOS.MapTypeIndexViewId_zh_TW = {
        TGOSMAP: "TGOSMAP\u7d22\u5f15",
        NLSCMAP: "\u901a\u7528\u7248\u96fb\u5b50\u5730\u5716\u7d22\u5f15",
        F2IMAGE: "\u798f\u885b\u4e8c\u865f\u885b\u661f\u5f71\u50cf\u7d22\u5f15",
        ROADMAP: "\u798f\u885b\u6df7\u5408\u5730\u5716\u7d22\u5f15",
        HILLSHADE: "\u5730\u5f62\u6688\u6e32\u5716\u7d22\u5f15",
        SEGISMAP: "\u7d71\u8a08\u5340\u5730\u5716\u7d22\u5f15",
        HILLSHADEMIX: "\u5730\u5f62\u6688\u6e32\u6df7\u5408\u5730\u5716\u7d22\u5f15",
        IMAGENLSC: "\u822a\u7167\u5716\u7d22\u5f15"
    };
    TGOS.MapTypeIndexViewDocumentName = {
        TGOSMAP: getWebProtocal() + getAPIPath() + "Agent/TWD97/Agent_TGOSMAP3826_IV.aspx",
        NLSCMAP: getWebProtocal() + getAPIPath() + "Agent/TWD97/Agent_NLSCMAP3826_IV.aspx",
        F2IMAGE: getWebProtocal() + getAPIPath() + "Agent/TWD97/Agent_F2IMAGE3826_IV.aspx",
        ROADMAP: getWebProtocal() + getAPIPath() + "Agent/TWD97/Agent_ROADMAP3826_IV.aspx",
        HILLSHADE: getWebProtocal() + getAPIPath() + "Agent/TWD97/Agent_HILLSHADE3826_IV.aspx",
        SEGISMAP: getWebProtocal() + getAPIPath() + "Agent/TWD97/Agent_SEGISMAP3826_IV.aspx",
        HILLSHADEMIX: getWebProtocal() + getAPIPath() + "Agent/TWD97/Agent_HILLSHADEMIX3826_IV.aspx"
    };
    TGOS.MapTypeIndexViewDocumentNameTWD97_119 = {
        TGOSMAP: getWebProtocal() + getAPIPath() + "Agent/TWD97/Agent_TGOSMAP3825_IV.aspx",
        NLSCMAP: getWebProtocal() + getAPIPath() + "Agent/TWD97/Agent_NLSCMAP3825_IV.aspx",
        SEGISMAP: getWebProtocal() + getAPIPath() + "Agent/TWD97Agent_SEGISMAP3825_IV.aspx"
    };
    TGOS.MapTypeIndexViewDocumentNameGoogle = {
        TGOSMAP: getWebProtocal() + getAPIPath() + "Agent/Google/Agent_TGOSMAPWORLD3857_IV.aspx",
        NLSCMAP: getWebProtocal() + getAPIPath() + "Agent/Google/Agent_NLSCMAP3857_IV.aspx",
        F2IMAGE: getWebProtocal() + getAPIPath() + "Agent/Google/Agent_F2IMAGE3857_IV.aspx",
        ROADMAP: getWebProtocal() + getAPIPath() + "Agent/Google/Agent_ROADMAP3857_IV.aspx",
        HILLSHADE: getWebProtocal() + getAPIPath() + "Agent/Google/Agent_HILLSHADE3857_IV.aspx",
        SEGISMAP: getWebProtocal() + getAPIPath() + "Agent/Google/Agent_SEGISMAP3857_IV.aspx",
        HILLSHADEMIX: getWebProtocal() + getAPIPath() + "Agent/Google/Agent_HILLSHADEMIX3857_IV.aspx",
        IMAGENLSC: getWebProtocal() + getAPIPath() + "Agent/Google/Agent_IMAGENLSC3857_IV.aspx"
    };
    TGOS.MapTypeBackgroundColor = {
        TGOSMAP: "#a5bfdd",
        NLSCMAP: "#a5bfdd",
        F2IMAGE: "#13437c",
        ROADMAP: "#13437c",
        HILLSHADE: "rgb(151,219,242)",
        SEGISMAP: "#a5bfdd",
        HILLSHADEMIX: "rgb(151,219,242)",
        IMAGENLSC: "#183c4a"
    };
    TGOS.MapTypeMaxZoomLevel = {
        EPSG3825: {
            TGOSMAP: 13,
            SEGISMAP: 12,
            NLSCMAP: 13
        },
        EPSG3826: {
            TGOSMAP: 13,
            SEGISMAP: 12,
            NLSCMAP: 13,
            F2IMAGE: 11,
            HILLSHADE: 8,
            ROADMAP: 11,
            HILLSHADEMIX: 8
        },
        EPSG3857: {
            TGOSMAP: 19,
            SEGISMAP: 18,
            NLSCMAP: 19,
            F2IMAGE: 17,
            HILLSHADE: 13,
            ROADMAP: 17,
            HILLSHADEMIX: 13,
            IMAGENLSC: 19
        }
    };
    var a = TGOS.TGMapServiceId;
    a.LANDUSE = "LANDUSE";
    a.REGION = "REGION";
    a.REGION_119 = "REGION_119";
    a.EOC = "EOC";
    a.FIREDEPARTMENT = "FIREDEPARTMENT";
    a.POLICEDEPARTMENT = "POLICEDEPARTMENT";
    a.NASC = "NASC";
    a.SOCIALSERVICE = "SOCIALSERVICE";
    a.SHELTERS = "SHELTERS";
    a.NASC_LANDING = "NASC_LANDING";
    a.INDUSTRY = "INDUSTRY";
    a.SCHOOL = "SCHOOL";
    a.DEBRISFLOW_P = "DEBRISFLOW_P";
    a.MEDICAL =
        "MEDICAL";
    a = TGOS.TGMapId;
    a.LANDUSE = "LANDUSE";
    a.COUNTY = "COUNTY";
    a.TOWN = "TOWN";
    a.VILLAGE = "VILLAGE";
    a.EOC = "EOC";
    a.FIREDEPARTMENT = "FIREDEPARTMENT";
    a.POLICEDEPARTMENT = "POLICEDEPARTMENT";
    a.NASC = "NASC";
    a.SOCIALSERVICE = "SOCIALSERVICE";
    a.SHELTERS = "SHELTERS";
    a.NASC_LANDING = "NASC_LANDING";
    a.INDUSTRY = "INDUSTRY";
    a.INDUSTRY_A = "INDUSTRY_A";
    a.INDUSTRY_B = "INDUSTRY_B";
    a.INDUSTRY_C = "INDUSTRY_C";
    a.INDUSTRY_D = "INDUSTRY_D";
    a.INDUSTRY_E = "INDUSTRY_E";
    a.INDUSTRY_F = "INDUSTRY_F";
    a.INDUSTRY_G = "INDUSTRY_G";
    a.INDUSTRY_H = "INDUSTRY_H";
    a.INDUSTRY_I = "INDUSTRY_I";
    a.INDUSTRY_J = "INDUSTRY_J";
    a.INDUSTRY_K = "INDUSTRY_K";
    a.INDUSTRY_L = "INDUSTRY_L";
    a.INDUSTRY_M = "INDUSTRY_M";
    a.INDUSTRY_N = "INDUSTRY_N";
    a.INDUSTRY_O = "INDUSTRY_O";
    a.INDUSTRY_P = "INDUSTRY_P";
    a.INDUSTRY_Q = "INDUSTRY_Q";
    a.INDUSTRY_R = "INDUSTRY_R";
    a.INDUSTRY_S = "INDUSTRY_S";
    a.MEDICAL = "MEDICAL";
    a.SCHOOL = "SCHOOL";
    a.SCHOOL_A = "SCHOOL_A";
    a.SCHOOL_B = "SCHOOL_B";
    a.SCHOOL_C = "SCHOOL_C";
    a.SCHOOL_D = "SCHOOL_D";
    a.SCHOOL_E = "SCHOOL_E";
    a.SCHOOL_F = "SCHOOL_F";
    a.SCHOOL_G = "SCHOOL_G";
    a.SCHOOL_H = "SCHOOL_H";
    a.SCHOOL_I =
        "SCHOOL_I";
    a.SCHOOL_J = "SCHOOL_J";
    a.SCHOOL_K = "SCHOOL_K";
    a.SCHOOL_L = "SCHOOL_L";
    a.SCHOOL_M = "SCHOOL_M";
    a.SCHOOL_N = "SCHOOL_N";
    a.DEBRISFLOW_P = "DEBRISFLOW_P";
    TGOS.MapIdInfo.DEBRISFLOW_P = {
        resource: "DEBRISFLOW_P.cfg",
        layers: {
            DEBRISFLOW_P: {
                name: "dbo.DEBRISFLOW_P",
                oname: "dbo.DEBRISFLOW_P_201208A",
                identify: {
                    DEBRISNO: "DEBRISNO",
                    COUNTY01: "COUNTY01",
                    TOWN01: "TOWN01",
                    VILL01: "VILL01",
                    NAME: "NAME",
                    MARK: "MARK",
                    ROADNAME: "ROADNAME",
                    DW_NUMBER: "DW_NUMBER",
                    POTENTIAL: "POTENTIAL"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() +
                        "TGOS_API/ThemeLegend/18_DEBRISFLOW_P.png",
                    symbolName: "\u571f\u77f3\u6d41\u6f5b\u52e2\u6eaa\u6d41\u5716"
                }]
            }
        }
    };
    TGOS.MapIdInfo.LANDUSE = {
        tileoverlay: {
            path: getWebProtocal() + getAPIPath() + "/TGOS_WMTS/TWD97/SimpleWMTS_LANDUSE3826.aspx",
            layer: "Map",
            matrixSet: "TGOS97_LANDUSE.cfg"
        },
        resource: "LANDUSE.cfg",
        layers: {
            LANDUSE: {
                name: "dbo.LANDUSE",
                oname: "dbo.LANDUSE_201207A",
                identify: {
                    LCODE_C1: "LCODE_C1",
                    LCODE_C2: "LCODE_C2",
                    LCODE_C3: "LCODE_C3"
                }
            }
        }
    };
    TGOS.MapIdInfo.REGION = {
        path: getWebProtocal() + getServicePath() + "REGION/Agent.aspx",
        resource: "REGION.cfg",
        layers: {
            COUNTY: {
                name: "dbo.COUNTY",
                oname: "dbo.COUNTY_201211C",
                identify: {
                    PRO_ID: "PRO_ID",
                    COUNTY_ID: "COUNTY_ID",
                    COUNTY: "COUNTY"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/16_REGION_A.png",
                    symbolName: "\u7e23\u5e02"
                }]
            },
            TOWN: {
                name: "dbo.TOWN",
                oname: "dbo.TOWN_201211C",
                identify: {
                    PRO_ID: "PRO_ID",
                    COUNTY_ID: "COUNTY_ID",
                    TOWN_ID: "TOWN_ID",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/16_REGION_B.png",
                    symbolName: "\u9109\u93ae\u5e02\u5340"
                }]
            },
            VILLAGE: {
                name: "dbo.VILLAGE",
                oname: "dbo.VILLAGE_201211C",
                identify: {
                    UID: "UID",
                    PRO_ID: "PRO_ID",
                    COUNTY_ID: "COUNTY_ID",
                    TOWN_ID: "TOWN_ID",
                    VILLAGE_ID: "VILLAGE_ID",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    VILLAGE: "VILLAGE"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/16_REGION_C.png",
                    symbolName: "\u6751\u91cc"
                }]
            }
        }
    };
    TGOS.MapIdInfo.REGION_119 = {
        path: getWebProtocal() + getServicePath() + "REGION/Agent.aspx",
        resource: "REGION_119.cfg",
        layers: {
            COUNTY: {
                name: "dbo.COUNTY",
                oname: "dbo.COUNTY_201211C",
                identify: {
                    PRO_ID: "PRO_ID",
                    COUNTY_ID: "COUNTY_ID",
                    COUNTY: "COUNTY"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/16_REGION_A.png",
                    symbolName: "\u7e23\u5e02"
                }]
            },
            TOWN: {
                name: "dbo.TOWN",
                oname: "dbo.TOWN_201211C",
                identify: {
                    PRO_ID: "PRO_ID",
                    COUNTY_ID: "COUNTY_ID",
                    TOWN_ID: "TOWN_ID",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/16_REGION_B.png",
                    symbolName: "\u9109\u93ae\u5e02\u5340"
                }]
            },
            VILLAGE: {
                name: "dbo.VILLAGE",
                oname: "dbo.VILLAGE_201211C",
                identify: {
                    UID: "UID",
                    PRO_ID: "PRO_ID",
                    COUNTY_ID: "COUNTY_ID",
                    TOWN_ID: "TOWN_ID",
                    VILLAGE_ID: "VILLAGE_ID",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    VILLAGE: "VILLAGE"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/16_REGION_C.png",
                    symbolName: "\u6751\u91cc"
                }]
            }
        }
    };
    TGOS.MapIdInfo.EOC = {
        path: getWebProtocal() + getServicePath() + "EOC/Agent.aspx",
        resource: "EOC.cfg",
        layers: {
            EOC: {
                name: "dbo.EOC",
                oname: "dbo.EOC_201205A",
                identify: {
                    NAME: "NAME",
                    ADDRESS: "ADDRESS",
                    CONTACT: "CONTACT",
                    NOTE: "NOTE"
                },
                buffer: {
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    CONTACT: "CONTACT",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    CONTACT: "CONTACT",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/21_EOC.png",
                    symbolName: "\u4e2d\u592e\u8207\u5730\u65b9\u7dca\u6025\u61c9\u8b8a\u4e2d\u5fc3"
                }]
            }
        }
    };
    TGOS.MapIdInfo.FIREDEPARTMENT = {
        resource: "FIREDEPARTMENT.cfg",
        layers: {
            FIREDEPARTMENT: {
                name: "dbo.FIREDEPARTMENT",
                oname: "dbo.FIREDEPARTMENT_201206A",
                identify: {
                    TYPE: "TYPE",
                    NAME: "NAME",
                    ADDRESS: "ADDRESS",
                    CONTACT: "CONTACT"
                },
                buffer: {
                    TYPE: "TYPE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    CONTACT: "CONTACT",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    TYPE: "TYPE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    CONTACT: "CONTACT",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/22_FIREDEPARTMENT.png",
                    symbolName: "\u5168\u570b\u6d88\u9632\u6a5f\u95dc"
                }]
            }
        }
    };
    TGOS.MapIdInfo.POLICEDEPARTMENT = {
        resource: "POLICEDEPARTMENT.cfg",
        layers: {
            POLICEDEPARTMENT: {
                name: "dbo.POLICEDEPARTMENT",
                oname: "dbo.POLICEDEPARTMENT_201208A",
                identify: {
                    NAME: "NAME",
                    CONTACT: "CONTACT",
                    ADDRESS: "ADDRESS"
                },
                buffer: {
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    CONTACT: "CONTACT",
                    ADDRESS: "ADDRESS",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    CONTACT: "CONTACT",
                    ADDRESS: "ADDRESS",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/23_POLICEDEPARTMENT.png",
                    symbolName: "\u5168\u570b\u8b66\u5bdf\u6a5f\u95dc"
                }]
            }
        }
    };
    TGOS.MapIdInfo.NASC = {
        resource: "NASC.cfg",
        layers: {
            NASC: {
                name: "dbo.NASC",
                oname: "dbo.NASC_201204A",
                identify: {
                    NAME1: "NAME1",
                    NAME2: "NAME2",
                    ADDRESS: "ADDRESS"
                },
                buffer: {
                    NAME2: "NAME2",
                    NAME1: "NAME1",
                    AREA: "AREA",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    NAME2: "NAME2",
                    NAME1: "NAME1",
                    AREA: "AREA",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/24_NASC.png",
                    symbolName: "\u7a7a\u4e2d\u52e4\u52d9\u7e3d\u968a"
                }]
            }
        }
    };
    TGOS.MapIdInfo.SOCIALSERVICE = {
        resource: "SOCIALSERVICE.cfg",
        layers: {
            SOCIALSERVICE: {
                name: "dbo.SOCIALSERVICE",
                oname: "dbo.SOCIALSERVICE_201206A",
                identify: {
                    TYPE: "TYPE",
                    NAME: "NAME",
                    ADDRESS: "ADDRESS",
                    CHARGE: "CHARGE",
                    CONTACT: "CONTACT",
                    FILINGDATE: "FILINGDATE",
                    URL: "URL",
                    REMARK: "REMARK"
                },
                buffer: {
                    TYPE: "TYPE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    CHARGE: "CHARGE",
                    CONTACT: "CONTACT",
                    FILINGDATE: "FILINGDATE",
                    URL: "URL",
                    REMARK: "REMARK",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    TYPE: "TYPE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    CHARGE: "CHARGE",
                    CONTACT: "CONTACT",
                    FILINGDATE: "FILINGDATE",
                    URL: "URL",
                    REMARK: "REMARK",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/25_AGED.png",
                    symbolName: "\u8001\u4eba\u798f\u5229\u6a5f\u69cb"
                }, {
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/25_DISABLED.png",
                    symbolName: "\u8eab\u969c\u6a5f\u69cb"
                }]
            }
        }
    };
    TGOS.MapIdInfo.SHELTERS = {
        resource: "SHELTERS.cfg",
        layers: {
            SHELTERS: {
                oname: "dbo.SHELTERS_201204A",
                name: "dbo.SHELTERS",
                identify: {
                    ID: "ID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    FLOODING: "FLOODING",
                    EARTHQUAKE: "EARTHQUAKE",
                    DEBRISFLOW: "DEBRISFLOW",
                    TSUNAMI: "TSUNAMI",
                    INTERIOR: "INTERIOR",
                    OUTDOOR: "OUTDOOR",
                    WEAKPEOPLE: "WEAKPEOPLE",
                    NUMBERS: "NUMBERS",
                    NUCLEAR: "NUCLEAR"
                },
                buffer: {
                    ID: "ID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    FLOODING: "FLOODING",
                    EARTHQUAKE: "EARTHQUAKE",
                    DEBRISFLOW: "DEBRISFLOW",
                    TSUNAMI: "TSUNAMI",
                    INTERIOR: "INTERIOR",
                    OUTDOOR: "OUTDOOR",
                    WEAKPEOPLE: "WEAKPEOPLE",
                    NUMBERS: "NUMBERS",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N",
                    NUCLEAR: "NUCLEAR"
                },
                query: {
                    ID: "ID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    FLOODING: "FLOODING",
                    EARTHQUAKE: "EARTHQUAKE",
                    DEBRISFLOW: "DEBRISFLOW",
                    TSUNAMI: "TSUNAMI",
                    INTERIOR: "INTERIOR",
                    OUTDOOR: "OUTDOOR",
                    WEAKPEOPLE: "WEAKPEOPLE",
                    NUMBERS: "NUMBERS",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N",
                    NUCLEAR: "NUCLEAR"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/28_SHELTERS.png",
                    symbolName: "\u907f\u96e3\u6536\u5bb9\u8655\u6240"
                }]
            }
        }
    };
    TGOS.MapIdInfo.NASC_LANDING = {
        resource: "NASC_LANDING.cfg",
        layers: {
            NASC_LANDING: {
                name: "dbo.NASC_LANDING",
                oname: "dbo.NASC_LANDING_201206A",
                identify: {
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN"
                },
                buffer: {
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/29_NASC_LANDING.png",
                    symbolName: "\u76f4\u5347\u6a5f\u7dca\u6025\u6551\u96e3\u81e8\u6642\u8d77\u964d\u5834"
                }]
            }
        }
    };
    TGOS.MapIdInfo.INDUSTRY = {
        resource: "INDUSTRY.cfg",
        layers: {
            INDUSTRY: {
                name: "dbo.INDUSTRY",
                oname: "dbo.INDUSTRY_201204A",
                identify: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI"
                },
                buffer: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/31_INDUSTRY.png",
                    symbolName: "\u5de5\u5546\u4f01\u696d"
                }]
            },
            INDUSTRY_A: {
                name: "dbo.INDUSTRY_A",
                oname: "dbo.INDUSTRY_A",
                identify: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI"
                },
                buffer: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() +
                        getAPIPath() + "TGOS_API/ThemeLegend/31_INDUSTRY_A.png",
                    symbolName: "\u5de5\u5546\u4f01\u696d\u2500\u8fb2\u3001\u6797\u3001\u6f01\u3001\u7267\u696d"
                }]
            },
            INDUSTRY_B: {
                name: "dbo.INDUSTRY_B",
                oname: "dbo.INDUSTRY_B",
                identify: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI"
                },
                buffer: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/31_INDUSTRY_B.png",
                    symbolName: "\u5de5\u5546\u4f01\u696d\u2500\u7926\u696d\u53ca\u571f\u77f3\u63a1\u53d6\u696d"
                }]
            },
            INDUSTRY_C: {
                name: "dbo.INDUSTRY_C",
                oname: "dbo.INDUSTRY_C",
                identify: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI"
                },
                buffer: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/31_INDUSTRY_C.png",
                    symbolName: "\u5de5\u5546\u4f01\u696d\u2500\u88fd\u9020\u696d"
                }]
            },
            INDUSTRY_D: {
                name: "dbo.INDUSTRY_D",
                oname: "dbo.INDUSTRY_D",
                identify: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI"
                },
                buffer: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/31_INDUSTRY_D.png",
                    symbolName: "\u5de5\u5546\u4f01\u696d\u2500\u96fb\u529b\u53ca\u71c3\u6c23\u4f9b\u61c9\u696d"
                }]
            },
            INDUSTRY_E: {
                name: "dbo.INDUSTRY_E",
                oname: "dbo.INDUSTRY_E",
                identify: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI"
                },
                buffer: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/31_INDUSTRY_E.png",
                    symbolName: "\u5de5\u5546\u4f01\u696d\u2500\u7528\u6c34\u4f9b\u61c9\u53ca\u6c61\u67d3\u6574\u6cbb\u696d"
                }]
            },
            INDUSTRY_F: {
                name: "dbo.INDUSTRY_F",
                oname: "dbo.INDUSTRY_F",
                identify: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI"
                },
                buffer: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/31_INDUSTRY_F.png",
                    symbolName: "\u5de5\u5546\u4f01\u696d\u2500\u71df\u9020\u696d"
                }]
            },
            INDUSTRY_G: {
                name: "dbo.INDUSTRY_G",
                oname: "dbo.INDUSTRY_G",
                identify: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI"
                },
                buffer: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/31_INDUSTRY_G.png",
                    symbolName: "\u5de5\u5546\u4f01\u696d\u2500\u6279\u767c\u53ca\u96f6\u552e\u696d"
                }]
            },
            INDUSTRY_H: {
                name: "dbo.INDUSTRY_H",
                oname: "dbo.INDUSTRY_H",
                identify: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI"
                },
                buffer: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/31_INDUSTRY_H.png",
                    symbolName: "\u5de5\u5546\u4f01\u696d\u2500\u904b\u8f38\u53ca\u5009\u5132\u696d"
                }]
            },
            INDUSTRY_I: {
                name: "dbo.INDUSTRY_I",
                oname: "dbo.INDUSTRY_I",
                identify: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI"
                },
                buffer: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/31_INDUSTRY_I.png",
                    symbolName: "\u5de5\u5546\u4f01\u696d\u2500\u4f4f\u5bbf\u53ca\u9910\u98f2\u696d"
                }]
            },
            INDUSTRY_J: {
                name: "dbo.INDUSTRY_J",
                oname: "dbo.INDUSTRY_J",
                identify: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI"
                },
                buffer: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/31_INDUSTRY_J.png",
                    symbolName: "\u5de5\u5546\u4f01\u696d\u2500\u8cc7\u8a0a\u53ca\u901a\u8a0a\u50b3\u64ad\u696d"
                }]
            },
            INDUSTRY_K: {
                name: "dbo.INDUSTRY_K",
                oname: "dbo.INDUSTRY_K",
                identify: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI"
                },
                buffer: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/31_INDUSTRY_K.png",
                    symbolName: "\u5de5\u5546\u4f01\u696d\u2500\u91d1\u878d\u53ca\u4fdd\u96aa\u696d"
                }]
            },
            INDUSTRY_L: {
                name: "dbo.INDUSTRY_L",
                oname: "dbo.INDUSTRY_L",
                identify: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI"
                },
                buffer: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() +
                        getAPIPath() + "TGOS_API/ThemeLegend/31_INDUSTRY_L.png",
                    symbolName: "\u5de5\u5546\u4f01\u696d\u2500\u4e0d\u52d5\u7522\u696d"
                }]
            },
            INDUSTRY_M: {
                name: "dbo.INDUSTRY_M",
                oname: "dbo.INDUSTRY_M",
                identify: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI"
                },
                buffer: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/31_INDUSTRY_M.png",
                    symbolName: "\u5de5\u5546\u4f01\u696d\u2500\u5c08\u696d\u3001\u79d1\u5b78\u53ca\u6280\u8853\u670d\u52d9\u696d"
                }]
            },
            INDUSTRY_N: {
                name: "dbo.INDUSTRY_N",
                oname: "dbo.INDUSTRY_N",
                identify: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI"
                },
                buffer: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/31_INDUSTRY_N.png",
                    smybolName: "\u5de5\u5546\u4f01\u696d\u2500\u652f\u63f4\u670d\u52d9\u696d"
                }]
            },
            INDUSTRY_O: {
                name: "dbo.INDUSTRY_O",
                oname: "dbo.INDUSTRY_O",
                identify: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI"
                },
                buffer: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/31_INDUSTRY_O.png",
                    symbolName: "\u5de5\u5546\u4f01\u696d\u2500\u516c\u5171\u884c\u653f\u53ca\u570b\u9632\uff1b\u5f37\u5236\u6027\u793e\u6703\u5b89\u5168"
                }]
            },
            INDUSTRY_P: {
                name: "dbo.INDUSTRY_P",
                oname: "dbo.INDUSTRY_P",
                identify: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI"
                },
                buffer: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/31_INDUSTRY_P.png",
                    symbolName: "\u5de5\u5546\u4f01\u696d\u2500\u6559\u80b2\u670d\u52d9\u696d"
                }]
            },
            INDUSTRY_Q: {
                name: "dbo.INDUSTRY_Q",
                oname: "dbo.INDUSTRY_Q",
                identify: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI"
                },
                buffer: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/31_INDUSTRY_Q.png",
                    symbolName: "\u5de5\u5546\u4f01\u696d\u2500\u91ab\u7642\u4fdd\u5065\u53ca\u793e\u6703\u5de5\u4f5c\u670d\u52d9\u696d"
                }]
            },
            INDUSTRY_R: {
                name: "dbo.INDUSTRY_R",
                oname: "dbo.INDUSTRY_R",
                identify: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI"
                },
                buffer: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/31_INDUSTRY_R.png",
                    symbolName: "\u5de5\u5546\u4f01\u696d\u2500\u85dd\u8853\u3001\u5a1b\u6a02\u53ca\u4f11\u9592\u670d\u52d9\u696d"
                }]
            },
            INDUSTRY_S: {
                name: "dbo.INDUSTRY_S",
                oname: "dbo.INDUSTRY_S",
                identify: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI"
                },
                buffer: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    RID: "RID",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    COMMERCEKI: "COMMERCEKI",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/31_INDUSTRY_S.png",
                    symbolName: "\u5de5\u5546\u4f01\u696d\u2500\u5176\u4ed6\u670d\u52d9\u696d"
                }]
            }
        }
    };
    TGOS.MapIdInfo.MEDICAL = {
        resource: "MEDICAL.cfg",
        layers: {
            MEDICAL: {
                name: "dbo.MEDICAL",
                oname: "dbo.MEDICAL_201304A",
                identify: {
                    NAME: "NAME",
                    ADDRESS: "ADDRESS",
                    CHARGE: "CHARGE",
                    CONTACT: "CONTACT"
                },
                buffer: {
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    CHARGE: "CHARGE",
                    CONTACT: "CONTACT",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    CHARGE: "CHARGE",
                    CONTACT: "CONTACT",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/27_MEDICAL.png",
                    symbolName: "\u91ab\u7642\u9662\u6240"
                }]
            }
        }
    };
    TGOS.MapIdInfo.SCHOOL = {
        resource: "SCHOOL.cfg",
        layers: {
            SCHOOL: {
                name: "dbo.SCHOOL",
                oname: "dbo.SCHOOL_201207A",
                identify: {
                    TYPE: "TYPE",
                    NAME: "NAME",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    WEBSITE: "WEBSITE"
                },
                buffer: {
                    TYPE: "TYPE",
                    CODE: "CODE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    AREA: "AREA",
                    WEBSITE: "WEBSITE",
                    CLASS: "CLASS",
                    AWAY: "AWAY",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    TYPE: "TYPE",
                    CODE: "CODE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    AREA: "AREA",
                    WEBSITE: "WEBSITE",
                    CLASS: "CLASS",
                    AWAY: "AWAY",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/32_SCHOOL.png",
                    symbolName: "\u5404\u7d1a\u5b78\u6821"
                }]
            },
            SCHOOL_A: {
                name: "dbo.SCHOOL_A",
                oname: "dbo.SCHOOL_A",
                identify: {
                    TYPE: "TYPE",
                    NAME: "NAME",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    WEBSITE: "WEBSITE"
                },
                buffer: {
                    TYPE: "TYPE",
                    CODE: "CODE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    AREA: "AREA",
                    WEBSITE: "WEBSITE",
                    CLASS: "CLASS",
                    AWAY: "AWAY",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    TYPE: "TYPE",
                    CODE: "CODE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    AREA: "AREA",
                    WEBSITE: "WEBSITE",
                    CLASS: "CLASS",
                    AWAY: "AWAY",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/32_SCHOOL_A.png",
                    symbolName: "\u5404\u7d1a\u5b78\u6821\u2500\u516c\u7acb\u5e7c\u7a1a\u5712"
                }]
            },
            SCHOOL_B: {
                name: "dbo.SCHOOL_B",
                oname: "dbo.SCHOOL_B",
                identify: {
                    TYPE: "TYPE",
                    NAME: "NAME",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    WEBSITE: "WEBSITE"
                },
                buffer: {
                    TYPE: "TYPE",
                    CODE: "CODE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    AREA: "AREA",
                    WEBSITE: "WEBSITE",
                    CLASS: "CLASS",
                    AWAY: "AWAY",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    TYPE: "TYPE",
                    CODE: "CODE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    AREA: "AREA",
                    WEBSITE: "WEBSITE",
                    CLASS: "CLASS",
                    AWAY: "AWAY",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/32_SCHOOL_B.png",
                    symbolName: "\u5404\u7d1a\u5b78\u6821\u2500\u570b\u6c11\u5c0f\u5b78"
                }]
            },
            SCHOOL_C: {
                name: "dbo.SCHOOL_C",
                oname: "dbo.SCHOOL_C",
                identify: {
                    TYPE: "TYPE",
                    NAME: "NAME",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    WEBSITE: "WEBSITE"
                },
                buffer: {
                    TYPE: "TYPE",
                    CODE: "CODE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    AREA: "AREA",
                    WEBSITE: "WEBSITE",
                    CLASS: "CLASS",
                    AWAY: "AWAY",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    TYPE: "TYPE",
                    CODE: "CODE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    AREA: "AREA",
                    WEBSITE: "WEBSITE",
                    CLASS: "CLASS",
                    AWAY: "AWAY",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/32_SCHOOL_C.png",
                    symbolName: "\u5404\u7d1a\u5b78\u6821\u2500\u9644\u8a2d\u570b\u6c11\u5c0f\u5b78"
                }]
            },
            SCHOOL_D: {
                name: "dbo.SCHOOL_D",
                oname: "dbo.SCHOOL_D",
                identify: {
                    TYPE: "TYPE",
                    NAME: "NAME",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    WEBSITE: "WEBSITE"
                },
                buffer: {
                    TYPE: "TYPE",
                    CODE: "CODE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    AREA: "AREA",
                    WEBSITE: "WEBSITE",
                    CLASS: "CLASS",
                    AWAY: "AWAY",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    TYPE: "TYPE",
                    CODE: "CODE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    AREA: "AREA",
                    WEBSITE: "WEBSITE",
                    CLASS: "CLASS",
                    AWAY: "AWAY",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/32_SCHOOL_D.png",
                    symbolName: "\u5404\u7d1a\u5b78\u6821\u2500\u570b\u6c11\u4e2d\u5b78"
                }]
            },
            SCHOOL_E: {
                name: "dbo.SCHOOL_E",
                oname: "dbo.SCHOOL_E",
                identify: {
                    TYPE: "TYPE",
                    NAME: "NAME",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    WEBSITE: "WEBSITE"
                },
                buffer: {
                    TYPE: "TYPE",
                    CODE: "CODE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    AREA: "AREA",
                    WEBSITE: "WEBSITE",
                    CLASS: "CLASS",
                    AWAY: "AWAY",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    TYPE: "TYPE",
                    CODE: "CODE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    AREA: "AREA",
                    WEBSITE: "WEBSITE",
                    CLASS: "CLASS",
                    AWAY: "AWAY",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/32_SCHOOL_E.png",
                    symbolName: "\u5404\u7d1a\u5b78\u6821\u2500\u9644\u8a2d\u570b\u6c11\u4e2d\u5b78"
                }]
            },
            SCHOOL_F: {
                name: "dbo.SCHOOL_F",
                oname: "dbo.SCHOOL_F",
                identify: {
                    TYPE: "TYPE",
                    NAME: "NAME",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    WEBSITE: "WEBSITE"
                },
                buffer: {
                    TYPE: "TYPE",
                    CODE: "CODE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    AREA: "AREA",
                    WEBSITE: "WEBSITE",
                    CLASS: "CLASS",
                    AWAY: "AWAY",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    TYPE: "TYPE",
                    CODE: "CODE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    AREA: "AREA",
                    WEBSITE: "WEBSITE",
                    CLASS: "CLASS",
                    AWAY: "AWAY",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() +
                        getAPIPath() + "TGOS_API/ThemeLegend/32_SCHOOL_F.png",
                    symbolName: "\u5404\u7d1a\u5b78\u6821\u2500\u9ad8\u7d1a\u4e2d\u5b78"
                }]
            },
            SCHOOL_G: {
                name: "dbo.SCHOOL_G",
                oname: "dbo.SCHOOL_G",
                identify: {
                    TYPE: "TYPE",
                    NAME: "NAME",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    WEBSITE: "WEBSITE"
                },
                buffer: {
                    TYPE: "TYPE",
                    CODE: "CODE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    AREA: "AREA",
                    WEBSITE: "WEBSITE",
                    CLASS: "CLASS",
                    AWAY: "AWAY",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    TYPE: "TYPE",
                    CODE: "CODE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    AREA: "AREA",
                    WEBSITE: "WEBSITE",
                    CLASS: "CLASS",
                    AWAY: "AWAY",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/32_SCHOOL_G.png",
                    symbolName: "\u5404\u7d1a\u5b78\u6821\u2500\u9ad8\u7d1a\u8077\u696d\u5b78\u6821"
                }]
            },
            SCHOOL_H: {
                name: "dbo.SCHOOL_H",
                oname: "dbo.SCHOOL_H",
                identify: {
                    TYPE: "TYPE",
                    NAME: "NAME",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    WEBSITE: "WEBSITE"
                },
                buffer: {
                    TYPE: "TYPE",
                    CODE: "CODE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    AREA: "AREA",
                    WEBSITE: "WEBSITE",
                    CLASS: "CLASS",
                    AWAY: "AWAY",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    TYPE: "TYPE",
                    CODE: "CODE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    AREA: "AREA",
                    WEBSITE: "WEBSITE",
                    CLASS: "CLASS",
                    AWAY: "AWAY",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/32_SCHOOL_H.png",
                    symbolName: "\u5404\u7d1a\u5b78\u6821\u2500\u5927\u5c08\u9662\u6821"
                }]
            },
            SCHOOL_I: {
                name: "dbo.SCHOOL_I",
                oname: "dbo.SCHOOL_I",
                identify: {
                    TYPE: "TYPE",
                    NAME: "NAME",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    WEBSITE: "WEBSITE"
                },
                buffer: {
                    TYPE: "TYPE",
                    CODE: "CODE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    AREA: "AREA",
                    WEBSITE: "WEBSITE",
                    CLASS: "CLASS",
                    AWAY: "AWAY",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    TYPE: "TYPE",
                    CODE: "CODE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    AREA: "AREA",
                    WEBSITE: "WEBSITE",
                    CLASS: "CLASS",
                    AWAY: "AWAY",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/32_SCHOOL_I.png",
                    symbolName: "\u5404\u7d1a\u5b78\u6821\u2500\u5b97\u6559\u7814\u4fee\u5b78\u9662"
                }]
            },
            SCHOOL_J: {
                name: "dbo.SCHOOL_J",
                oname: "dbo.SCHOOL_J",
                identify: {
                    TYPE: "TYPE",
                    NAME: "NAME",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    WEBSITE: "WEBSITE"
                },
                buffer: {
                    TYPE: "TYPE",
                    CODE: "CODE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    AREA: "AREA",
                    WEBSITE: "WEBSITE",
                    CLASS: "CLASS",
                    AWAY: "AWAY",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    TYPE: "TYPE",
                    CODE: "CODE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    AREA: "AREA",
                    WEBSITE: "WEBSITE",
                    CLASS: "CLASS",
                    AWAY: "AWAY",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/32_SCHOOL_J.png",
                    symbolName: "\u5404\u7d1a\u5b78\u6821\u2500\u8ecd\u8b66\u5927\u5c08\u9662\u6821"
                }]
            },
            SCHOOL_K: {
                name: "dbo.SCHOOL_K",
                oname: "dbo.SCHOOL_K",
                identify: {
                    TYPE: "TYPE",
                    NAME: "NAME",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    WEBSITE: "WEBSITE"
                },
                buffer: {
                    TYPE: "TYPE",
                    CODE: "CODE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    AREA: "AREA",
                    WEBSITE: "WEBSITE",
                    CLASS: "CLASS",
                    AWAY: "AWAY",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    TYPE: "TYPE",
                    CODE: "CODE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    AREA: "AREA",
                    WEBSITE: "WEBSITE",
                    CLASS: "CLASS",
                    AWAY: "AWAY",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/32_SCHOOL_K.png",
                    symbolName: "\u5404\u7d1a\u5b78\u6821\u2500\u7279\u6b8a\u6559\u80b2\u5b78\u6821"
                }]
            },
            SCHOOL_L: {
                name: "dbo.SCHOOL_L",
                oname: "dbo.SCHOOL_L",
                identify: {
                    TYPE: "TYPE",
                    NAME: "NAME",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    WEBSITE: "WEBSITE"
                },
                buffer: {
                    TYPE: "TYPE",
                    CODE: "CODE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    AREA: "AREA",
                    WEBSITE: "WEBSITE",
                    CLASS: "CLASS",
                    AWAY: "AWAY",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    TYPE: "TYPE",
                    CODE: "CODE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    AREA: "AREA",
                    WEBSITE: "WEBSITE",
                    CLASS: "CLASS",
                    AWAY: "AWAY",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/32_SCHOOL_L.png",
                    symbolName: "\u5404\u7d1a\u5b78\u6821\u2500\u570b\u4e2d\u5c0f\u88dc\u6821"
                }]
            },
            SCHOOL_M: {
                name: "dbo.SCHOOL_M",
                oname: "dbo.SCHOOL_M",
                identify: {
                    TYPE: "TYPE",
                    NAME: "NAME",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    WEBSITE: "WEBSITE"
                },
                buffer: {
                    TYPE: "TYPE",
                    CODE: "CODE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    AREA: "AREA",
                    WEBSITE: "WEBSITE",
                    CLASS: "CLASS",
                    AWAY: "AWAY",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    TYPE: "TYPE",
                    CODE: "CODE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    AREA: "AREA",
                    WEBSITE: "WEBSITE",
                    CLASS: "CLASS",
                    AWAY: "AWAY",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/32_SCHOOL_M.png",
                    symbolName: "\u5404\u7d1a\u5b78\u6821\u2500\u9ad8\u4e2d\u8077\u9032\u4fee\u5b78\u6821"
                }]
            },
            SCHOOL_N: {
                name: "dbo.SCHOOL_N",
                oname: "dbo.SCHOOL_N",
                identify: {
                    TYPE: "TYPE",
                    NAME: "NAME",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    WEBSITE: "WEBSITE"
                },
                buffer: {
                    TYPE: "TYPE",
                    CODE: "CODE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    AREA: "AREA",
                    WEBSITE: "WEBSITE",
                    CLASS: "CLASS",
                    AWAY: "AWAY",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                query: {
                    TYPE: "TYPE",
                    CODE: "CODE",
                    NAME: "NAME",
                    COUNTY: "COUNTY",
                    TOWN: "TOWN",
                    ADDRESS: "ADDRESS",
                    TEL: "TEL",
                    AREA: "AREA",
                    WEBSITE: "WEBSITE",
                    CLASS: "CLASS",
                    AWAY: "AWAY",
                    NOTE: "NOTE",
                    X_97121: "X_97121",
                    Y_97121: "Y_97121",
                    X_97119: "X_97119",
                    Y_97119: "Y_97119",
                    E: "E",
                    N: "N"
                },
                legends: [{
                    iconUrl: getWebProtocal() + getAPIPath() + "TGOS_API/ThemeLegend/32_SCHOOL_N.png",
                    symbolName: "\u5404\u7d1a\u5b78\u6821\u2500\u7a7a\u5927\u53ca\u5927\u5c08\u6821\u9662\u9644\u8a2d\u9032\u4fee\u5b78\u6821"
                }]
            }
        }
    }
})();
TGOS.PROXY_LOCAL = "http://localhost:49937/tgproxy.ashx";
TGOS.PROXY_SERVICE = getWebProtocal() + getAPIPath() + "proxyservice/proxy.aspx";
TGOS.PROXY_SERVICE2 = getWebProtocal() + getAPIPath() + "proxyservice/tgproxy.ashx";
TGOS.LOCATOR_SERVICE = getWebProtocal() + getServicePath() + "addresslocator/locate.aspx";
TGOS.STATISTICS_SERVICE = getWebProtocal() + getAPIPath() + "TGDistrict/statistics.aspx";
TGOS.STATISTICS_SERVICE2 = getWebProtocal() + getAPIPath() + "TGDistrict/statistics2.aspx";
TGOS.ADDRESSLOCATE_SERVICE = getWebProtocal() + getServicePath() + "TGAddress/TGAddress.aspx";
TGOS.QUERY_SERVICE = getWebProtocal() + getServicePath() + "TGQuery/TGQuery.ashx";
TGOS.TGKML_ATTR_SERVICE = getWebProtocal() + getAPIPath() + "SGSPWS/TGKMLService.ashx/TGQueryService";
TGOS.TGKML_BUFFER_SERVICE = getWebProtocal() + getAPIPath() + "SGSPWS/TGKMLService.ashx/TGBufferService";
TGOS.TGBufferStatus = {
    ERROR: "ERROR",
    INVALID_REQUEST: "INVALID_REQUEST",
    OK: "OK",
    OVER_QUERY_LIMIT: "OVER_QUERY_LIMIT",
    REQUEST_DENIED: "REQUEST_DENIED",
    UNKNOWN_ERROR: "UNKNOWN_ERROR",
    ZERO_RESULTS: "ZERO_RESULTS"
};
TGOS.TGQueryStatus = {
    ERROR: "ERROR",
    INVALID_REQUEST: "INVALID_REQUEST",
    OK: "OK",
    OVER_QUERY_LIMIT: "OVER_QUERY_LIMIT",
    REQUEST_DENIED: "REQUEST_DENIED",
    UNKNOWN_ERROR: "UNKNOWN_ERROR",
    ZERO_RESULTS: "ZERO_RESULTS"
};
TGOS.TGIdentifyStatus = {
    ERROR: "ERROR",
    INVALID_REQUEST: "INVALID_REQUEST",
    OK: "OK",
    OVER_QUERY_LIMIT: "OVER_QUERY_LIMIT",
    REQUEST_DENIED: "REQUEST_DENIED",
    UNKNOWN_ERROR: "UNKNOWN_ERROR",
    ZERO_RESULTS: "ZERO_RESULTS"
};
TGOS.TGLocatorStatus = {
    ERROR: "ERROR",
    INVALID_REQUEST: "INVALID_REQUEST",
    OK: "OK",
    OVER_QUERY_LIMIT: "OVER_QUERY_LIMIT",
    REQUEST_DENIED: "REQUEST_DENIED",
    UNKNOWN_ERROR: "UNKNOWN_ERROR",
    ZERO_RESULTS: "ZERO_RESULTS",
    TOO_MANY_RESULTS: "TOO_MANY_RESULTS"
};
TGOS.TGMeasureStatus = {
    ERROR: "ERROR",
    INVALID_REQUEST: "INVALID_REQUEST",
    OK: "OK",
    OVER_QUERY_LIMIT: "OVER_QUERY_LIMIT",
    REQUEST_DENIED: "REQUEST_DENIED",
    UNKNOWN_ERROR: "UNKNOWN_ERROR",
    INVALID_Coordinate: "INVALID_Coordinate"
};
TGOS.TGLocatorLocation = {
    APPROXIMATE: "APPROXIMATE",
    GEOMETRIC_CENTER: "GEOMETRIC_CENTER",
    RANGE_INTERPOLATED: "GEOMETRIC_CENTER",
    ROOFTOP: "ROOFTOP"
};
TGOS.TGUnitSystem = {
    IMPERIAL: "IMPERIAL",
    METRIC: "METRIC"
};
TGOS.TGStatMapId = {
    COUNTYMAP: "COUNTYMAP",
    TOWNMAP: "TOWNMAP",
    VILLAGEMAP: "VILLAGEMAP"
};
TGOS.TGStatServiceStatus = {
    ERROR: "ERROR",
    INVALID_REQUEST: "INVALID_REQUEST",
    OK: "OK",
    OVER_QUERY_LIMIT: "OVER_QUERY_LIMIT",
    REQUEST_DENIED: "REQUEST_DENIED",
    UNKNOWN_ERROR: "UNKNOWN_ERROR",
    ZERO_RESULTS: "ZERO_RESULTS"
};
TGOS.APPID = "jsQd5cZYrT+o/4aTN1kTTHsQoNHFMWxacSZ3zgiIWNro+dilR/dC8w==";
TGOS.Log = function(a, d, b) {
    a = getWebProtocal() + getAPIPath() + "rec/count.aspx?AppID=" + TGOS.APPID + "&APIID=" + d + "&DataID=" + b;
    d = document.createElement("script");
    d.onload = function() {
        this.parentNode.removeChild(this)
    };
    d.type = "text/javascript";
    document.body.appendChild(d);
    d.src = a
};
TGOS.ajaxCount__ = 0;
(function() {
    var a = function(a, b, e) {
        a += 0 <= a.indexOf("?") ? "&" : "?";
        return a + (b + "=" + e)
    };
    TGOS.getJSON = function(d, b, e, f) {
        var g = {
                src: d
            },
            h = util.getInternetExplorerVersion(),
            k = "sn" + TGOS.ajaxCount__;
        TGOS.getJSON[k] = function() {
            b.apply(g, arguments);
            delete TGOS.getJSON[k]
        };
        e && (d = a(e, "serv", encodeURIComponent(d)));
        d = a(d, "keystr", encodeURIComponent(TGOS.tgHash));
        d = a(d, "jsonp", encodeURIComponent("TGOS.getJSON['" + k + "']"));
        e = document.getElementsByTagName("head");
        if (0 != e.length) {
            var l = document.createElement("script");
            l.type =
                "text/javascript";
            0 <= h && 8 >= h ? l.onreadystatechange = function() {
                this.readyState && "loaded" !== this.readyState && "complete" !== this.readyState || (this.parentNode.removeChild(l), l = void 0)
            } : l.onload = function() {
                this.parentNode.removeChild(l);
                l = void 0
            };
            l.onerror = function() {
                f && f.call(this);
                this.parentNode.removeChild(l);
                l = void 0
            };
            TGOS.ajaxCount__++;
            l.src = d;
            e[0].appendChild(l)
        }
    }
})();
TGOS.loadJsonData = function(a, d, b, e, f) {
    var g = document.createElement("script");
    g.type = "text/javascript";
    document.body.appendChild(g);
    d = 0 <= d.indexOf("?") ? d + "&keystr=" + encodeURIComponent(TGOS.tgHash) : d + "?keystr=" + encodeURIComponent(TGOS.tgHash);
    d += "&rn=" + Math.floor(1E5 * Math.random() + 1);
    g.onreadystatechange = function() {
        "loaded" == this.readyState && b.call(this, dataObj)
    };
    g.onload = function() {
        b.call(this, dataObj);
        g.parentNode.removeChild(g);
        for (var a in g) delete g[a]
    };
    g.onerror = function() {
        e && e.call(this)
    };
    "" ==
    a ? g.src = d : (f && (g.src = a + "?serv=" + encodeURIComponent(d) + "&skip=true&hash=" + TGOS.tgHash), g.src = a + "?serv=" + encodeURIComponent(d))
};
TGOS.DistrictID = {
    U01COS01_201212A: "S01",
    U01COS02_201212A: "S02",
    U01COS03_201212A: "S03",
    U01COS04_201212A: "S04",
    U01COS05_201212A: "S05",
    U01TOS01_201212A: "S06",
    U01TOS02_201212A: "S07",
    U01TOS03_201212A: "S08",
    U01TOS04_201212A: "S09",
    U01TOS05_201212A: "S10",
    U01VIS01_201212A: "S11",
    U01VIS02_201212A: "S12",
    U01VIS03_201212A: "S13",
    U01VIS04_201212A: "S14",
    U01VIS05_201212A: "S15"
};
TGOS.TGDistrictStat = function() {
    this.stat = function(a, d, b, e) {
        var f = {
                getImageUrl: "",
                district: []
            },
            g = "";
        switch (a) {
            case TGOS.TGStatMapId.COUNTYMAP:
                g = "county";
                break;
            case TGOS.TGStatMapId.TOWNMAP:
                g = "town";
                break;
            case TGOS.TGStatMapId.VILLAGEMAP:
                g = "village"
        }
        var h = "string" == typeof b.layer ? b.layer : "",
            k = "string" == typeof b.code ? b.code : "",
            l = "ei";
        switch ("string" == typeof b.classifyMethod ? b.classifyMethod : "") {
            case "EqualInterval":
                l = "ei";
                break;
            case "Quantile":
                l = "qt";
                break;
            case "StanDevi":
                l = "sd"
        }
        var n = "number" == typeof b.classes ?
            b.classes.toString() : "",
            m = "green";
        switch (b.graduatedColor.toLowerCase()) {
            case "red":
                m = "red";
                break;
            case "yellow":
                m = "yellow";
                break;
            case "green":
                m = "green";
                break;
            case "blue":
                m = "blue"
        }
        var p = "number" == typeof b.height ? b.height.toString() : "",
            s = "number" == typeof b.width ? b.width.toString() : "";
        TGOS.getJSON(TGOS.STATISTICS_SERVICE2 + "?width=" + s + "&height=" + p + "&district=" + g + "&color=" + m + "&layer=" + h + "&code=" + k + "&method=" + l + "&classnum=" + n, function(a) {
            if (a && a.error) e.call(this, null, "REQUEST_DENIED");
            else {
                f.district =
                    a.district;
                f.legend = a.legend;
                var b = parseFloat(a.envelope.left),
                    d = parseFloat(a.envelope.top),
                    E = parseFloat(a.envelope.right);
                a = parseFloat(a.envelope.bottom);
                f.envelope = new TGOS.TGEnvelope(b, d, E, a);
                b = TGOS.STATISTICS_SERVICE + "?width=" + s + "&height=" + p + "&district=" + g + "&color=" + m + "&layer=" + h + "&code=" + k + "&method=" + l + "&classnum=" + n;
                b = 0 <= b.indexOf("?") ? b + "&keystr=" + encodeURIComponent(TGOS.tgHash) : b + "?keystr=" + encodeURIComponent(TGOS.tgHash);
                f.imageUrl = b;
                e.call(this, f, "OK");
                h in TGOS.DistrictID && TGOS.Log("web",
                    "A05", TGOS.DistrictID[h])
            }
        })
    }
};
TGOS.TGLocateService = function() {
    function a(a, b, d) {
        var e = [];
        new TGOS.TGTransformation;
        var l = "",
            n = "";
        switch (d) {
            case "84":
                n = "EPSG:4326";
                break;
            case "97_119":
                n = "EPSG:3825";
                break;
            default:
                n = "EPSG:3826"
        }
        TGOS.getJSON(TGOS.ADDRESSLOCATE_SERVICE + "?oAddress=" + a.address + "&oSRS=" + n + "&oResultDataType=jsonp&pnum=" + parseInt(a.pageNumber), function(a) {
            if (a && a.Info && a.Info.length)
                if (0 >= parseInt(a.Info[0].OutTotal)) l = TGOS.TGLocatorStatus.ZERO_RESULTS, b.call(this, null, l);
                else {
                    l = TGOS.TGLocatorStatus.OK;
                    30 < parseInt(a.Info[0].OutTotal) &&
                        (l = TGOS.TGLocatorStatus.TOO_MANY_RESULTS);
                    for (var f = 0; f < a.AddressList.length; f++) {
                        var n = {
                                addressComponents: [],
                                formattedAddress: "",
                                geometry: {
                                    bounds: "",
                                    location: "",
                                    locatorLocation: "",
                                    geometry: ""
                                },
                                types: []
                            },
                            q = parseFloat(a.AddressList[f].X),
                            v = parseFloat(a.AddressList[f].Y);
                        n.addressComponents = {
                            county: a.AddressList[f].COUNTY,
                            town: a.AddressList[f].TOWN,
                            village: a.AddressList[f].VILLAGE,
                            neighborhood: a.AddressList[f].NEIGHBORHOOD,
                            road: a.AddressList[f].ROAD,
                            section: a.AddressList[f].SECTION,
                            lane: a.AddressList[f].LANE,
                            alley: a.AddressList[f].ALLEY,
                            sub_alley: a.AddressList[f].SUB_ALLEY,
                            number: a.AddressList[f].NUMBER
                        };
                        n.formattedAddress = a.AddressList[f].FULL_ADDR;
                        n.geometry.location = new TGOS.TGPoint(q, v);
                        "84" == d ? (v = TGOS.WGS84ToGoo(n.geometry.location.x, n.geometry.location.y), q = TGOS.GooToWGS84(v.x - 500, v.y + 500), v = TGOS.GooToWGS84(v.x + 500, v.y - 500), n.geometry.viewport = new TGOS.TGEnvelope(q.x, q.y, v.x, v.y)) : n.geometry.viewport = new TGOS.TGEnvelope(q - 500, v + 500, q + 500, v - 500);
                        e.push(n)
                    }
                    b.call(this, e, l);
                    TGOS.Log("web", "A12", "")
                }
            else l =
                TGOS.TGLocatorStatus.ERROR, b.call(this, null, l)
        })
    }

    function d(a, b, d) {
        var e = [],
            l = new TGOS.TGTransformation,
            n = {
                addressComponents: [],
                formattedAddress: "",
                geometry: {
                    bounds: "",
                    location: "",
                    locatorLocation: "",
                    geometry: "",
                    viewPort: ""
                },
                types: []
            },
            m = a.town ? a.town : "",
            p = a.county ? a.county : "",
            p = p.replace("\u6843\u5712\u7e23", "\u6843\u5712\u5e02");
        srs = "84" == d ? "EPSG4326" : "97_119" == d ? "EPSG3825" : "EPSG3826";
        m = TGOS.LOCATOR_SERVICE + "?op=poi&keyword=" + a.poi + "&pnum=" + parseInt(a.pageNumber) + "&county=" + p + "&town=" + m + "&srs=" + srs;
        a.center && a.center instanceof TGOS.TGPoint && (m += "&center=" + a.center.x + "," + a.center.y);
        TGOS.getJSON(m, function(a) {
            if (a && a.error) b.call(this, e, "REQUEST_DENIED", 0, 0);
            else if (!a || !a.Table || 0 >= a.Table.length) b.call(this, e, TGOS.TGLocatorStatus.ZERO_RESULTS, 0, 0);
            else {
                for (var f = 0; f < a.Table.length; f++) {
                    n = {
                        addressComponents: [],
                        formattedAddress: "",
                        geometry: {
                            bounds: "",
                            location: "",
                            locatorLocation: "",
                            geometry: "",
                            viewPort: ""
                        },
                        types: []
                    };
                    var m = parseFloat(a.Table[f].X_97121),
                        p = parseFloat(a.Table[f].Y_97121);
                    if ("84" ==
                        d) {
                        var E, F;
                        l.twd97towgs84(m, p);
                        n.geometry.location = new TGOS.TGPoint(l.transResult.x, l.transResult.y);
                        l.twd97towgs84(m - 1E3, p + 1E3);
                        E = l.transResult.x;
                        F = l.transResult.y;
                        l.twd97towgs84(m + 1E3, p - 1E3);
                        p = l.transResult.x;
                        m = l.transResult.y;
                        n.geometry.viewport = new TGOS.TGEnvelope(E, F, p, m)
                    } else "97_119" == d ? (l.twd97towgs84(m, p), l.wgs84totwd97_119(l.transResult.x, l.transResult.y), n.geometry.location = new TGOS.TGPoint(l.transResult.x, l.transResult.y), l.twd97towgs84(m - 1E3, p + 1E3), l.wgs84totwd97_119(l.transResult.x, l.transResult.y),
                        E = l.transResult.x, F = l.transResult.y, l.twd97towgs84(m + 1E3, p - 1E3), l.wgs84totwd97_119(l.transResult.x, l.transResult.y), p = l.transResult.x, m = l.transResult.y, n.geometry.viewport = new TGOS.TGEnvelope(E, F, p, m)) : (n.geometry.viewport = new TGOS.TGEnvelope(m - 1E3, p + 1E3, m + 1E3, p - 1E3), n.geometry.location = new TGOS.TGPoint(m, p));
                    n.poiName = a.Table[f].LANDMARKNA;
                    n.county = a.Table[f].COUNTYNAME;
                    n.town = a.Table[f].TOWNNAME;
                    e.push(n)
                }
                b.call(this, e, 1 < a.pages ? TGOS.TGLocatorStatus.TOO_MANY_RESULTS : TGOS.TGLocatorStatus.OK, a.items,
                    a.pages);
                TGOS.Log("web", "A13", "")
            }
        })
    }

    function b(a, b, d) {
        var e = [],
            l = new TGOS.TGTransformation,
            n = a.town ? a.town : "",
            m = a.county ? a.county : "",
            m = m.replace("\u6843\u5712\u7e23", "\u6843\u5712\u5e02"),
            p;
        p = "84" == d ? "EPSG4326" : "97_119" == d ? "EPSG3825" : "EPSG3826";
        n = TGOS.LOCATOR_SERVICE + "?op=rd&road=" + a.roadLocation + "&pnum=" + parseInt(a.pageNumber) + "&county=" + m + "&town=" + n + "&srs=" + p;
        a.center && a.center instanceof TGOS.TGPoint && (n += "&center=" + a.center.x + "," + a.center.y);
        TGOS.getJSON(n, function(a) {
            if (a && a.error) b.call(this,
                e, "REQUEST_DENIED", 0, 0);
            else if (a && a.results) {
                for (r = 0; r < a.results.length; r++) {
                    var f = {
                            addressComponents: [],
                            formattedAddress: "",
                            geometry: {
                                bounds: "",
                                location: "",
                                locatorLocation: "",
                                geometry: "",
                                viewPort: ""
                            },
                            types: []
                        },
                        m = parseFloat(a.results[r].min_x),
                        n = parseFloat(a.results[r].min_y),
                        p = parseFloat(a.results[r].max_x),
                        F = parseFloat(a.results[r].max_y),
                        G = parseFloat(a.results[r].point_x),
                        A = parseFloat(a.results[r].point_y);
                    "84" == d ? (l.twd97towgs84(G, A), f.geometry.location = new TGOS.TGPoint(l.transResult.x, l.transResult.y),
                            l.twd97towgs84(m, F), m = l.transResult.x, F = l.transResult.y, l.twd97towgs84(p, n), p = l.transResult.x, n = l.transResult.y) : "97_119" == d ? (l.twd97towgs84(G, A), l.wgs84totwd97_119(l.transResult.x, l.transResult.y), f.geometry.location = new TGOS.TGPoint(l.transResult.x, l.transResult.y), l.twd97towgs84(m, F), l.wgs84totwd97_119(l.transResult.x, l.transResult.y), m = l.transResult.x, F = l.transResult.y, l.twd97towgs84(p, n), l.wgs84totwd97_119(l.transResult.x, l.transResult.y), p = l.transResult.x, n = l.transResult.y) : f.geometry.location =
                        new TGOS.TGPoint(G, A);
                    n = new TGOS.TGEnvelope(m, F, p, n);
                    f.geometry.viewport = n;
                    f.county = a.results[r].countyname;
                    f.town = a.results[r].townname;
                    f.formattedAddress = a.results[r].roadname;
                    e.push(f)
                }
                b.call(this, e, 1 < a.pages ? TGOS.TGLocatorStatus.TOO_MANY_RESULTS : TGOS.TGLocatorStatus.OK, a.items, a.pages);
                TGOS.Log("web", "A14", "")
            } else b.call(this, e, TGOS.TGLocatorStatus.ZERO_RESULTS, 0, 0)
        })
    }

    function e(a, b, d) {
        var e = [];
        new TGOS.TGTransformation;
        var l = {
            addressComponents: [],
            formattedAddress: "",
            geometry: {
                bounds: "",
                location: "",
                locatorLocation: "",
                geometry: "",
                viewport: ""
            },
            types: []
        };
        a = encodeURIComponent(a.district.replace("\u6843\u5712\u7e23", "\u6843\u5712\u5e02"));
        TGOS.getJSON(TGOS.LOCATOR_SERVICE + "?op=dist&district=" + a, function(a) {
            if (a && a.error) b.call(this, null, "REQUEST_DENIED");
            else if (a && "OK" == a.status) {
                var f = parseFloat(a.Information.x),
                    p = parseFloat(a.Information.y),
                    s = new TGOS.TGEnvelope(a.Information.minX, a.Information.maxY, a.Information.maxX, a.Information.minY);
                a = util.parsePolyWkt(a.Information.geometry);
                if ("84" == d) {
                    var q =
                        TGOS.TWD97toWGS84(s.left, s.top),
                        s = TGOS.TWD97toWGS84(s.right, s.bottom),
                        f = TGOS.TWD97toWGS84(f, p);
                    l.geometry.location = new TGOS.TGPoint(f.x, f.y);
                    l.geometry.viewport = new TGOS.TGEnvelope(q.x, q.y, s.x, s.y);
                    f = TGOS.Geometry.Transform(a, TGOS.TWD97toWGS84);
                    l.geometry.geometry = f
                } else "97_119" == d ? (q = TGOS.TWD97toTWD67(s.left, s.top), s = TGOS.TWD97toTWD67(s.right, s.bottom), f = TGOS.TWD97toTWD67(f, p), l.geometry.location = new TGOS.TGPoint(f.x, f.y), l.geometry.viewport = new TGOS.TGEnvelope(q.x, q.y, s.x, s.y), f = TGOS.Geometry.Transform(a,
                    TGOS.TWD97toTWD67), l.geometry.geometry = f) : (l.geometry.location = new TGOS.TGPoint(f, p), l.geometry.viewport = s, l.geometry.geometry = a);
                l.geometry && l.geometry.geometry && l.geometry.geometry.getBounds && (l.geometry.bounds = l.geometry.geometry.getBounds());
                e.push(l);
                b.call(this, e, TGOS.TGLocatorStatus.OK);
                TGOS.Log("web", "A15", "")
            } else b.call(this, null, TGOS.TGLocatorStatus.ZERO_RESULTS)
        })
    }
    this.locateWGS84 = function(f, g) {
        "undefined" != typeof f.address ? a(f, g, "84") : "undefined" != typeof f.poi ? d(f, g, "84") : "undefined" !=
            typeof f.roadLocation ? b(f, g, "84") : "undefined" != typeof f.district ? e(f, g, "84") : g.call(this, null, TGOS.TGLocatorStatus.INVALID_REQUEST)
    };
    this.locateTWD97 = function(f, g) {
        "undefined" != typeof f.address ? a(f, g, "97") : "undefined" != typeof f.poi ? d(f, g, "97") : "undefined" != typeof f.roadLocation ? b(f, g, "97") : "undefined" != typeof f.district ? e(f, g, "97") : g.call(this, null, TGOS.TGLocatorStatus.INVALID_REQUEST)
    };
    this.locateTWD97_119 = function(f, g) {
        "undefined" != typeof f.address ? a(f, g, "97_119") : "undefined" != typeof f.poi ? d(f,
            g, "97_119") : "undefined" != typeof f.roadLocation ? b(f, g, "97_119") : "undefined" != typeof f.district ? e(f, g, "97_119") : g.call(this, null, TGOS.TGLocatorStatus.INVALID_REQUEST)
    };
    this.setCenter = function(a, b) {
        a.setCenter(b)
    };
    this.fitBounds = function(a, b) {
        a.fitBounds(b)
    }
};
TGOS.TGMeasureService = function() {
    this.twd97LineMeasure = function(a, d) {
        var b, e;
        a instanceof TGOS.TGLineString ? (b = a.getLength(), e = "OK") : (b = null, e = "INVALID_REQUEST");
        d.call(this, b, e);
        TGOS.Log("web", "A07", "")
    };
    this.twd97PolygonMeasure = function(a, d) {
        var b, e;
        a instanceof TGOS.TGPolygon ? (b = a.getArea(), e = "OK") : (b = null, e = "INVALID_REQUEST");
        d.call(this, b, e);
        TGOS.Log("web", "A07", "")
    };
    this.twd97_119LineMeasure = function(a, d) {
        var b, e;
        a instanceof TGOS.TGLineString ? (b = a.getLength(), e = "OK") : (b = null, e = "INVALID_REQUEST");
        d.call(this, b, e);
        TGOS.Log("web", "A07", "")
    };
    this.twd97_119PolygonMeasure = function(a, d) {
        var b, e;
        a instanceof TGOS.TGPolygon ? (b = a.getArea(), e = "OK") : (b = null, e = "INVALID_REQUEST");
        d.call(this, b, e);
        TGOS.Log("web", "A07", "")
    };
    this.wgs84LineMeasure = function(a, d) {
        var b, e;
        b = new TGOS.TGTransformation;
        var f = [],
            g, h;
        if (a instanceof TGOS.TGLineString) {
            e = a.getPath();
            for (var k = 0; k < e.length; k++) b.wgs84totwd97(e[k].x, e[k].y), g = b.transResult.x, h = b.transResult.y, g = new TGOS.TGPoint(g, h), f.push(g);
            b = new TGOS.TGLineString(f);
            b = b.getLength();
            e = "OK"
        } else b = null, e = "INVALID_REQUEST";
        d.call(this, b, e);
        TGOS.Log("web", "A07", "")
    };
    this.wgs84PolygonMeasure = function(a, d) {
        var b, e;
        b = new TGOS.TGTransformation;
        var f = [],
            g, h;
        if (a instanceof TGOS.TGPolygon) {
            e = a.getExteriorRing().getPath().getPath();
            for (var k = 0; k < e.length; k++) b.wgs84totwd97(e[k].x, e[k].y), g = b.transResult.x, h = b.transResult.y, g = new TGOS.TGPoint(g, h), f.push(g);
            b = new TGOS.TGLineString(f);
            b = new TGOS.TGLinearRing(b);
            b = new TGOS.TGPolygon([b]);
            b = b.getArea();
            e = "OK"
        } else b = null, e =
            "INVALID_REQUEST";
        d.call(this, b, e);
        TGOS.Log("web", "A07", "")
    }
};
TGOS.TGTileOverlay = function() {
    var a = [],
        d, b = "auto";
    this.getLayerById = function(b) {
        for (var d = 0; d < a.length; d++)
            if (a[d].id == b) return a[d];
        return null
    };
    this.setZIndex = function(d) {
        b = d;
        for (d = 0; d < a.length; d++) a[d].setZIndex(b)
    };
    this.getZIndex = function() {
        return b
    };
    this.setTileOpacity = function(a, b) {
        if (null != this.getLayerById(b)) {
            if (null == this.getLayerById(b)) throw "Layer Not Found";
            this.getLayerById(b).setOpacity(a)
        }
    };
    this.removeTileOverlay = function(b) {
        if (null != this.getLayerById(b)) {
            d.removeLayer(this.getLayerById(b));
            for (var f = 0; f < a.length; f++) a[f].id == b && a.splice(f, 1)
        }
    };
    this.getThemeTile = function(b, f, g, h) {
        var k = this.getLayerById(b),
            l;
        if (k) {
            l = k.getTiles(f.left, f.top, f.right, f.bottom, f.scaleLevel, 0);
            g = [];
            for (var k = [], n = 0; n < l.length; n++) g.push(new TGOS.TGPoint(l[n].leftTop[0], l[n].leftTop[1])), k.push(l[n].url);
            h && h.call(this, {
                leftTopAnchor: g,
                imageUrl: k
            })
        } else {
            d = f.map;
            null != f.zIndex && this.setZIndex(f.zIndex);
            var k = getWebProtocal() + getAPIPath() + "Agent/TWD97/Agent_" + b + ".aspx",
                m = new MapCachedLayer(b, k, !1, this, "97",
                    function() {
                        l = m.getTiles(f.left, f.top, f.right, f.bottom, f.scaleLevel, 0);
                        for (var a = [], b = [], e = 0; e < l.length; e++) {
                            if (d.getCoordSys() == TGOS.TGCoordSys.EPSG3857) {
                                var g = TGOS.TWD97ToWGS84(l[e].leftTop[0], l[e].leftTop[1]);
                                a.push(new TGOS.TGPoint(g.x, g.y))
                            } else a.push(new TGOS.TGPoint(l[e].leftTop[0], l[e].leftTop[1]));
                            b.push(l[e].url)
                        }
                        h && h.call(this, {
                            leftTopAnchor: a,
                            imageUrl: b
                        })
                    });
            m.id = b;
            f.map.addLayer(m, !0);
            m.setZIndex(this.getZIndex());
            m.setOpacity(g);
            a.push(m);
            k = m;
            f.overlay || m.putVisible(!1)
        }
        b in TGOS.ThemeTileID &&
            TGOS.Log("web", "A03", TGOS.ThemeTileID[b])
    }
};
TGOS.TGThemeTileRequest = function() {
    this.bottom = this.top = this.right = this.left = null;
    this.map = this.overlay = !0;
    this.setScaleLevel = null
};
TGOS.TGThemeTileResult = function() {
    this.LeftTopAnchor = this.ImageUrl = null
};
TGOS.TGThemeLayer = function() {
    this.getThemePic = function(a, d, b, e) {
        b = TGOS.QUERY_SERVICE + "?op=image&res=" + TGOS.MapIdInfo[a].resource + "&layer=" + TGOS.MapIdInfo[a].layers[d].name + "&Left=" + b.left + "&Top=" + b.top + "&Right=" + b.right + "&Bottom=" + b.bottom + "&Width=" + b.width + "&Height=" + b.height + "&keystr=" + encodeURIComponent(TGOS.tgHash);
        e.call(this, b, "OK", TGOS.MapIdInfo[a].layers[d].legends);
        a in TGOS.ThemeLayerID && TGOS.Log("web", "A04", TGOS.ThemeLayerID[a])
    }
};
TGOS.TGThemePicRequest = function() {
    this.bottom = this.top = this.right = this.left = null;
    this.height = this.width = 256;
    this.setRange = function(a, d, b, e) {
        this.left = a;
        this.right = d;
        this.top = b;
        this.bottom = e
    };
    this.setImageSize = function(a, d) {
        this.height = a;
        this.width = d
    }
};
TGOS.TGFeatureIdentify = function() {
    function a(a) {
        return a.replace(/^[\s]*/gi, "").replace(/[\s]*$/gi, "")
    }
    this.identify = function(d, b, e, f, g) {
        function h(a, b) {
            var d = new TGOS.TGTransformation,
                e = [],
                f = a.indexOf("("),
                g = a.indexOf(")");
            f++;
            a = a.substring(f, g);
            f = a.split(",");
            for (g = 0; g < f.length; g++) {
                var h = f[g].split(" ");
                if (isNaN(h[0]) || isNaN(h[1])) return !1;
                b ? (d.twd97towgs84(parseFloat(h[0]), parseFloat(h[1])), e.push(new TGOS.TGPoint(d.transResult.x, d.transResult.y))) : e.push(new TGOS.TGPoint(parseFloat(h[0]), parseFloat(h[1])))
            }
            return new TGOS.TGLineString(e)
        }

        function k(a, b) {
            var d = a.indexOf("("),
                e = a.indexOf(")");
            d++;
            a = a.substring(d, e);
            d = a.split(" ");
            return isNaN(d[0]) || isNaN(d[1]) ? !1 : b ? (e = new TGOS.TGTransformation, e.twd97towgs84(parseFloat(d[0]), parseFloat(d[1])), new TGOS.TGPoint(e.transResult.x, e.transResult.y)) : new TGOS.TGPoint(parseFloat(d[0]), parseFloat(d[1]))
        }

        function l(a, b, d) {
            var e = a.indexOf("(");
            e++;
            for (var f = []; - 1 != e;) {
                var g = a.indexOf("))", e),
                    e = a.substring(e, g + 2);
                "MULTIPOINT" == b ? f.push(k(e, d)) : "MULTILINESTRING" == b ? f.push(h(e, d)) : "MULTIPOLYGON" ==
                    b && f.push(util.parsePolyWkt(e, d));
                e = a.indexOf("(", g - 1)
            }
            return f
        }

        function n(e) {
            var m = "";
            if (e) {
                e = e.Feature;
                var n = null,
                    p = [],
                    n = null,
                    q;
                for (q in TGOS.MapIdInfo[d].layers[b].identify) m = m + q + ",";
                z.fieldName = m;
                if ("undefined" == typeof e.length) {
                    p = [];
                    n = e.Values;
                    for (q in TGOS.MapIdInfo[d].layers[b].identify) {
                        var u = n[TGOS.MapIdInfo[d].layers[b].identify[q]];
                        p.push(u)
                    }
                    n = e.Geometry;
                    u = n.indexOf("(");
                    u = a(n.substr(0, u).toUpperCase());
                    z.featureType = u;
                    var s = "EPSG3857" == f;
                    if ("POINT" == u) var t = [k(n, s)];
                    else "LINESTRING" ==
                        u ? t = [h(n, s)] : "POLYGON" == u ? t = [util.parsePolyWkt(n)] : -1 != u.indexOf("MULTI") && (t = new l(n, u, s));
                    z.fieldAttr.push(p);
                    z.geometry = t
                } else
                    for (m = 0; m < e.length; m++) {
                        p = [];
                        n = e[m].Values;
                        for (q in TGOS.MapIdInfo[d].layers[b].identify) u = n[TGOS.MapIdInfo[d].layers[b].identify[q]], p.push(u);
                        n = e[m].Geometry;
                        u = n.indexOf("(");
                        u = a(n.substr(0, u).toUpperCase());
                        z.featureType = u;
                        s = "EPSG3857" == f;
                        "POINT" == u ? t = [k(n, s)] : "LINESTRING" == u ? t = [h(n, s)] : "POLYGON" == u ? t = [util.parsePolyWkt(n, s)] : -1 != u.indexOf("MULTI") && (t = new l(n, u, s));
                        z.fieldAttr.push(p);
                        z.geometry = t
                    }
                g.call(this, z, "OK");
                TGOS.Log("web", "A08", TGOS.ThemeLayerID[d])
            } else g.call(this, null, "ZERO_RESULTS")
        }

        function m() {
            var a = TGOS.QUERY_SERVICE + "?op=fid_s",
                a = a + "&layer=dbo.LANDUSE_201207A_1" + ("&res=" + TGOS.MapIdInfo[d].resource),
                a = a + ("&geom=POLYGON((" + E + "))");
            TGOS.getJSON(a, function(a) {
                a ? n(a) : (a = TGOS.QUERY_SERVICE + "?op=fid_s", a = a + "&layer=dbo.LANDUSE_201207A_2" + ("&res=" + TGOS.MapIdInfo[d].resource), a += "&geom=POLYGON((" + E + "))", TGOS.getJSON(a, function(a) {
                    n(a)
                }))
            })
        }
        if (e instanceof TGOS.TGPoint) {
            var p = new TGOS.TGPoint(0, 0),
                s = new TGOS.TGPoint(0, 0),
                q = new TGOS.TGPoint(0, 0),
                v = new TGOS.TGPoint(0, 0),
                z = {
                    fieldAttr: [],
                    geometry: []
                };
            p.x = e.x;
            p.y = e.y + 30;
            s.x = e.x + 30;
            s.y = e.y;
            q.x = e.x;
            q.y = e.y - 30;
            v.x = e.x - 30;
            v.y = e.y;
            var E = p.x + " " + p.y + "," + s.x + " " + s.y + "," + q.x + " " + q.y + "," + v.x + " " + v.y + "," + p.x + " " + p.y;
            "LANDUSE" == d ? m() : (p = TGOS.QUERY_SERVICE + "?op=fid", p += "&layer=" + TGOS.MapIdInfo[d].layers[b].name, p += "&res=" + TGOS.MapIdInfo[d].resource, p += "&cx=" + e.x, p += "&cy=" + e.y, TGOS.getJSON(p, function(e) {
                var m = "";
                if (e &&
                    e.error) g.call(this, null, "REQUEST_DENIED");
                else if (e && e.Feature) {
                    e = e.Feature;
                    var n = null,
                        p = [],
                        n = null,
                        q;
                    for (q in TGOS.MapIdInfo[d].layers[b].identify) m = m + q + ",";
                    z.fieldName = m;
                    if ("undefined" == typeof e.length) {
                        p = [];
                        n = e.Values;
                        for (q in TGOS.MapIdInfo[d].layers[b].identify) {
                            var u = n[TGOS.MapIdInfo[d].layers[b].identify[q]];
                            p.push(u)
                        }
                        n = e.Geometry;
                        u = n.indexOf("(");
                        u = a(n.substr(0, u).toUpperCase());
                        z.featureType = u;
                        var s = "EPSG3857" == f;
                        if ("POINT" == u) var t = [k(n, s)];
                        else "LINESTRING" == u ? t = [h(n, s)] : "POLYGON" == u ? t = [util.parsePolyWkt(n)] : -1 != u.indexOf("MULTI") && (t = new l(n, u, s));
                        z.fieldAttr.push(p);
                        z.geometry = t
                    } else
                        for (m = 0; m < e.length; m++) {
                            p = [];
                            n = e[m].Values;
                            for (q in TGOS.MapIdInfo[d].layers[b].identify) u = n[TGOS.MapIdInfo[d].layers[b].identify[q]], p.push(u);
                            n = e[m].Geometry;
                            u = n.indexOf("(");
                            u = a(n.substr(0, u).toUpperCase());
                            z.featureType = u;
                            s = "EPSG3857" == f;
                            "POINT" == u ? t = [k(n, s)] : "LINESTRING" == u ? t = [h(n, s)] : "POLYGON" == u ? t = [util.parsePolyWkt(n, s)] : -1 != u.indexOf("MULTI") && (t = new l(n, u, s));
                            z.fieldAttr.push(p);
                            z.geometry =
                                t
                        }
                    g.call(this, z, "OK");
                    TGOS.Log("web", "A08", TGOS.ThemeLayerID[d])
                } else g.call(this, null, "ZERO_RESULTS")
            }))
        } else g.call(this, null, "INVALID_REQUEST")
    }
};
TGOS.parsePointWKT = function(a) {
    var d = a.indexOf("("),
        b = a.indexOf(")");
    d++;
    a = a.substring(d, b);
    a = a.split(" ");
    return isNaN(a[0]) || isNaN(a[1]) ? !1 : new TGOS.TGPoint(parseFloat(a[0]), parseFloat(a[1]))
};
TGOS.TGAttriQuery = function() {
    this.identify = function(a, d, b, e, f) {
        var g = "",
            h = {},
            k = b.county,
            l = b.town,
            n = b.keyword;
        "" != l && "" == k ? (g = g + "[TOWN]='" + l + "'", n && (g = g + " AND [NAME] LIKE N'%" + n + "%'")) : "" == l && "" != k ? (g = g + "[COUNTY]='" + k.replace("\u53f0", "\u81fa") + "'", n && (g = g + " AND [NAME] LIKE N'%" + n + "%'")) : "" != l && "" != k ? (k && (g = g + "[TOWN]='" + l + "' AND [COUNTY]='" + k.replace("\u53f0", "\u81fa") + "'"), n && (g = g + " AND [NAME] LIKE N'%" + n + "%'")) : n && (g = g + " [NAME] LIKE N'%" + n + "%'");
        b = isNaN(b.pageNumber) || 1 > b.pageNumber ? 1 : parseInt(b.pageNumber);
        k = TGOS.QUERY_SERVICE + "?op=att&res=" + TGOS.MapIdInfo[a].resource;
        k += "&layer=" + TGOS.MapIdInfo[a].layers[d].name;
        k += "&EXPR=" + encodeURIComponent(g);
        h.fieldAttr = [];
        h.position = [];
        TGOS.getJSON(k + ("&page=" + b), function(b) {
            var g = "";
            if (b && b.error) f.call(this, null, "REQUEST_DENIED", 0, 0);
            else if (b) {
                var l = b.Feature,
                    k = null,
                    n = [],
                    z = null,
                    E = b.items;
                b = b.pages;
                for (var F in TGOS.MapIdInfo[a].layers[d].query) g = g + F + ",";
                h.fieldName = g;
                for (var g = l.length, G = 0; G < g; G++) {
                    n = [];
                    k = l[G].Values;
                    z = l[G].Geometry;
                    for (F in TGOS.MapIdInfo[a].layers[d].query) n.push(k[TGOS.MapIdInfo[a].layers[d].query[F]]);
                    switch (e) {
                        case "EPSG3857":
                            var k = TGOS.parsePointWKT(z),
                                k = TGOS.TWD97toWGS84(k.x, k.y),
                                A = new TGOS.TGPoint(k.x, k.y);
                            break;
                        case "EPSG3826":
                            A = TGOS.parsePointWKT(z);
                            break;
                        case "EPSG3825":
                            k = TGOS.parsePointWKT(z), k = TGOS.TWD97toTWD97_119(k.x, k.y), A = new TGOS.TGPoint(k.x, k.y)
                    }
                    h.fieldAttr.push(n);
                    h.position.push(A)
                }
                f.call(this, h, "OK", E, b);
                TGOS.Log("web", "A09", TGOS.ThemeLayerID[a])
            } else f.call(this, null, "ZERO_RESULTS", 0, 0)
        })
    }
};
TGOS.TGPointBuffer = function() {
    this.identify = function(a, d, b, e, f) {
        if (b.position instanceof TGOS.TGPoint && "number" == typeof b.distance) {
            new TGOS.TGPoint(0, 0);
            new TGOS.TGPoint(0, 0);
            new TGOS.TGPoint(0, 0);
            new TGOS.TGPoint(0, 0);
            var g = {
                    fieldAttr: [],
                    position: []
                },
                h = TGOS.QUERY_SERVICE + "?op=pb",
                h = h + ("&layer=" + TGOS.MapIdInfo[a].layers[d].name),
                h = h + ("&res=" + TGOS.MapIdInfo[a].resource),
                h = h + ("&cx=" + b.position.x),
                h = h + ("&cy=" + b.position.y),
                h = h + ("&range=" + b.distance);
            TGOS.getJSON(h, function(b) {
                var h = "";
                if (b && b.error) f.call(this,
                    null, "REQUEST_DENIED");
                else if (b) {
                    b = b.Feature;
                    var n = null,
                        m = null,
                        p = [],
                        s;
                    for (s in TGOS.MapIdInfo[a].layers[d].buffer) h = h + s + ",";
                    g.fieldName = h;
                    if ("undefined" == typeof b.length) {
                        p = [];
                        n = b.Values;
                        m = b.Geometry;
                        switch (e) {
                            case "EPSG3857":
                                var q = TGOS.parsePointWKT(m),
                                    q = TGOS.TWD97toWGS84(q.x, q.y),
                                    q = new TGOS.TGPoint(q.x, q.y);
                                break;
                            case "EPSG3826":
                                q = TGOS.parsePointWKT(m);
                                break;
                            case "EPSG3825":
                                q = TGOS.parsePointWKT(m), q = TGOS.TWD97toTWD97_119(q.x, q.y), q = new TGOS.TGPoint(q.x, q.y)
                        }
                        for (s in TGOS.MapIdInfo[a].layers[d].buffer) {
                            var v =
                                n[TGOS.MapIdInfo[a].layers[d].buffer[s]];
                            p.push(v)
                        }
                        g.position.push(q);
                        g.fieldAttr.push(p)
                    } else
                        for (h = 0; h < b.length; h++) {
                            p = [];
                            n = b[h].Values;
                            m = b[h].Geometry;
                            for (s in TGOS.MapIdInfo[a].layers[d].buffer) v = n[TGOS.MapIdInfo[a].layers[d].buffer[s]], p.push(v);
                            switch (e) {
                                case "EPSG3857":
                                    q = TGOS.parsePointWKT(m);
                                    q = TGOS.TWD97toWGS84(q.x, q.y);
                                    q = new TGOS.TGPoint(q.x, q.y);
                                    break;
                                case "EPSG3826":
                                    q = TGOS.parsePointWKT(m);
                                    break;
                                case "EPSG3825":
                                    q = TGOS.parsePointWKT(m), q = TGOS.TWD97toTWD97_119(q.x, q.y), q = new TGOS.TGPoint(q.x,
                                        q.y)
                            }
                            g.position.push(q);
                            g.fieldAttr.push(p)
                        }
                    f.call(this, g, "OK");
                    TGOS.Log("web", "A10", TGOS.ThemeLayerID[a])
                } else f.call(this, null, "ZERO_RESULTS")
            })
        } else f.call(this, null, "INVALID_REQUEST")
    }
};
TGOS.TGKmlQuery = function() {
    this.identify = function(a, d, b, e) {
        if (!(a in TGOS.TGMapServiceId)) throw "Invalid TGMapServiceId";
        if (!(d in TGOS.TGMapId)) throw "Invalid mapID";
        var f = TGOS.TGKML_ATTR_SERVICE,
            f = util.appendQStr(f, "TGMapServiceId", a),
            f = util.appendQStr(f, "TGMapId", d);
        "string" == typeof b.county && (f = util.appendQStr(f, "County", b.county));
        "string" == typeof b.town && (f = util.appendQStr(f, "Town", b.town));
        "string" == typeof b.keyword && (f = util.appendQStr(f, "Keyword", b.keyword));
        e && e.call(this, [{
            kmlUrl: f
        }], "OK")
    }
};
TGOS.TGKmlBuffer = function(a) {
    this.identify = function(a, b, e, f) {
        if (!(a in TGOS.TGMapServiceId)) throw "Invalid TGMapServiceId";
        if (!(b in TGOS.TGMapId)) throw "Invalid mapID";
        var g = TGOS.TGKML_BUFFER_SERVICE,
            g = util.appendQStr(g, "TGMapServiceId", a);
        switch (e.coordSys) {
            case "3826":
                break;
            case "4326":
                break;
            default:
                throw "Invalid CoordSys";
        }
        g = util.appendQStr(g, "EPSG", e.coordSys);
        g = util.appendQStr(g, "TGMapId", b);
        if (!util.isFloat(e.pointX)) throw "Invalid pointX";
        g = util.appendQStr(g, "PointX", e.pointX);
        if (!util.isFloat(e.pointY)) throw "Invalid pointY";
        g = util.appendQStr(g, "PointY", e.pointY);
        if (!util.isFloat(e.distance)) throw "Invalid distance";
        g = util.appendQStr(g, "Distance", e.distance);
        f && f.call(this, [{
            kmlUrl: g
        }], "OK")
    }
};
var util = util || {
    info: "utility class"
};
util.isInt = function(a) {
    return !isNaN(parseInt(a))
};
util.isUInt = function(a) {
    return !isNaN(parseInt(a)) || 0 <= parseInt(a)
};
util.isFloat = function(a) {
    return !isNaN(parseFloat(a))
};
util.appendQStr = function(a, d, b) {
    a || (a = "");
    return a = -1 < a.indexOf("?") ? a.concat("&" + d + "=" + b) : a.concat("?" + d + "=" + b)
};
util.parsePolyWkt = function(a) {
    var d = /^\s*\(?(.*?)\)?\s*$/,
        b = /\s+/,
        e = /\s*,\s*/,
        f = /\)\s*,\s*\(/,
        g = function(a) {
            var d = [];
            a = a.split(e);
            for (var f = 0; f < a.length; f++) {
                var g = a[f].split(b),
                    h = parseFloat(g[0]),
                    g = parseFloat(g[1]);
                isNaN(h) || isNaN(g) || (h = new TGOS.TGPoint(h, g), d.push(h))
            }
            return d
        },
        h = [];
    if (0 <= a.indexOf("MULTIPOLYGON"))
        for (a = a.replace("MULTIPOLYGON", "").replace(d, "$1").replace(d, "$1"), a = a.split(f), f = 0; f < a.length; f++) {
            var k = a[f].replace(d, "$1"),
                k = g(k),
                k = new TGOS.TGLineString(k),
                k = new TGOS.TGLinearRing(k);
            h.push(k)
        } else
            for (d = a.split(f), a = 0; a < d.length; a++) k = g(d[a]), k = new TGOS.TGLineString(k), k = new TGOS.TGLinearRing(k), h.push(k);
    return new TGOS.TGPolygon(h)
};
util.decompress = function(a, d) {
    d = Math.pow(10, -d);
    for (var b = a.length, e = 0, f = 0, g = 0, h = []; e < b;) {
        var k, l = 0,
            n = 0;
        do k = a.charCodeAt(e++) - 63, n |= (k & 31) << l, l += 5; while (32 <= k);
        f += n & 1 ? ~(n >> 1) : n >> 1;
        n = l = 0;
        do k = a.charCodeAt(e++) - 63, n |= (k & 31) << l, l += 5; while (32 <= k);
        g += n & 1 ? ~(n >> 1) : n >> 1;
        h.push(f * d);
        h.push(g * d)
    }
    return h
};
TGOS.TGAddressStatus = {
    ERROR: "ERROR",
    INVALID_REQUEST: "INVALID_REQUEST",
    OK: "OK",
    ZERO_RESULTS: "ZERO_RESULTS"
};
TGOS.TGAddress = function() {
    return function() {
        this.nearestAddress = function(a, d, b) {
            if (!(a instanceof TGOS.TGPoint)) throw "Must be a Point @nearestAddress";
            var e = "EPSG:3826";
            switch (d) {
                case TGOS.TGCoordSys.EPSG3857:
                    e = "EPSG:4326";
                    break;
                case TGOS.TGCoordSys.EPSG3826:
                    e = "EPSG:3826";
                    break;
                case TGOS.TGCoordSys.EPSG3825:
                    e = "EPSG:3825"
            }
            TGOS.getJSON(TGOS.ADDRESSLOCATE_SERVICE + "?op=PointQueryNearAddr&oAPPId=" + TGOS.APPID + "&oAPIKey=" + TGOS.APIKey + "&oSRS=" + e + "&oResultDataType=jsonp&oPX=" + a.x + "&oPY=" + a.y, function(a) {
                a =
                    a.AddressList;
                0 >= a.length ? b.call(this, null, TGOS.TGAddressStatus.ZERO_RESULTS) : (a = a[0], a = {
                    formattedAddress: a.FULL_ADDR,
                    addressComponents: {
                        county: a.COUNTY,
                        town: a.TOWN,
                        village: a.VILLAGE,
                        neighborhood: a.NEIGHBORHOOD,
                        road: a.ROAD,
                        section: a.SECTION,
                        lane: a.LANE,
                        alley: a.ALLEY,
                        sub_alley: a.SUB_ALLEY,
                        tong: a.TONG,
                        number: a.NUMBER
                    },
                    geometry: {
                        bounds: new TGOS.TGEnvelope(a.X, a.Y, a.X, a.Y),
                        location: new TGOS.TGPoint(a.X, a.Y)
                    }
                }, b.call(this, a, TGOS.TGAddressStatus.OK))
            }, null, null)
        }
    }
}();
TGOS.TGMileageType = {
    HIGHWAY: "HIGHWAY",
    EXPRESSWAY: "EXPRESSWAY",
    PROVINCEWAY: "PROVINCEWAY",
    TRA: "TRA",
    HSR: "HSR"
};
TGOS.TGDirectionType = {
    N: "N",
    E: "E",
    S: "S",
    W: "W"
};
TGOS.TGLocatorType = {
    STREET_ADDRESS: "address",
    INTERPOLATED: "address",
    ROUTE: "road",
    COORD: "coord",
    POI: "poi",
    INTERSECTION: "roadcross"
};
TGOS.COUNTYCODES = {
    "09007": "\u9023\u6c5f\u7e23",
    "09020": "\u91d1\u9580\u7e23",
    10002: "\u5b9c\u862d\u7e23",
    10004: "\u65b0\u7af9\u7e23",
    10005: "\u82d7\u6817\u7e23",
    10007: "\u5f70\u5316\u7e23",
    10008: "\u5357\u6295\u7e23",
    10009: "\u96f2\u6797\u7e23",
    10010: "\u5609\u7fa9\u7e23",
    10013: "\u5c4f\u6771\u7e23",
    10014: "\u81fa\u6771\u7e23",
    10015: "\u82b1\u84ee\u7e23",
    10016: "\u6f8e\u6e56\u7e23",
    10017: "\u57fa\u9686\u5e02",
    10018: "\u65b0\u7af9\u5e02",
    10020: "\u5609\u7fa9\u5e02",
    63E3: "\u81fa\u5317\u5e02",
    64E3: "\u9ad8\u96c4\u5e02",
    65E3: "\u65b0\u5317\u5e02",
    66E3: "\u81fa\u4e2d\u5e02",
    67E3: "\u81fa\u5357\u5e02",
    68E3: "\u6843\u5712\u5e02"
};
TGOS.TGLocate = function() {
    var a = function(a) {
            if (!a) return "";
            for (var b in TGOS.COUNTYCODES)
                if (a.replace("\u53f0", "\u81fa") == TGOS.COUNTYCODES[b]) return b
        },
        d = TGOS.LOCATOR_SERVICE,
        b = getWebProtocal() + getServicePath() + "TGLocator/TGLocator.ashx",
        e = function() {};
    e.prototype.buildDescription = function(a, b, d, e) {
        var l = "",
            n = "",
            m = "";
        switch (a) {
            case TGOS.TGMileageType.HIGHWAY:
                l = "\u570b\u9053";
                break;
            case TGOS.TGMileageType.EXPRESSWAY:
                l = "\u5feb\u901f\u9053\u8def";
                break;
            case TGOS.TGMileageType.PROVINCEWAY:
                l = "\u7701\u9053";
                break;
            case TGOS.TGMileageType.TRA:
                l = "\u53f0\u9435";
                break;
            case TGOS.TGMileageType.HSR:
                l = "\u9ad8\u9435"
        }
        m = a == TGOS.TGMileageType.HSR ? m + l : m + (l + e);
        if (a == TGOS.TGMileageType.HIGHWAY) {
            switch (b) {
                case TGOS.TGDirectionType.E:
                    n = "\u6771\u5411";
                    break;
                case TGOS.TGDirectionType.W:
                    n = "\u897f\u5411";
                    break;
                case TGOS.TGDirectionType.S:
                    n = "\u5357\u5411";
                    break;
                case TGOS.TGDirectionType.N:
                    n = "\u5317\u5411"
            }
            m += "," + n
        }
        return m + ("," + d + "\u516c\u91cc")
    };
    e.prototype.calcViewport = function(a, b, d) {
        switch (d) {
            case TGOS.TGCoordSys.EPSG3857:
                b =
                    TGOS.WGS84ToGoo(a, b);
                a = TGOS.GooToWGS84(b.x - 500, b.y + 500);
                b = TGOS.GooToWGS84(b.x + 500, b.y - 500);
                a = new TGOS.TGEnvelope(a.x, a.y, b.x, b.y);
                break;
            default:
                a = new TGOS.TGEnvelope(a - 500, b + 500, a + 500, b - 500)
        }
        return a
    };
    e.prototype.buildGeometry = function(a, b) {
        var d = new TGOS.TGPoint,
            e;
        switch (b) {
            case TGOS.TGCoordSys.EPSG3826:
                d.x = a.TWD97X || a["97X"];
                d.y = a.TWD97Y || a["97Y"];
                break;
            case TGOS.TGCoordSys.EPSG3857:
                d.x = a.Lng;
                d.y = a.Lat;
                break;
            case TGOS.TGCoordSys.EPSG3825:
                x97 = a.TWD97X || a["97X"], y97 = a.TWD97Y || a["97Y"], e = TGOS.TWD97toTWD97_119(x97,
                    y97), d.x = e.x, d.y = e.y
        }
        e = this.calcViewport(d.x, d.y, b);
        return {
            location: d,
            bounds: new TGOS.TGEnvelope(d.x, d.y, d.x, d.y),
            viewport: e
        }
    };
    e.prototype.complexLocate = function(a, d, e) {
        var k = this,
            l = a.requestText,
            n = a.town,
            m = a.county,
            p = a.geometryInfo,
            s = a.pageNumber;
        a = a.center;
        var q;
        switch (d) {
            case TGOS.TGCoordSys.EPSG3826:
                q = "EPSG:3826";
                break;
            case TGOS.TGCoordSys.EPSG3857:
                q = "EPSG:4326"
        }
        l = b + "?format=jsonp&input=" + l + "&srs=" + q;
        m && (l += "&county=" + m);
        n && (l += "&town=" + n);
        l += p ? "&ignoreGeometry=false" : "&ignoreGeometry=true";
        "number" ==
        typeof s && (l += "&pnum=" + s);
        a instanceof TGOS.TGPoint && !isNaN(a.x) && !isNaN(a.y) && (l += "&center=" + a.x + "," + a.y);
        TGOS.getJSON(l, function(a) {
            var b = a.status,
                f = a.results,
                l = a.featureCount,
                m = a.pages,
                n = [];
            if ("OK" == b || "TOO_MANY_RESULTS" == b)
                for (var p = 0; p < f.length; p++) {
                    a = f[p];
                    var q = {
                        county: a.county,
                        town: a.town,
                        type: a.type,
                        name: a.name
                    };
                    "address" == a.type && (q.addressComponents = {
                        county: a.COUNTY,
                        town: a.TOWN,
                        village: a.VILLAGE,
                        neighborhood: a.NEIGHBORHOOD,
                        road: a.ROAD,
                        section: a.SECTION,
                        lane: a.LANE,
                        alley: a.ALLEY,
                        sub_alley: a.SUB_ALLEY,
                        number: a.NUMBER
                    });
                    "roadcross" == a.type && (q.firstRoad = a.NAME1, q.secondRoad = a.NAME2);
                    a.geometry && (q.geometry = {
                        location: new TGOS.TGPoint(a.geometry.x, a.geometry.y),
                        locatorLocation: null,
                        viewport: k.calcViewport(a.geometry.x, a.geometry.y, d),
                        bounds: null
                    });
                    n.push(q)
                }
            e && e.call(k, n, b, l, m)
        })
    };
    e.prototype.intersection = function(a, b, d) {
        this.roadCross.call(this, {
            firstRoad: a.roadName,
            secondRoad: "",
            county: a.county,
            town: a.town,
            pageNumber: a.pageNumber,
            geometryInfo: a.geometryInfo,
            center: a.center
        }, b, d)
    };
    e.prototype.roadCross =
        function(d, e, h) {
            var k = this,
                l = d.firstRoad,
                n = a(d.firstCounty),
                m = d.county,
                p = d.firstTown,
                s = d.secondRoad,
                q = a(d.secondCounty),
                v = d.secondTown,
                z = "number" == typeof d.pageNumber ? d.pageNumber : 1,
                E = d.center;
            d = d.geometryInfo;
            switch (e) {
                case TGOS.TGCoordSys.EPSG3826:
                    mCoordSys = "EPSG:3826";
                    break;
                case TGOS.TGCoordSys.EPSG3857:
                    mCoordSys = "EPSG:4326"
            }
            l = b + "?types=roadcross&input=" + l + " " + s + "&srs=" + mCoordSys + "&format=jsonp";
            "number" == typeof z && (l += "&pnum=" + z);
            "string" == typeof m && (l += "&county=" + m);
            "string" == typeof n && (l += "&county1=" +
                n);
            "string" == typeof p && (l += "&firstTown=" + p);
            "string" == typeof q && (l += "&county2=" + q);
            "string" == typeof v && (l += "&secondTown=" + v);
            E instanceof TGOS.TGPoint && !isNaN(E.x) && !isNaN(E.y) && (l += "&center=" + E.x + "," + E.y);
            TGOS.getJSON(l + (d ? "&ignoreGeometry=false" : "&ignoreGeometry=true"), function(a) {
                var b = a.status,
                    d = a.results,
                    f = a.featureCount,
                    l = a.pages,
                    m = [];
                if ("OK" == b || "TOO_MANY_RESULTS" == b)
                    for (var n = 0; n < d.length; n++) {
                        a = d[n];
                        var t = {
                            county: a.county,
                            town: a.town,
                            type: a.type,
                            name: a.name
                        };
                        "roadcross" == a.type && (t.firstRoad =
                            a.NAME1, t.secondRoad = a.NAME2);
                        a.geometry && (t.geometry = {
                            location: new TGOS.TGPoint(a.geometry.x, a.geometry.y),
                            locatorLocation: null,
                            viewport: k.calcViewport(a.geometry.x, a.geometry.y, e),
                            bounds: null
                        });
                        m.push(t)
                    }
                h && h.call(k, m, b, f, l)
            })
        };
    e.prototype.mileage = function(a, b, e) {
        var k = this,
            l = a.mileageType,
            n = a.roadCode,
            m = a.directionType,
            p = a.mileageNum;
        a = d + "?op=mileage&mt=" + l.toLowerCase() + "&dt=" + m + "&rc=" + n + "&mn=" + p;
        TGOS.getJSON(a, function(a) {
            var d = "";
            a && a.Table ? 0 >= a.Table.length ? (d = TGOS.TGLocatorStatus.ZERO_RESULTS,
                e.call(k, null, null, d)) : (d = k.buildDescription(l, m, p, a.Table[0].Number), a = k.buildGeometry(a.Table[0], b), e && e.call(k, d, a, "OK")) : (d = TGOS.TGLocatorStatus.ERROR, e.call(k, null, null, d))
        })
    };
    return e
}();
(function() {
    var a = ["Document", "Folder", "Placemark"];
    TGOS.TGKmlLayerOption = function() {
        this.suppressInfoWindows = this.preserveViewport = this.map = null;
        this.markerFitImageSize = !1
    };
    TGOS.TGKmlLayerMetaData = function() {
        this.snippet = this.name = this.description = this.author = null
    };
    TGOS.KmlMouseEvent = function() {
        this.pixelOffset = this.point = this.feature = null
    };
    TGOS.KmlFeatureData = function() {
        this.snippet = this.name = this.description = this.author = null
    };
    TGOS.KmlAuthor = function() {
        this.uri = this.name = this.email = null
    };
    TGOS.TGKmlLayerStatus = {
        DOCUMENT_NOT_FOUND: "DOCUMENT_NOT_FOUND",
        DOCUMENT_TOO_LARGE: "DOCUMENT_TOO_LARGE",
        FETCH_ERROR: "FETCH_ERROR",
        INVALID_DOCUMENT: "INVALID_DOCUMENT",
        INVALID_REQUEST: "INVALID_REQUEST",
        LIMITS_EXCEEDED: "LIMITS_EXCEEDED",
        OK: "OK",
        TIMED_OUT: "TIMED_OUT",
        UNKNOWN: "UNKNOWN"
    };
    TGOS.TGKmlLayer = function(d, b, e) {
        var f = this,
            g = b.map,
            h = "number" == typeof b.zIndex ? b.zIndex : 0,
            k = "boolean" == typeof b.visible ? b.visible : !0,
            l = g.getCoordSys(),
            n = {
                author: {
                    email: "",
                    name: "",
                    uri: ""
                },
                description: "",
                name: "",
                snippet: ""
            },
            m, p = new TGOS.TGInfoWindow("",
                null, {
                    pixelOffset: new TGOS.TGSize(0, 0)
                }),
            s = null,
            q = b.markerFitImageSize;
        this.overlays = [];
        this.points = [];
        this.polygons = [];
        this.polylines = [];
        this.groundoverlays = [];
        this.icons = [];
        this.getDefaultViewport = function() {
            if (!s) {
                for (var a = Infinity, b = -Infinity, d = -Infinity, e = Infinity, f = 0; f < this.overlays.length; f++) var g = this.overlays[f].getBounds(),
                    a = Math.min(a, g.left),
                    e = Math.min(e, g.bottom),
                    b = Math.max(b, g.right),
                    d = Math.max(d, g.top);
                for (f = 0; f < this.polylines.length; f++) g = this.polylines[f].getPath().getEnvelope(),
                    a = Math.min(a, g.left), e = Math.min(e, g.bottom), b = Math.max(b, g.right), d = Math.max(d, g.top);
                for (f = 0; f < this.groundoverlays.length; f++) g = this.groundoverlays[f].getBounds(), a = Math.min(a, g.left), e = Math.min(e, g.bottom), b = Math.max(b, g.right), d = Math.max(d, g.top);
                for (f = 0; f < this.polygons.length; f++) g = this.polygons[f].getBounds(), a = Math.min(a, g.left), e = Math.min(e, g.bottom), b = Math.max(b, g.right), d = Math.max(d, g.top);
                for (g = 0; g < this.points.length; g++) f = this.points[g].getPosition(), a = Math.min(a, f.x), e = Math.min(e, f.y),
                    b = Math.max(b, f.x), d = Math.max(d, f.y);
                if (!(isFinite(a) && isFinite(d) && isFinite(b) && isFinite(e))) return null;
                s = new TGOS.TGEnvelope(a, d, b, e)
            }
            return s
        };
        this.getMetadata = function() {
            return n
        };
        this.getStatus = function() {
            return m
        };
        this.parseCoordinates = function(a, b) {
            for (var d = a.trim().split(/\s*[,]\s*/), e = [
                    []
                ], f = e[0], g = 0; g < d.length; g++)
                if (d[g].match(/\s+/)) {
                    var h = d[g].split(/\s+/);
                    f.push(parseFloat(h[0]));
                    e.push(f);
                    f = [parseFloat(h[1])];
                    e.push(f)
                } else f.push(parseFloat(d[g]));
            d = [];
            for (f = 0; f < e.length; f++) {
                switch (b) {
                    case "EPSG3826":
                        var l =
                            TGOS.WGS84toTWD97(e[f][0], e[f][1]);
                        break;
                    case "EPSG3825":
                        l = TGOS.WGS84toTWD97_119(e[f][0], e[f][1]);
                        break;
                    case "EPSG3857":
                        l = {
                            x: e[f][0],
                            y: e[f][1]
                        }
                }
                l.x && l.y && d.push(new TGOS.TGPoint(l.x, l.y))
            }
            return d
        };
        this.setZIndex = function(a) {
            h = a;
            for (a = 0; a < this.polygons.length; a++) this.polygons[a].setZIndex(h, !1);
            for (a = 0; a < this.polylines.length; a++) this.polylines[a].setZIndex(h, !1);
            for (a = 0; a < this.groundoverlays.length; a++) this.groundoverlays[a].setZIndex(h, !1);
            for (var b = 0; b < this.points.length; b++) this.points[a].setZIndex(h, !1)
        };
        this.getZIndex = function() {
            return h
        };
        this.createPoint = function(a) {
            switch (l) {
                case "EPSG3826":
                    var b = this.parseCoordinates(a.coordinates, "EPSG3826");
                    break;
                case "EPSG3825":
                    b = this.parseCoordinates(a.coordinates, "EPSG3825");
                    break;
                case "EPSG3857":
                    b = this.parseCoordinates(a.coordinates, "EPSG3857")
            }
            if (!(1 > b.length)) return b[0]
        };
        this.parseRing = function(a, b) {
            switch (b) {
                case "EPSG3826":
                    var d = this.parseCoordinates(a.coordinates, "EPSG3826");
                    break;
                case "EPSG3825":
                    d = this.parseCoordinates(a.coordinates, "EPSG3825");
                    break;
                case "EPSG3857":
                    d = this.parseCoordinates(a.coordinates, "EPSG3857")
            }
            d = new TGOS.TGLineString(d);
            return new TGOS.TGLinearRing(d)
        };
        this.createPolygon = function(a) {
            var b = [],
                d = this.parseRing(a.outerBoundaryIs.LinearRing, l);
            b.push(d);
            if (a = a.innerBoundaryIs)
                if (a.length)
                    for (d = 0; d < a.length; d++)
                        if (a[d].LinearRing.length)
                            for (var e = 0; e < a[d].LinearRing.length; e++) {
                                var f = this.parseRing(a[d].LinearRing[e], l);
                                b.push(f)
                            } else f = this.parseRing(a[d].LinearRing, l), b.push(f);
                        else f = this.parseRing(a.LinearRing, l), b.push(f);
            return new TGOS.TGPolygon(b)
        };
        this.createPolyLine = function(a) {
            switch (l) {
                case "EPSG3826":
                    var b = this.parseCoordinates(a.coordinates, "EPSG3826");
                    break;
                case "EPSG3825":
                    b = this.parseCoordinates(a.coordinates, "EPSG3825");
                    break;
                case "EPSG3857":
                    b = this.parseCoordinates(a.coordinates, "EPSG3857")
            }
            return new TGOS.TGLineString(b)
        };
        this.handleGroundOverlay = function(a) {
            function d(a) {
                var e = new TGOS.TGImage(a.Icon.href);
                switch (l) {
                    case "EPSG3826":
                        var h = TGOS.WGS84toTWD97(parseFloat(a.LatLonBox.west), parseFloat(a.LatLonBox.north));
                        a = TGOS.WGS84toTWD97(parseFloat(a.LatLonBox.east), parseFloat(a.LatLonBox.south));
                        var k = h.x,
                            h = h.y,
                            m = a.x,
                            n = a.y;
                        break;
                    case "EPSG3825":
                        h = TGOS.WGS84toTWD97_119(parseFloat(a.LatLonBox.west), parseFloat(a.LatLonBox.north));
                        a = TGOS.WGS84toTWD97_119(parseFloat(a.LatLonBox.east), parseFloat(a.LatLonBox.south));
                        k = h.x;
                        h = h.y;
                        m = a.x;
                        n = a.y;
                        break;
                    case "EPSG3857":
                        k = parseFloat(a.LatLonBox.west), h = parseFloat(a.LatLonBox.north), m = parseFloat(a.LatLonBox.east), n = parseFloat(a.LatLonBox.south)
                }
                k = new TGOS.TGEnvelope(k, h, m, n);
                e = new TGOS.TGGroundOverlay(g, e, k, 1);
                TGOS.TGEvent.addListener(e, "click", z);
                TGOS.TGEvent.addListener(e, "mousedown", E);
                TGOS.TGEvent.addListener(e, "mouseup", F);
                TGOS.TGEvent.addListener(e, "mousemove", G);
                TGOS.TGEvent.addListener(e, "mouseout", A);
                TGOS.TGEvent.addListener(e, "dblclick", B);
                TGOS.TGEvent.addListener(e, "rightclick", C);
                b.suppressInfoWindows || TGOS.TGEvent.addListener(e, "click", v);
                f.groundoverlays.push(e)
            }
            if (a.length)
                for (var e = 0; e < a.length; e++) d(a[e]);
            else d(a)
        };
        this.handleNetworkLink = function(a) {
            var b =
                "";
            if (a.length)
                for (var d = 0; d < a.length; d++) {
                    if (a[d].hasOwnProperty("Url")) b = a[d].Url.href;
                    else if (a[d].hasOwnProperty("Link")) b = a[d].Link.href;
                    else continue; - 1 == b.indexOf(".kmz") && TGOS.getJSON(b, function(a) {
                        a.error || f.parseKML(a.kml)
                    }, TGOS.PROXY_SERVICE2)
                } else {
                    if (a.hasOwnProperty("Url")) b = a.Url.href;
                    else if (a.hasOwnProperty("Link")) b = a.Link.href;
                    else return; - 1 == b.indexOf(".kmz") && TGOS.getJSON(b, function(a) {
                        a.error || f.parseKML(a.kml)
                    }, TGOS.PROXY_SERVICE2)
                }
        };
        this.handleDescription = function(a) {};
        this.handleAuthor =
            function(a) {
                a.hasOwnProperty("atom:name") && (n.author.name = a["atom:name"]);
                a.hasOwnProperty("atom:link") && (n.author.uri = a["atom:link"]["@href"])
            };
        this.handleMultiGeometry = function(a) {
            var b = [],
                d;
            for (d in a) switch (d) {
                case "Point":
                    if (a.Point.length)
                        for (var e = 0; e < a.Point.length; e++) {
                            var f = this.createPoint(a.Point[e]);
                            f && b.push(f)
                        } else this.createPoint(a.Point), (f = this.createPoint(a.Point)) && b.push(f);
                    break;
                case "Polygon":
                    if (a.Polygon.length)
                        for (e = 0; e < a.Polygon.length; e++)(f = this.createPolygon(a.Polygon[e])) &&
                            b.push(f);
                    else(f = this.createPolygon(a.Polygon)) && b.push(f);
                    break;
                case "LineString":
                    if (a.LineString.length)
                        for (e = 0; e < a.LineString.length; e++)(f = this.createPolyLine(a.LineString[e])) && b.push(f);
                    else(f = this.createPolyLine(a.LineString)) && b.push(f);
                    break;
                case "MultiGeometry":
                    if (a.MultiGeometry.length)
                        for (e = 0; e < a.MultiGeometry.length; e++)(f = this.handleMultiGeometry(a.MultiGeometry[e])) && (b = b.concat(f));
                    else(f = this.handleMultiGeometry(a.MultiGeometry)) && (b = b.concat(f))
            }
            return b
        };
        this.parseGeometry = function(a) {
            var b = [];
            a.hasOwnProperty("Point") ? (a = this.createPoint(a.Point)) && b.push(a) : a.hasOwnProperty("Polygon") ? (a = this.createPolygon(a.Polygon)) && b.push(a) : a.hasOwnProperty("LineString") ? (a = this.createPolyLine(a.LineString)) && b.push(a) : a.hasOwnProperty("MultiGeometry") && (a = this.handleMultiGeometry(a.MultiGeometry, a)) && (b = b.concat(a));
            return b
        };
        this.createRandomColor = function() {
            return {
                r: parseInt(255 * Math.random()),
                g: parseInt(255 * Math.random()),
                b: parseInt(255 * Math.random())
            }
        };
        this.parseKmlColor = function(a, b, d) {
            b =
                parseInt(a.substring(0, 2), 16);
            var e = parseInt(a.substring(2, 4), 16),
                f = parseInt(a.substring(4, 6), 16),
                g = parseInt(a.substring(6, 8), 16);
            "random" == d && ("ffffffff" == a ? (a = this.createRandomColor(), e = a.b, g = a.r, f = a.g) : (e *= Math.random(), f *= Math.random(), g *= Math.random()));
            return {
                a: b / 255,
                b: parseInt(e),
                g: parseInt(f),
                r: parseInt(g)
            }
        };
        this.matchSharedStyle = function(a, b) {
            if (b && a)
                if (b = b.replace("#", ""), a instanceof Array)
                    for (var d = 0; d < a.length; d++) {
                        if (a[d]["@id"] == b) return a[d]
                    } else if (a["@id"] == b) return a
        };
        this.createStyle =
            function(a, b) {
                var d = a.inStyle ? a.inStyle : this.matchSharedStyle(a.sharedStyle, a.styleUrl),
                    e = {
                        fillColor: {
                            a: null,
                            r: null,
                            g: null,
                            b: null
                        },
                        lineWidth: null,
                        lineColor: {
                            a: null,
                            r: null,
                            g: null,
                            b: null
                        },
                        iconLink: null
                    };
                if (d) {
                    if (d.LineStyle) {
                        if (d.LineStyle.color) {
                            var f = this.parseKmlColor(d.LineStyle.color, b, d.LineStyle.colorMode);
                            e.lineColor = f
                        }
                        "string" == typeof d.LineStyle.width && (e.lineWidth = parseFloat(d.LineStyle.width))
                    }
                    d.PolyStyle && (d.PolyStyle.color && (f = this.parseKmlColor(d.PolyStyle.color, b, d.PolyStyle.colorMode),
                        e.fillColor = f), "0" == d.PolyStyle.fill && (e.fillColor.a = 0), "0" == d.PolyStyle.outline && (e.lineColor.a = 0));
                    d.IconStyle && d.IconStyle.Icon && d.IconStyle.Icon.href && (e.iconLink = d.IconStyle.Icon.href)
                }
                return e
            };
        this.colorToHex = function(a) {
            if ("number" == typeof a.r || "number" == typeof a.g || "number" == typeof a.b) {
                var b = a.r.toString(16);
                16 > a.r && (b = "0" + b);
                var d = a.g.toString(16);
                16 > a.g && (d = "0" + d);
                var e = a.b.toString(16);
                16 > a.b && (e = "0" + e);
                return "#" + b + d + e
            }
        };
        this.handlePlacemark = function(a) {
            a.inStyle = a.Style ? a.Style : a.inStyle;
            var d = [];
            if (a.length)
                for (var e = 0; e < a.length; e++) {
                    var f = this.parseGeometry(a[e]);
                    f && (d = d.concat(f))
                } else(f = this.parseGeometry(a)) && (d = d.concat(f));
            for (e = 0; e < d.length; e++) {
                f = this.createStyle(a, e / d.length);
                if (d[e] instanceof TGOS.TGPolygon) {
                    var l = new TGOS.TGFill(g, d[e], {
                        fillColor: this.colorToHex(f.fillColor),
                        fillOpacity: f.fillColor.a,
                        strokeWeight: f.lineWidth,
                        strokeColor: this.colorToHex(f.lineColor),
                        strokeOpacity: f.lineColor.a,
                        visible: k,
                        zIndex: h
                    });
                    this.polygons.push(l)
                } else d[e] instanceof TGOS.TGLineString ?
                    (l = new TGOS.TGLine(g, d[e], {
                        strokeWeight: f.lineWidth,
                        strokeColor: this.colorToHex(f.lineColor),
                        strokeOpacity: f.lineColor.a,
                        visible: k,
                        zIndex: h
                    }), this.polylines.push(l)) : d[e] instanceof TGOS.TGPoint && (null != f.iconLink ? (l = new TGOS.TGImage(f.iconLink), l = new TGOS.TGMarker(g, d[e], a.name, l, {
                        visible: k,
                        zIndex: h,
                        flat: !0,
                        fitImageSize: q ? q : !1
                    })) : l = new TGOS.TGMarker(g, d[e], a.name, null, {
                        visible: k,
                        zIndex: h
                    }), this.points.push(l));
                l.targetPlacemark = a;
                TGOS.TGEvent.addListener(l, "click", z);
                TGOS.TGEvent.addListener(l, "mousedown",
                    E);
                TGOS.TGEvent.addListener(l, "mouseup", F);
                TGOS.TGEvent.addListener(l, "mousemove", G);
                TGOS.TGEvent.addListener(l, "mouseout", A);
                TGOS.TGEvent.addListener(l, "dblclick", B);
                TGOS.TGEvent.addListener(l, "rightclick", C);
                b.suppressInfoWindows || TGOS.TGEvent.addListener(l, "click", v)
            }
        };
        this.getStyleColorById = function(a, b) {
            if (styles)
                if (styles.length)
                    for (var d = 0; d < styles.length; d++) {
                        if (b.slice(1, b.length) == styles[d].id) {
                            var e = styles[d].colorMode;
                            if ("random" == e) return null;
                            if ("line" == a && styles[d].LineStyle) return e =
                                styles[d].LineStyle.colorMode, "random" == e ? null : {
                                    a: styles[d].LineStyle.color.slice(0, 2),
                                    b: styles[d].LineStyle.color.slice(2, 4),
                                    g: styles[d].LineStyle.color.slice(4, 6),
                                    r: styles[d].LineStyle.color.slice(6, 8)
                                };
                            if ("poly" == a && styles[d].PolyStyle) return e = styles[d].PolyStyle.colorMode, "random" == e ? null : {
                                a: styles[d].PolyStyle.color.slice(0, 2),
                                b: styles[d].PolyStyle.color.slice(2, 4),
                                g: styles[d].PolyStyle.color.slice(4, 6),
                                r: styles[d].PolyStyle.color.slice(6, 8)
                            }
                        }
                    } else {
                        if ("line" == a && styles.LineStyle) return e = styles.LineStyle.colorMode,
                            "random" == e ? null : {
                                a: styles.LineStyle.color.slice(0, 2),
                                b: styles.LineStyle.color.slice(2, 4),
                                g: styles.LineStyle.color.slice(4, 6),
                                r: styles.LineStyle.color.slice(6, 8)
                            };
                        if ("poly" == a && styles.PolyStyle) return e = styles.PolyStyle.colorMode, "random" == e ? null : {
                            a: styles.PolyStyle.color.slice(0, 2),
                            b: styles.PolyStyle.color.slice(2, 4),
                            g: styles.PolyStyle.color.slice(4, 6),
                            r: styles.PolyStyle.color.slice(6, 8)
                        }
                    }
        };
        this.getVisible = function() {
            return k
        };
        this.setVisible = function(a) {
            k = a;
            for (a = 0; a < this.polygons.length; a++) this.polygons[a].setVisible(k);
            for (a = 0; a < this.polylines.length; a++) this.polylines[a].setVisible(k);
            for (a = 0; a < this.groundoverlays.length; a++) this.groundoverlays[a].setVisible(k);
            for (a = 0; a < this.points.length; a++) this.points[a].setVisible(k)
        };
        this.parseFeature = function(a, b) {
            var d = a.Style ? a.Style : null,
                e;
            for (e in a) {
                var f = a[e];
                switch (e) {
                    case "Document":
                        f.inStyle = d ? d : null;
                        this.Schema = f.Schema;
                        if (f instanceof Array)
                            for (var g = 0; g < f.length; g++) {
                                var h = f[g];
                                h.inStyle = h.Style ? h.Style : null;
                                this.parseFeature(h, f.Style)
                            } else this.parseFeature(f,
                                f.Style);
                        break;
                    case "Folder":
                        f.inStyle = d ? d : null;
                        if (f instanceof Array)
                            for (g = 0; g < f.length; g++) h = f[g], h.inStyle = h.Style ? h.Style : null, this.parseFeature(h, b);
                        else this.parseFeature(f, b);
                        break;
                    case "Placemark":
                        f.inStyle = d ? d : null;
                        f.sharedStyle = b;
                        if (f instanceof Array)
                            for (g = 0; g < f.length; g++) h = f[g], h.inStyle = h.Style ? h.Style : null, h.sharedStyle = b, this.handlePlacemark(h);
                        else f.inStyle = f.Style ? f.Style : null, f.sharedStyle = b, this.handlePlacemark(f);
                        break;
                    case "GroundOverlay":
                        this.handleGroundOverlay(f);
                        break;
                    case "NetworkLink":
                        this.handleNetworkLink(f)
                }
            }
        };
        this.parseKML = function(b) {
            if (b)
                for (var d in b)
                    if (0 <= a.indexOf(d)) {
                        this.parseFeature(b[d], b[d].Style);
                        break
                    }
        };
        this.removeKml = function() {
            if (0 < this.points.length)
                for (var a = 0; a < this.points.length; a++) this.points[a].setMap(null);
            if (0 < this.polygons.length)
                for (a = 0; a < this.polygons.length; a++) this.polygons[a].setMap(null);
            if (0 < this.polylines.length)
                for (a = 0; a < this.polylines.length; a++) this.polylines[a].setMap(null);
            if (0 < this.groundoverlays.length)
                for (a = 0; a < this.groundoverlays.length; a++) this.groundoverlays[a].setMap(null);
            this.points = [];
            this.polygons = [];
            this.polylines = [];
            this.groundoverlays = [];
            p && p.close()
        };
        var v = function(a) {
                if (a.target.targetPlacemark) {
                    var b = "",
                        d = a.target.targetPlacemark.name;
                    a.target.targetPlacemark.hasOwnProperty("description") && (b = a.target.targetPlacemark.description.hasOwnProperty("#cdata-section") ? a.target.targetPlacemark.description["#cdata-section"] : a.target.targetPlacemark.description);
                    var b = a.target.targetPlacemark.name + "</br>" + b,
                        e = a.target.targetPlacemark.ExtendedData;
                    if (e) {
                        var h;
                        if (e.Data) {
                            h =
                                e.Data.length ? e.Data : [e.Data];
                            for (var b = b + "<br><table style='border: 1px solid black;'>", l = 0; l < h.length; l++) var k = h[l],
                                d = k["@name"],
                                m = k.displayName,
                                k = k.value,
                                b = b + "<tr>",
                                b = b + "<td style='border: 1px solid black;'>",
                                b = b + (m || d),
                                b = b + "</td>",
                                b = b + "<td style='border: 1px solid black;'>",
                                b = b + k,
                                b = b + "</td>",
                                b = b + "</tr>";
                            b += "</table>"
                        }
                        if (e.SchemaData)
                            for (e = e.SchemaData.length ? e.SchemaData : [e.SchemaData], h = 0; h < e.length; h++) {
                                m = null;
                                e[h].SimpleData && (m = e[h].SimpleData.length ? e[h].SimpleData : [e[h].SimpleData]);
                                var n =
                                    "";
                                if (f.Schema)
                                    for (d = f.Schema.length ? f.Schema : [f.Schema], l = 0; l < d.length; l++)
                                        if (k = d[l], k["@id"] == e[h]["@schemaUrl"].replace("#", "")) {
                                            n = k["@name"];
                                            break
                                        }
                                if (m) {
                                    b += "<br><table style='border: 1px solid black;'>";
                                    for (l = 0; l < m.length; l++) k = m[l], d = k["@name"], k = k["#text"], b += "<tr>", b += "<td style='border: 1px solid black;'>", b += n + ":" + d, b += "</td>", b += "<td style='border: 1px solid black;' >", b += void 0 === k ? "" : k, b += "</td>", b += "</tr>";
                                    b += "</table>"
                                }
                            }
                    }
                    p.setContent(b);
                    p.setPosition(a.point);
                    p.open(g)
                }
            },
            z = function(a) {
                TGOS.TGEvent.trigger_(f,
                    "click", {
                        featureData: {
                            author: n.author,
                            description: a.target.description,
                            name: a.target.name,
                            snippet: a.target.snippet
                        },
                        point: a.point,
                        pixelOffset: 0
                    })
            },
            E = function(a) {
                TGOS.TGEvent.trigger_(f, "mousedown", {
                    featureData: {
                        author: n.author,
                        description: a.target.description,
                        name: a.target.name,
                        snippet: a.target.snippet
                    },
                    point: a.point,
                    pixelOffset: 0
                })
            },
            F = function(a) {
                TGOS.TGEvent.trigger_(f, "mouseup", {
                    featureData: {
                        author: n.author,
                        description: a.target.description,
                        name: a.target.name,
                        snippet: a.target.snippet
                    },
                    point: a.point,
                    pixelOffset: 0
                })
            },
            G = function(a) {
                TGOS.TGEvent.trigger_(f, "mousemove", {
                    featureData: {
                        author: n.author,
                        description: a.target.description,
                        name: a.target.name,
                        snippet: a.target.snippet
                    },
                    point: a.point,
                    pixelOffset: 0
                })
            },
            A = function(a) {
                TGOS.TGEvent.trigger_(f, "mouseout", {
                    featureData: {
                        author: n.author,
                        description: a.target.description,
                        name: a.target.name,
                        snippet: a.target.snippet
                    },
                    point: a.point,
                    pixelOffset: 0
                })
            },
            B = function(a) {
                TGOS.TGEvent.trigger_(f, "dblclick", {
                    featureData: {
                        author: n.author,
                        description: a.target.description,
                        name: a.target.name,
                        snippet: a.target.snippet
                    },
                    point: a.point,
                    pixelOffset: 0
                })
            },
            C = function(a) {
                TGOS.TGEvent.trigger_(f, "rightclick", {
                    featureData: {
                        author: n.author,
                        description: a.target.description,
                        name: a.target.name,
                        snippet: a.target.snippet
                    },
                    point: a.point,
                    pixelOffset: 0
                })
            };
        m = "loading";
        if (!d) throw "Invalid kml url";
        TGOS.getJSON(d, function(a) {
            if (!a || a.error) m = TGOS.TGKmlLayerStatus.FETCH_ERROR, "function" == typeof e && e.call(this, m);
            else {
                var d = a.kml;
                d.Document ? (d.Document.hasOwnProperty("description") && (d.Document.description.hasOwnProperty("#cdata-section") ?
                        n.description = d.Document.description["#cdata-section"] : n.description = d.Document.description), d.Document.hasOwnProperty("name") && (d.Document.name.hasOwnProperty("#cdata-section") ? n.name = d.Document.name["#cdata-section"] : n.name = d.Document.name), d.Document.hasOwnProperty("Snippet") && (d.Document.Snippet.hasOwnProperty("#cdata-section") ? n.snippet = d.Document.Snippet["#cdata-section"] : n.snippet = d.Document.Snippet), d.Document.hasOwnProperty("atom:author") && f.handleAuthor(d.Document["atom:author"]), f.Schema =
                    d.Document.Schema) : (d.hasOwnProperty("description") && (d.description.hasOwnProperty("#cdata-section") ? n.description = d.description["#cdata-section"] : n.description = d.description), d.hasOwnProperty("name") && (d.name.hasOwnProperty("#cdata-section") ? n.name = d.name["#cdata-section"] : n.name = d.name), d.hasOwnProperty("Snippet") && (d.Snippet.hasOwnProperty("#cdata-section") ? n.snippet = d.Snippet["#cdata-section"] : n.snippet = d.Snippet), d.hasOwnProperty("atom:author") && f.handleAuthor(d["atom:author"]));
                f.parseKML(a.kml);
                m = TGOS.TGKmlLayerStatus.OK;
                b && !0 == b.preserveViewport && (a = f.getDefaultViewport()) && g.fitBounds(a);
                "function" == typeof e && e.call(f, m)
            }
        }, TGOS.PROXY_SERVICE2, function() {
            "function" == typeof e && e.call(this, TGOS.TGKmlLayerStatus.FETCH_ERROR)
        });
        this.getNode = function() {
            return g.getPanes().graphicLayer
        }
    };
    TGOS.RegisterEvent(TGOS.TGKmlLayer, "click mousemove mouseout mouseover dblclick rightclick".split(" "))
})();
TGOS.TGWmtsLayer = function() {
    var a = function(a) {
        this.matrixSet = a.matrixSet;
        this.matrixId = a.matrixId;
        this.row = a.row;
        this.col = a.col;
        this.left = a.left;
        this.top = a.top
    };
    a.prototype.equals = function(a) {
        return this.matrixSet == a.matrixSet && this.matrixId == a.matrixId && this.row == a.row && this.col == a.col
    };
    return function(d, b, e, f, g) {
        var h = b.getPanes().overlayviewLayer,
            k = "number" == typeof f.left ? f.left : null,
            l = "number" == typeof f.top ? f.top : null,
            n = "number" == typeof f.right ? f.right : null,
            m = "number" == typeof f.bottom ? f.bottom :
            null,
            p = [],
            s, q = !1,
            v = this,
            z = "number" == typeof e.dpi ? 25.4 / e.dpi / 1E3 : 2.8E-4,
            E = "string" == typeof e.style ? e.style : "default",
            F = "string" == typeof e.format ? e.format : "image/png",
            G = "number" == typeof e.tileWidth ? e.tileWidth : 256;
        null != f.container && (h = f.container);
        var A = "number" == typeof f.opacity ? f.opacity : 1;
        0 > A && (A = 0);
        1 < A && (A = 1);
        var B = "number" == typeof f.zIndex ? f.zIndex : "auto",
            C = !1 == f.wmtsVisible ? !1 : !0,
            u = null,
            w = document.createElement("div");
        w.style.position = "relative";
        w.style.left = "0px";
        w.style.top = "0px";
        w.style.width =
            "100%";
        w.style.height = "100%";
        w.style.zIndex = B;
        w.style.display = C ? "" : "none";
        h.appendChild(w);
        document.createElement("img");
        var t;
        this.moveToTop = function() {
            h && (h.removeChild(w), h.appendChild(w))
        };
        this.getMatrixSetId = function() {
            return u["ows:Identifier"]
        };
        this.getTileOpacity = function() {
            return A
        };
        this.setTileOpacity = function(a) {
            "number" == typeof a && (A = a, w && (w.style.opacity = A, w.style.filter = "alpha(opacity=" + 100 * A + ")"))
        };
        this.getNode = function() {
            return w
        };
        this.getSource = function() {
            return d
        };
        this.setZIndex =
            function(a) {
                B = a;
                w && (w.style.zIndex = B)
            };
        this.getZIndex = function() {
            return B
        };
        this.RemoveSelf = function() {
            h.removeChild(w)
        };
        var D = function() {
                var a = this,
                    b = 0;
                a.style.opacity = b;
                var d = A / 7,
                    e = setInterval(function() {
                        b >= A ? (a.style.filter = "alpha(opacity=" + 100 * A + ")", a.style.opacity = A, clearInterval(e)) : (a.style.opacity = b, a.style.filter = "alpha(opacity=" + 100 * b + ")", b += d)
                    }, 33);
                a.style.filter = "alpha(opacity=0)";
                this.style.display = "block"
            },
            H = function(b, d, e) {
                if (!b) return null;
                var f;
                if (b.TileMatrix.length || b.TileMatrix["ows:Identifier"] !=
                    d)
                    for (var g = 0; g < b.TileMatrix.length; g++) {
                        if (b.TileMatrix[g]["ows:Identifier"] == d) {
                            f = b.TileMatrix[g];
                            break
                        }
                    } else f = b.TileMatrix;
                if (!f) return null;
                var g = parseFloat(f.MatrixWidth),
                    h = parseFloat(f.MatrixHeight);
                mIdx = 0 == g ? 1 : g - 1;
                mIdy = 0 == h ? 1 : h - 1;
                var l = e.left,
                    k = e.top,
                    m = e.right,
                    n = e.bottom;
                e = [];
                h = f.TopLeftCorner;
                g = parseFloat(h.split(" ")[0]);
                h = parseFloat(h.split(" ")[1]);
                f = parseFloat(f.ScaleDenominator) * G * z;
                var p;
                p = l <= g ? 0 : Math.floor((l - g) / f);
                l = p + Math.ceil(Math.abs(l - m) / f) + 1;
                m = k >= h ? 0 : Math.floor((h - k) / f);
                k = m +
                    Math.ceil(Math.abs(n - k) / f) + 1;
                for (n = m; n < k; n++)
                    for (m = p; m < l; m++) {
                        var t = new a({
                            left: g + m * f,
                            top: h - n * f,
                            matrixId: d,
                            matrixSet: b["ows:Identifier"],
                            col: m,
                            row: n
                        });
                        e.push(t)
                    }
                return e
            },
            J = function(a, b) {
                for (var d = 0, e = Infinity, f = a.ToMapDistX(G), g = 0; g < b.TileMatrix.length; g++) {
                    var h = parseFloat(b.TileMatrix[g].ScaleDenominator) * G * z,
                        h = Math.abs(h - f);
                    h < e && (e = h, d = g)
                }
                return 0.1 < e / f ? null : b.TileMatrix[d]["ows:Identifier"]
            };
        this.getTiles = function(a) {
            var f = a.handler,
                g = new TGOS.TGEnvelope(a.rl, a.rt, a.rr, a.rb),
                g = P(g),
                h = J(s, u),
                g = H(u, h, g);
            if (!g) return null;
            for (var h = [], l = [], k = 0; k < g.length; k++) b.getCoordSys() == TGOS.TGCoordSys.EPSG3857 ? (a = TGOS.GooToWGS84(g[k].left, g[k].top), h.push(new TGOS.TGPoint(a.x, a.y))) : h.push(new TGOS.TGPoint(g[k].left, g[k].top)), a = N(d, "1.0.0", e.layer, g[k].matrixSet, g[k].matrixId, g[k].row, g[k].col), l.push(a);
            f && f.call(this, {
                leftTopAnchor: h,
                imageUrl: l
            })
        };
        this.Initialize = function(a) {
            s = a;
            TGOS.getJSON(d + "?SERVICE=WMTS&REQUEST=GetCapabilities&VERSION=1.0.0", function(a) {
                t = a.Capabilities;
                if (!t) throw "Service Error";
                a = t.Contents.TileMatrixSet;
                if ("undefined" != typeof a.length)
                    for (var b = 0; b < a.length; b++) {
                        var d = a[b]["ows:Identifier"];
                        if (d && d == e.matrixSet) {
                            u = a[b];
                            break
                        }
                        u = a[0]
                    } else u = a;
                q = !0;
                v.RebuildElement();
                v.UpdateElement();
                g && g.call(this)
            }, TGOS.PROXY_SERVICE2)
        };
        this.UpdateElement = function() {
            if (q && C && u) {
                this.RebuildElement();
                for (var a = 0; a < p.length; a++) {
                    var b;
                    b = s.FromMapPoint(p[a].left, p[a].top);
                    p[a].img.style.left = b.x + "px";
                    p[a].img.style.top = b.y + "px"
                }
            }
        };
        this.putVisible = function(a) {
            C = a;
            w.style.display = a ? "" : "none"
        };
        this.getWmtsVisible = function() {
            return C
        };
        this.setWmtsVisible = function(a) {
            this.putVisible(a)
        };
        this.removeWmtsLayer = function() {
            b.removeLayer(this)
        };
        var P = function(a) {
                null !== k && a.left < k && (a.left = k);
                null !== l && a.top > l && (a.top = l);
                null !== n && a.right > n && (a.right = n);
                null !== m && a.bottom < m && (a.bottom = m);
                return a
            },
            N = function(a, b, d, e, f, g, h) {
                return a + "?SERVICE=WMTS&REQUEST=GetTile&VERSION=" + b + "&Layer=" + d + "&Style=" + E + "&Format=" + F + "&TileMatrixSet=" + e + "&TileMatrix=" + f + "&TileRow=" + g + "&TileCol=" + h
            },
            Q;
        this.RebuildElement =
            function() {
                if (q && C && u) {
                    var a = s.ToMapPoint(0, 0),
                        f = s.ToMapPoint(s.getClientWidth(), s.getClientHeight()),
                        g = b.getZoom();
                    if (Q != g && 0 < p.length) {
                        for (var h = 0; h < p.length; h++) w.removeChild(p[h].img);
                        p = []
                    }
                    Q = g;
                    g = J(s, u);
                    if (null != g) {
                        a = new TGOS.TGEnvelope(a.x, a.y, f.x, f.y);
                        a = P(a);
                        g = H(u, g, a);
                        if (!g) return null;
                        a = [];
                        for (h = 0; h < g.length; h++) {
                            for (var f = g[h], l = !1, k = 0; k < p.length; k++)
                                if (p[k].equals(f)) {
                                    l = !0;
                                    break
                                }
                            l || a.push(f)
                        }
                        for (g = 0; g < a.length; g++) f = a[g], l = N(d, "1.0.0", e.layer, f.matrixSet, f.matrixId, f.row, f.col), h = w, k = document.createElement("img"),
                            k.style.display = "none", k.onload = D, k.style.position = "absolute", k.galleryImg = !1, k.hideFocus = !0, k.style.MozUserSelect = "none", k.border = "0px", k.src = l, k.style.opacity = A, k.style.filter = "alpha(opacity=" + 100 * A + ")", h.appendChild(k), f.img = k, p.push(f)
                    }
                }
            };
        b.addLayer(this, !0)
    }
}();
TGOS.TGWfsLayer = function() {
    function a(a, b) {
        var d = a.split("?");
        if (1 == d.length) return null;
        for (var d = d[1].split("&"), e = 0; e < d.length; e++) {
            var f = d[e].split("=");
            if (f[0].toUpperCase() == b.toUpperCase()) return f[1]
        }
    }
    var d = function(a) {
            a = a.split(".");
            for (var b = [], d = 0; d < a.length; d++) b.push(a[d]);
            return b
        },
        b = function(a, b) {
            if ("1" != b[0] || "0" != b[1]) {
                a = a["#text"] || a;
                a = a.replace(/[\s]*$/gi, "").replace(/^[\s]*/gi, "").split(/[\s]+/);
                for (var d = [], e = 0; e < a.length; e += 2) {
                    var f = new TGOS.TGPoint(parseFloat(a[e]), parseFloat(a[e +
                        1]));
                    d.push(f)
                }
            } else {
                a = a["#text"] || a;
                for (var g = a.replace(/[\s]*$/gi, "").replace(/^[\s]*/gi, "").split(/[\s]+/), d = [], e = 0; e < g.length; e++) f = g[e].split(","), f = new TGOS.TGPoint(parseFloat(f[0]), parseFloat(f[1])), d.push(f)
            }
            return d
        },
        e = function(a, b, d) {
            var e = [],
                f;
            for (f in a) {
                var m = a[f];
                if (m && "object" === typeof m)
                    for (var p in m) switch (p) {
                        case b + ":MultiPolygon":
                            for (var A = h(m[p], b, d), B = 0; B < A.length; B++) e.push(A[B]);
                            break;
                        case b + ":MultiSurface":
                            A = h(m[p], b, d);
                            for (B = 0; B < A.length; B++) e.push(A[B]);
                            break;
                        case b + ":Polygon":
                            B =
                                g(m, b, d);
                            e.push(B);
                            break;
                        case b + ":MultiLineString":
                            A = l(m[p], b, d);
                            for (B = 0; B < A.length; B++) e.push(A[B]);
                            break;
                        case b + ":MultiCurve":
                            A = l(m[p], b, d);
                            for (B = 0; B < A.length; B++) e.push(A[B]);
                            break;
                        case b + ":LineString":
                            B = k(m, b, d);
                            e.push(B);
                            break;
                        case b + ":MultiPoint":
                            var B = b,
                                A = d,
                                C = m[p][B + ":pointMember"],
                                u = [];
                            if (void 0 !== C.length)
                                for (var w = 0; w < C.length; w++) {
                                    var t = n(C[w], B, A);
                                    u.push(t)
                                } else t = n(C, B, A), u.push(t);
                            A = u;
                            for (B = 0; B < A.length; B++) e.push(A[B]);
                            break;
                        case b + ":Point":
                            B = n(m[b + ":Point"], b, d), e.push(B)
                    }
            }
            return e
        },
        f = function(a, d, e) {
            a = b(a[d + ":coordinates"] || a[d + ":posList"], e);
            a = new TGOS.TGLineString(a);
            return new TGOS.TGLinearRing(a)
        },
        g = function(a, b, d) {
            var e = [];
            a = a[b + ":Polygon"];
            var g = f((a[b + ":outerBoundaryIs"] || a[b + ":exterior"])[b + ":LinearRing"], b, d);
            e.push(g);
            if (a = a[b + ":innerBoundaryIs"] || a[b + ":interior"])
                if (a instanceof Array)
                    for (g = 0; g < a.length; g++) {
                        var h = a[g][b + ":LinearRing"],
                            h = f(h, b, d);
                        e.push(h)
                    } else h = a[b + ":LinearRing"], h = f(h, b, d), e.push(h);
            return new TGOS.TGPolygon(e)
        },
        h = function(a, b, d) {
            a = a[b + ":polygonMember"] ||
                a[b + ":surfaceMember"];
            var e = [];
            if (void 0 !== a.length)
                for (var f = 0; f < a.length; f++) {
                    var h = g(a[f], b, d);
                    e.push(h)
                } else h = g(a, b, d), e.push(h);
            return e
        },
        k = function(a, d, e) {
            a = a[d + ":LineString"];
            d = b(a[d + ":coordinates"] || a[d + ":posList"], e);
            return new TGOS.TGLineString(d)
        },
        l = function(a, b, d) {
            a = a[b + ":lineStringMember"] || a[b + ":curveMember"];
            var e = [];
            if (void 0 !== a.length)
                for (var f = 0; f < a.length; f++) {
                    var g = k(a[f], b, d);
                    e.push(g)
                } else g = k(a, b, d), e.push(g);
            return e
        },
        n = function(a, d, e) {
            return b(a[d + ":coordinates"] || a[d + ":pos"],
                e)[0]
        },
        m = function(a, b, d) {
            this.zIndex = 0;
            this.defaultViewport = null;
            this.preserveViewport = !0;
            this.callback = d;
            this.gs = [];
            b && (void 0 !== b.map && this.setMap(b.map), void 0 !== b.preserveViewport && this.setPreserveViewport(b.preserveViewport), void 0 !== b.zIndex && this.setZIndex(b.zIndex), void 0 !== b.wfsVisible && this.setWfsVisible(b.wfsVisible));
            this.setUrl(a);
            this.update(this.callback)
        },
        p = m.prototype;
    p.update = function(b) {
        if (this.url && this.map) {
            var f = a(this.url, "typeName"),
                g = a(this.url, "version");
            if (!g) throw "Invalid WFS version";
            if (!f) throw "Invalid Type Name";
            var h = d(g);
            if (3 != h.length) throw "Invalid WFS version";
            f.split(":");
            var l = "",
                k = "",
                m = this;
            TGOS.getJSON(this.url, function(a) {
                if (!a || a.error) b.call(this, a.error);
                else {
                    var d, g;
                    for (g in a) 0 <= g.indexOf("FeatureCollection") && (d = a[g]);
                    if (d) {
                        for (var n in d)
                            if (0 <= n.indexOf("@xmlns:")) {
                                if ("http://www.opengis.net/gml" == d[n] || "http://www.opengis.net/gml/3.2" == d[n]) l = n.replace("@xmlns:", "");
                                if ("http://www.opengis.net/wfs" == d[n] || "http://www.opengis.net/wfs/2.0" == d[n]) k = n.replace("@xmlns:",
                                    "")
                            }
                        d = d[l + ":featureMember"] || d[l + ":featureMembers"] || d[l + ":member"] || d[k + ":member"];
                        a = [];
                        if (d) {
                            if (d.length)
                                for (g = 0; g < d.length; g++)
                                    for (n = e(d[g][f], l, h), p = 0; p < n.length; p++) a.push(n[p]);
                            else
                                for (g = g = 0; g < d[f].length; g++) {
                                    n = e(d[f][g], l, h);
                                    for (var p = 0; p < n.length; p++) a.push(n[p])
                                }
                            for (d = 0; d < a.length; d++) a[d] instanceof TGOS.TGPolygon ? (g = new TGOS.TGFill(m.map, a[d]), g.setOpacity(0.5), m.gs.push(g)) : a[d] instanceof TGOS.TGLineString ? (g = new TGOS.TGLine(m.map, a[d]), g.setStrokeWeight(4), m.gs.push(g)) : a[d] instanceof
                            TGOS.TGPoint && (g = new TGOS.TGMarker(m.map, a[d]), m.gs.push(g));
                            m.setZIndex(m.zIndex);
                            m.setWfsVisible(m.visible);
                            m.map && !0 == m.preserveViewport && m.getDefaultViewport() && m.map.fitBounds(m.getDefaultViewport());
                            b && b.call(m)
                        }
                    }
                }
            }, TGOS.PROXY_SERVICE2)
        }
    };
    p.setUrl = function(a, b) {
        this.url = a
    };
    p.setPreserveViewport = function(a) {
        this.preserveViewport = a
    };
    p.setZIndex = function(a) {
        this.zIndex = a;
        for (a = 0; a < this.gs.length; a++) this.gs[a].setZIndex(this.zIndex)
    };
    p.setMap = function(a) {
        this.map = a
    };
    p.getDefaultViewport = function() {
        if (!this.defaultViewport) {
            for (var a =
                    Infinity, b = -Infinity, d = -Infinity, e = Infinity, f = 0; f < this.gs.length; f++) {
                var g = this.gs[f].getBounds();
                g && (a = Math.min(a, g.left), e = Math.min(e, g.bottom), b = Math.max(b, g.right), d = Math.max(d, g.top))
            }
            isFinite(a) && isFinite(d) && isFinite(b) && isFinite(e) ? this.defaultViewport = new TGOS.TGEnvelope(a, d, b, e) : this.defaultViewport = null
        }
        return this.defaultViewport
    };
    p.getUrl = function() {
        return this.url
    };
    p.removeWfs = function() {
        for (var a = 0; a < this.gs.length; a++) this.gs[a].setMap(null), this.gs[a] = null;
        this.gs = [];
        this.map = null
    };
    p.getZIndex = function() {
        return this.zIndex
    };
    p.getWfsVisible = function() {
        return this.visible
    };
    p.setWfsVisible = function(a) {
        this.visible = a;
        for (a = 0; a < this.gs.length; a++) this.gs[a].setVisible(this.visible)
    };
    p.getNode = function() {
        return this.map.getPanes().graphicLayer
    };
    return m
}();
TGOS.CDC_SERVICE = getWebProtocal() + getAPIPath() + "CDCDistrict/StatisticsCombined.aspx";
TGOS.TGCounty = {
    KEELUNG: {
        code: "11"
    },
    TAIPEI: {
        code: "01"
    },
    XINBEI: {
        code: "31"
    },
    TAOYUAN: {
        code: "32"
    },
    HSINCHUCOUNTY: {
        code: "33"
    },
    HSINCHUCITY: {
        code: "12"
    },
    MIAOLI: {
        code: "35"
    },
    TAICHUNG: {
        code: "03"
    },
    CHANGHUA: {
        code: "37"
    },
    NANTOU: {
        code: "38"
    },
    YUNLIN: {
        code: "39"
    },
    CHIAYICOUNTY: {
        code: "40"
    },
    CHIAYICITY: {
        code: "22"
    },
    TAINAN: {
        code: "05"
    },
    KAOHSIUNG: {
        code: "07"
    },
    PINGTUNG: {
        code: "43"
    },
    YILAN: {
        code: "34"
    },
    HUALIEN: {
        code: "45"
    },
    TAITUNG: {
        code: "46"
    },
    PENGHU: {
        code: "44"
    },
    KINMEN: {
        code: "90"
    },
    LIENCHIANG: {
        code: "91"
    }
};
TGOS.TGCDCStatMapId = {
    COUNTYMAP: "COUNTYMAP",
    TOWNMAP: "TOWNMAP"
};
TGOS.TGCDCStatServiceStatus = {
    ERROR: "ERROR",
    INVALID_REQUEST: "INVALID_REQUEST",
    OK: "OK",
    OVER_QUERY_LIMIT: "OVER_QUERY_LIMIT",
    REQUEST_DENIED: "REQUEST_DENIED",
    UNKNOWN_ERROR: "UNKNOWN_ERROR",
    ZERO_RESULTS: "ZERO_RESULTS"
};
TGOS.TGCDCDistrictStat = function() {
    var a = function(a, d) {
            var f, g, h;
            if (!d) return null;
            switch (a) {
                case "year":
                    f = d.slice(0, 4);
                    if (isNaN(parseInt(f))) throw "Invalid Date";
                    break;
                case "month":
                    f = d.slice(0, 4);
                    g = d.slice(4, 6);
                    if (isNaN(parseInt(f)) || isNaN(parseInt(g))) throw "Invalid Date";
                    break;
                case "week":
                    f = d.slice(0, 4);
                    h = d.slice(4, 6);
                    if (isNaN(parseInt(f)) || isNaN(parseInt(h))) throw "Invalid Date";
                    break;
                default:
                    return null
            }
            return {
                year: f,
                month: g,
                week: h
            }
        },
        d = {
            EPSG3857: "EPSG3857",
            EPSG3826: "EPSG3826"
        };
    this.stat = function(b,
        e, f, g) {
        if (f) {
            if (!f) throw "Missing Request";
            if (!(e in d)) throw "Invalid Coordinate System";
            var h = f.width;
            b = f.height;
            var k = f.diseaseCode,
                l = f.graduatedColor,
                n = f.ageGroup,
                m = f.statType,
                p = f.date1,
                s = f.date2,
                q = f.gender,
                v = f.classifyMethod,
                z = f.dateType,
                E = f.countyName,
                F = f.classes,
                G = f.originInfection,
                A = f.layer,
                B = f.county,
                C = f.autoSize;
            switch (z) {
                case "year":
                    break;
                case "month":
                    break;
                case "week":
                    break;
                default:
                    throw "Invalid dateType";
            }
            f = a(z, p);
            s = a(z, s);
            if (!f || !s) throw "date1 and date2 are required";
            switch (G) {
                case "0":
                    G =
                        "0";
                    break;
                case "1":
                    G = "1";
                    break;
                default:
                    G = "all"
            }
            switch (q) {
                case "male":
                    q = "m";
                    break;
                case "female":
                    q = "f";
                    break;
                case "all":
                    q = "all";
                    break;
                default:
                    q = "all"
            }
            switch (n) {
                case "0to14":
                    n = "1";
                    break;
                case "15to49":
                    n = "2";
                    break;
                case "50upper":
                    n = "3";
                    break;
                default:
                    n = "a"
            }
            switch (m) {
                case "confirmed":
                    m = "deter";
                    break;
                case "reported":
                    m = "report";
                    break;
                default:
                    m = "deter"
            }
            switch (v) {
                case "EqualInterval":
                    v = "ei";
                    break;
                case "Quantile":
                    v = "qt";
                    break;
                case "StanDevi":
                    v = "sd";
                    break;
                case "TBClassfy":
                    v = "2005TB";
                    s = f;
                    break;
                default:
                    v = "ei"
            }
            switch (l.toLowerCase()) {
                case "red":
                    l =
                        "red";
                    break;
                case "yellow":
                    l = "yellow";
                    break;
                case "green'":
                    l = "green";
                    break;
                case "blue":
                    l = "blue";
                    break;
                default:
                    l = "green"
            }
            switch (E) {
                case !0:
                    E = "true";
                    break;
                case !1:
                    E = "false";
                    break;
                default:
                    E = "false"
            }
            k = "?disease=" + k;
            C || (k = k + "&width=" + h + "&height=" + b);
            k = k + "&layer=" + A;
            k = k + "&classm=" + v;
            k = k + "&color=" + l;
            k = k + "&gender=" + q;
            k = k + "&classes=" + F;
            k = k + "&ag=" + n;
            k = k + "&dateType=" + z;
            k = k + "&sy=" + f.year;
            k = k + "&ey=" + s.year;
            k = k + "&label=" + E;
            k = k + "&oi=" + G;
            k = k + "&stattype=" + m;
            B && B.code && (k = k + "&targetDist=" + B.code);
            switch (z) {
                case "week":
                    k =
                        k + "&sw=" + f.week;
                    k = k + "&ew=" + s.week;
                    break;
                case "month":
                    k = k + "&sm=" + f.month, k = k + "&em=" + s.month
            }
            b = TGOS.CDC_SERVICE + k + "&t=data";
            var u = TGOS.CDC_SERVICE + k + "&t=img&keystr=" + encodeURIComponent(TGOS.tgHash),
                w = {};
            TGOS.getJSON(b, function(a) {
                if (a)
                    if (a.error) switch (a.error) {
                        case "ZERO_RESULT":
                            g.call(this, w, "ZERO_RESULT");
                            break;
                        default:
                            g.call(this, w, "INVALID_REQUEST")
                    } else {
                        w.district = a.district;
                        w.legend = a.legend;
                        if ("EPSG3826" == e) var b = parseFloat(a.bounds.left),
                            d = parseFloat(a.bounds.top),
                            f = parseFloat(a.bounds.right),
                            l = parseFloat(a.bounds.bottom);
                        else "EPSG3857" == e && (d = TGOS.TWD97toWGS84(a.bounds.left, a.bounds.top), a = TGOS.TWD97toWGS84(a.bounds.right, a.bounds.bottom), b = d.x, d = d.y, f = a.x, l = a.y);
                        w.envelope = new TGOS.TGEnvelope(b, d, f, l);
                        b = (d - l) / (f - b);
                        C && (u = u + "&width=" + h, u = u + "&height=" + Math.round(h * b));
                        w.imageUrl = u;
                        g.call(this, w, "OK")
                    } else g.call(this, w, "INVALID_REQUEST")
            })
        } else g.call(this, null)
    }
};
TGOS.TGMarkerCluster = function() {
    var a = TGOS.RES_PATH + "clusters/cluster-10-99.png",
        d = TGOS.RES_PATH + "clusters/cluster-100-999.png",
        b = TGOS.RES_PATH + "clusters/cluster-999up.png",
        e = new TGOS.TGImage(TGOS.RES_PATH + "clusters/cluster-2-9.png", new TGOS.TGSize(36, 36), null, new TGOS.TGPoint(18, 18)),
        a = new TGOS.TGImage(a, new TGOS.TGSize(48, 48), null, new TGOS.TGPoint(24, 24)),
        d = new TGOS.TGImage(d, new TGOS.TGSize(64, 64), null, new TGOS.TGPoint(32, 32)),
        b = new TGOS.TGImage(b, new TGOS.TGSize(72, 72), null, new TGOS.TGPoint(36,
            36)),
        f = function(a, b, d) {
            a = {
                center: {
                    x: a.x,
                    y: a.y
                },
                markers: b,
                symbols: []
            };
            d && (a.centerLonLat = {
                x: d.x,
                y: d.y
            });
            return a
        },
        g = function(a) {
            if (!a) return null;
            for (var b = Infinity, d = Infinity, e = -Infinity, f = -Infinity, g = 0; g < a.length; g++) var h = a[g].getPosition(),
                b = Math.min(b, h.x),
                d = Math.min(d, h.y),
                e = Math.max(e, h.x),
                f = Math.max(f, h.y);
            a = new TGOS.TGEnvelope;
            a.left = b;
            a.top = f;
            a.right = e;
            a.bottom = d;
            return a
        },
        h = function(a, b, d) {
            var e = this;
            this.map = a ? a : null;
            this.clusters = [];
            this.markers = [];
            if (b && b.length)
                for (var f = 0; f < b.length; f++) this.markers.push(b[f]);
            this.clickable = !0;
            this.clickHandler = function() {
                e.clickable && TGOS.TGEvent.trigger_(e, "clusterclick", {
                    specifiedCluster: this.cluster.markers,
                    clusterEnvelope: g(this.cluster.markers)
                })
            };
            TGOS.TGEvent.addListener(a, "idle", function() {
                e.redrawViewport()
            });
            TGOS.TGEvent.addListener(a, "zoom_changed", function() {
                if (e.map.getZoom() > e.maxZoom) {
                    e.clearClusters();
                    for (var a = 0; a < e.markers.length; a++) e.markers[a].setMap(e.map)
                } else {
                    for (a = 0; a < e.markers.length; a++) e.markers[a].setMap(null);
                    e.clearClusters()
                }
            });
            d && ("number" ==
                typeof d.bounds && (this.bounds = d.bounds), "number" == typeof d.maxZoom && (this.maxZoom = d.maxZoom), d.scaleClass && "number" == typeof d.scaleClass.length && (this.scaleClass = d.scaleClass), d.style && "number" == typeof d.style.length && (this.styles = d.style), d.updateCenter && (this.updateCenter = d.updateCenter))
        },
        k = h.prototype;
    k.clusters = null;
    k.cursor = "default";
    k.visible = !0;
    k.zIndex = 0;
    k.bounds = 30;
    k.map = null;
    k.markers = null;
    k.scaleClass = [9, 99, 999];
    k.classifyMarker = function(a) {
        var b = Infinity,
            d = null,
            e = this.map.getMapBase(),
            g = a.getPosition(),
            h = this.map.getCoordSys();
        h == TGOS.TGCoordSys.EPSG3857 && (g = a.gPos);
        var k = e.FromMapPoint(g.x, g.y),
            z = 2 * this.bounds;
        if (0 == this.clusters.length) {
            var E = a.getPosition();
            if (h == TGOS.TGCoordSys.EPSG3857) var F = E,
                E = a.gPos;
            g = f({
                x: E.x,
                y: E.y
            }, [a], F);
            this.clusters.push(g)
        } else {
            for (var G = 0; G < this.clusters.length; G++) {
                var A = this.clusters[G].center,
                    E = e.FromMapPoint(A.x, A.y),
                    A = k.x - E.x,
                    E = k.y - E.y,
                    A = Math.sqrt(A * A + E * E);
                A <= b && (b = A, d = G)
            }
            b <= z ? (b = this.clusters[d], this.updateCenter && (b.center.x = (b.center.x * b.markers.length +
                g.x) / (b.markers.length + 1), b.center.y = (b.center.y * b.markers.length + g.y) / (b.markers.length + 1)), b.markers.push(a), g = b) : (E = a.getPosition(), h == TGOS.TGCoordSys.EPSG3857 && (F = E, E = a.gPos), g = f({
                x: E.x,
                y: E.y
            }, [a], F), this.clusters.push(g))
        }
        a.isClustered = !0;
        return a.parentCluster = g
    };
    k.styles = [{
        icon: e,
        label: new TGOS.TGPoint(0, 0),
        labelColor: "#f0f0f0",
        labelSize: 12
    }, {
        icon: a,
        label: new TGOS.TGPoint(0, 0),
        labelColor: "#f0f0f0",
        labelSize: 14
    }, {
        icon: d,
        label: new TGOS.TGPoint(0, 0),
        labelColor: "#f0f0f0",
        labelSize: 16
    }, {
        icon: b,
        label: new TGOS.TGPoint(0, 0),
        labelColor: "#f0f0f0",
        labelSize: 18
    }];
    k.setMarkers = function(a, b) {
        this.markers = a;
        for (var d = 0; d < this.markers.length; d++) this.classifyMarker(this.markers[d])
    };
    k.getClickable = function() {
        return this.clickable
    };
    k.setClickable = function(a) {
        this.clickable = a
    };
    k.addMarkers = function(a, b) {
        for (var d = 0; d < a.length; d++) this.markers.push(a[d]);
        b && this.redrawAll()
    };
    k.addMarker = function(a, b) {
        this.markers.push(a);
        b && this.redrawAll()
    };
    k.redrawAll = function() {
        if (this.map.getZoom() > this.maxZoom) {
            this.clearClusters();
            for (var a = 0; a < this.markers.length; a++) this.markers[a].setMap(this.map)
        } else {
            for (a = 0; a < this.markers.length; a++) this.markers[a].setMap(null);
            this.clearClusters();
            this.redrawViewport()
        }
    };
    k.clearAll = function() {
        this.clearClusters();
        this.markers = []
    };
    k.clearClusters = function() {
        for (var a = 0; a < this.clusters.length; a++) {
            for (var b = this.clusters[a], d = 0; d < b.symbols.length; d++) b.symbols[d].setMap(null);
            b.symbols = [];
            for (d = 0; d < b.markers.length; d++) b.markers[d].isClustered = !1
        }
        this.clusters = []
    };
    k.getClustersCounts =
        function() {
            return this.clusters ? this.clusters.length : 0
        };
    k.getExtendedBounds = function() {
        var a = this.map.getRawBound(),
            b = this.bounds,
            d = a.left,
            e = a.top,
            f = a.right,
            a = a.bottom,
            g = this.map.getMapBase().FromMapDistX(b),
            b = this.map.getMapBase().FromMapDistY(b);
        return new TGOS.TGEnvelope(d - g, e + b, f + g, a - b)
    };
    k.redrawViewport = function() {
        if (this.map)
            if (this.map.getZoom() > this.maxZoom) this.clearClusters();
            else {
                for (var a = this.getExtendedBounds(), b = 0; b < this.markers.length; b++) {
                    var d = this.markers[b],
                        e = d.getPosition();
                    this.map.getCoordSys() ==
                        TGOS.TGCoordSys.EPSG3857 && (d.gPos || (d.gPos = TGOS.WGS84ToGoo(e.x, e.y)), e = d.gPos);
                    !d.isClustered && a.contains(e) && this.classifyMarker(this.markers[b])
                }
                for (a = 0; a < this.clusters.length; a++) 0 >= this.clusters[a].symbols.length && this.addClusterMarker(this.clusters[a])
            }
    };
    k.addClusterMarker = function(a) {
        var b;
        b = a.centerLonLat ? a.centerLonLat : a.center;
        var d = new TGOS.TGPoint(b.x, b.y);
        b = a.markers.length;
        var e = new TGOS.TGMarker(null, d);
        e.setFlat(!0);
        e.setClickable(!0);
        e.setVisible(this.visible);
        e.setZIndex(this.zIndex);
        e.setMap(this.map);
        a.symbols.push(e);
        if (1 < b) {
            var f = new TGOS.TGLabel({
                map: this.map,
                position: d,
                fontColor: "#ff0000",
                fontSize: this.bounds,
                fontWeight: "bold",
                opacity: 1,
                zIndex: this.zIndex + 1,
                label: b.toString()
            });
            f.setZIndex(this.zIndex + 1);
            f.setVisible(this.visible);
            a.symbols.push(f)
        }
        a: {
            var d = this.scaleClass,
                g = this.styles;
            if (1 == a.markers.length) a.symbols[0].setIcon(a.markers[0].getIcon());
            else {
                for (var h = 0; h < d.length; h++)
                    if (a.markers.length <= d[h]) {
                        d = h > g.length - 1 ? g[g.length - 1] : g[h];
                        a.symbols[0].setIcon(d.icon);
                        a.symbols[0].setTitle(a.markers.length);
                        a.symbols[1].setFontColor(d.labelColor ? d.labelColor : "#f0f0f0");
                        a.symbols[1].setFontSize(d.labelSize ? d.labelSize : 12);
                        d.labelAnchor && a.symbols[1].setOffset(d.labelAnchor);
                        break a
                    }
                d = g[g.length - 1];
                a.symbols[0].setIcon(d.icon);
                a.symbols[0].setTitle(a.markers.length);
                a.symbols[1].setFontColor(d.labelColor ? d.labelColor : "#f0f0f0");
                a.symbols[1].setFontSize(d.labelSize ? d.labelSize : 12);
                d.labelAnchor && a.symbols[1].setOffset(d.labelAnchor)
            }
        }
        1 == b && (TGOS.TGEvent.copyEvent(a.markers[0],
            e), e.setTitle(a.markers[0].getTitle()), e.annotation = a.markers[0].annotation);
        f && (f.cluster = a, TGOS.TGEvent.addListener(f, "click", this.clickHandler));
        e && (e.cluster = a, TGOS.TGEvent.addListener(e, "click", this.clickHandler))
    };
    k.getScaleClass = function() {
        return this.scaleClass
    };
    k.setScaleClass = function(a) {
        this.scaleClass = a
    };
    k.setClusterStyle = function(a) {
        this.styles = a
    };
    k.getClusterStyle = function() {
        return this.styles
    };
    k.removeMarker = function(a, b) {
        for (var d = 0; d < this.markers.length; d++)
            if (this.markers[d] == a) {
                this.markers.splice(d,
                    1);
                break
            }
        b && this.redrawAll()
    };
    k.removeMarkers = function(a, b) {
        for (var d = 0; d < a.length; d++)
            for (var e = 0; e < this.markers.length; e++)
                if (this.markers[e] == a[d]) {
                    this.markers.splice(e, 1);
                    break
                }
        b && this.redrawAll()
    };
    k.setVisible = function(a, b) {
        this.visible = a;
        b && this.redrawAll()
    };
    k.getVisible = function() {
        return this.visible
    };
    k.setSearchBounds = function(a) {
        this.bounds = a
    };
    k.getSearchBounds = function() {
        return this.bounds
    };
    k.getCursor = function() {
        return this.cursor
    };
    k.setCursor = function(a, b) {
        this.cursor = a;
        b && this.redrawAll()
    };
    k.setZIndex = function(a, b) {
        this.zIndex = a;
        b && this.redrawAll()
    };
    k.getZIndex = function() {
        return this.zIndex
    };
    k.maxZoom = Infinity;
    k.getMaxZoom = function() {
        return this.maxZoom
    };
    k.setMaxZoom = function(a) {
        this.maxZoom = a
    };
    k.getClusterBounds = function() {
        return g(this.markers)
    };
    TGOS.RegisterEvent(h, ["clusterclick"]);
    return h
}();
TGOS.TGData = function() {
    var a = "Point MultiPoint LineString MultiLineString Polygon MultiPolygon GeometryCollection".split(" "),
        d = function(a, b, d) {
            var e = a[0];
            a = a[1];
            b = b == d ? {
                x: e,
                y: a
            } : TGOS[b + "to" + d](e, a);
            return new TGOS.TGPoint(b.x, b.y)
        },
        b = function(a, e, f) {
            switch (a.type) {
                case "Point":
                    return d(a.coordinates, e, f);
                case "MultiPoint":
                    for (var g = [], m = 0; m < a.coordinates.length; m++) g.push(d(a.coordinates[m], e, f));
                    return new TGOS.TGMultiPoint(g);
                case "LineString":
                    g = [];
                    for (m = 0; m < a.coordinates.length; m++) g.push(d(a.coordinates[m],
                        e, f));
                    return new TGOS.TGLineString(g);
                case "MultiLineString":
                    for (var p = [], s = 0; s < a.coordinates.length; s++) {
                        g = [];
                        for (m = 0; m < a.coordinates[s].length; m++) g.push(d(a.coordinates[s][m], e, f));
                        g = new TGOS.TGLineString(g);
                        p.push(g)
                    }
                    return new TGOS.TGMultiLineString(p);
                case "Polygon":
                    for (var q = [], s = 0; s < a.coordinates.length; s++) {
                        g = [];
                        if (0 == s)
                            for (m = 0; m < a.coordinates[s].length; m++) g.push(d(a.coordinates[s][m], e, f));
                        else
                            for (m = a.coordinates[s].length - 1; 0 <= m; m--) g.push(d(a.coordinates[s][m], e, f));
                        g = new TGOS.TGLineString(g);
                        g = new TGOS.TGLinearRing(g);
                        q.push(g)
                    }
                    return new TGOS.TGPolygon(q);
                case "MultiPolygon":
                    for (var v = [], p = 0; p < a.coordinates.length; p++) {
                        q = [];
                        for (s = 0; s < a.coordinates[p].length; s++) {
                            g = [];
                            for (m = 0; m < a.coordinates[p][s].length; m++) g.push(d(a.coordinates[p][s][m], e, f));
                            g = new TGOS.TGLineString(g);
                            g = new TGOS.TGLinearRing(g);
                            q.push(g)
                        }
                        s = new TGOS.TGPolygon(q);
                        v.push(s)
                    }
                    return new TGOS.TGMultiPolygon(v);
                case "GeometryCollection":
                    e = [];
                    for (p = 0; p < a.geometries.length; p++) f = b(a.geometries[p]), e.push(f);
                    return new TGOS.TGGeometryCollection(e);
                default:
                    throw "Unable to import GeoJSON";
            }
        },
        e = function(a, d, e, f) {
            e = b(a.geometry, e, f);
            f = a.properties;
            a = a.id;
            d && d.idPropertyName && f && (a = f[d.idPropertyName]);
            return new TGOS.TGGraphic({
                geometry: e,
                properties: f,
                id: a
            })
        },
        f = function(a) {
            this.graphics = [];
            a.map && (this.map = a.map);
            a.style && (this.style = a.style)
        };
    f.prototype = new TGOS.MVCObject;
    var g = f.prototype;
    g.graphics = null;
    g.map = null;
    g.style = null;
    g.add = function(a) {
        if (a instanceof TGOS.TGGraphic) return this.graphics.push(a), this.bindTo("style", a, "style"), a.draw(this.map),
            this.bindEvents(a), TGOS.TGEvent.trigger_(this, "addgraphic", a), a
    };
    g.bindEvents = function(a) {
        var b = this;
        TGOS.TGEvent.addListener(a, "setproperty", function(a) {
            b.redraw(a.graphic);
            TGOS.TGEvent.trigger_(b, "setproperty", a)
        });
        TGOS.TGEvent.addListener(a, "setgeometry", function(a) {
            b.redraw(a.graphic);
            TGOS.TGEvent.trigger_(b, "setgeometry", a)
        });
        TGOS.TGEvent.addListener(a, "removeproperty", function(a) {
            b.redraw(a.graphic);
            TGOS.TGEvent.trigger_(b, "removeproperty", a)
        });
        TGOS.TGEvent.addListener(a, "mousedown", function(d) {
            d.graphic =
                a;
            TGOS.TGEvent.trigger_(b, "mousedown", d)
        });
        TGOS.TGEvent.addListener(a, "mouseup", function(d) {
            d.graphic = a;
            TGOS.TGEvent.trigger_(b, "mouseup", d)
        });
        TGOS.TGEvent.addListener(a, "mousemove", function(d) {
            d.graphic = a;
            TGOS.TGEvent.trigger_(b, "mousemove", d)
        });
        TGOS.TGEvent.addListener(a, "mouseover", function(d) {
            d.graphic = a;
            TGOS.TGEvent.trigger_(b, "mouseover", d)
        });
        TGOS.TGEvent.addListener(a, "dblclick", function(d) {
            d.graphic = a;
            TGOS.TGEvent.trigger_(b, "dblclick", d)
        });
        TGOS.TGEvent.addListener(a, "click", function(d) {
            d.graphic =
                a;
            TGOS.TGEvent.trigger_(b, "click", d)
        });
        TGOS.TGEvent.addListener(a, "rightclick", function(d) {
            d.graphic = a;
            TGOS.TGEvent.trigger_(b, "rightclick", d)
        });
        TGOS.TGEvent.addListener(a, "mouseout", function(d) {
            d.graphic = a;
            TGOS.TGEvent.trigger_(b, "mouseout", d)
        })
    };
    g.removeAllGraphics = function() {
        this.forEach(function(a) {
            this.remove(a)
        })
    };
    g.remove = function(a) {
        if (a && this.contains(a)) {
            a.clear();
            var b = this.graphics.indexOf(a);
            this.graphics.splice(b, 1);
            TGOS.TGEvent.trigger_(this, "removegraphic", a)
        }
    };
    g.forEach = function(a,
        b) {
        for (var d = this.graphics.slice(0), e = 0; e < d.length; e++) a.call(b, d[e])
    };
    g.contains = function(a) {
        if (!(a instanceof TGOS.TGGraphic)) return !1;
        for (var b = 0; b < this.graphics.length; b++)
            if (this.graphics[b] == a) return !0;
        return !1
    };
    g.getGraphicById = function(a) {
        for (var b = 0; b < this.graphics.length; b++)
            if (this.graphics[b].id === a) return this.graphics[b]
    };
    g.getMap = function() {
        return this.map
    };
    g.setMap = function(a) {
        this.clearAll();
        (this.map = a) && this.redrawAll()
    };
    g.clearAll = function() {
        this.forEach(function(a) {
            a.clear()
        })
    };
    g.getStyle = function() {
        return this.style
    };
    g.setStyle = function(a) {
        this.set("style", a);
        this.redrawAll()
    };
    g.redrawAll = function() {
        var a = this;
        this.forEach(function(b) {
            b.redraw(a.map)
        })
    };
    g.redraw = function(a) {
        that = this;
        this.contains(a) && a.redraw(that.map)
    };
    g.overrideStyle = function(a, b) {
        a instanceof TGOS.TGGraphic && (a.ownStyle = b, a.redraw())
    };
    g.revertStyle = function(a) {
        a instanceof TGOS.TGGraphic && (a.ownStyle = null, a.redraw())
    };
    g.loadGeoJson = function(a, b, d) {
        var e, f = this;
        e = window.XMLHttpRequest ? new XMLHttpRequest :
            new ActiveXObject("Microsoft.XMLHTTP");
        e.onreadystatechange = function() {
            if (4 == e.readyState && 200 == e.status) {
                var a = JSON.parse(e.responseText),
                    a = f.addGeoJson(a);
                d.call(void 0, a)
            }
        };
        e.open("GET", a, !0);
        e.send()
    };
    g.addGeoJson = function(d, f) {
        if (!d) throw "Unable to import GeoJSON";
        var g = "WGS84";
        if (d.crs && "name" == d.crs.type && d.crs.properties) {
            var n = d.crs.properties.name;
            "urn:ogc:def:crs:EPSG::3826" == n ? g = "TWD97" : "urn:ogc:def:crs:EPSG::3825" == n && (g = "TWD67")
        }
        n = null;
        switch (this.map.getCoordSys()) {
            case TGOS.TGCoordSys.EPSG3857:
                n =
                    "WGS84";
                break;
            case TGOS.TGCoordSys.EPSG3826:
                n = "TWD97";
                break;
            case TGOS.TGCoordSys.EPSG3825:
                n = "TWD67";
                break;
            default:
                throw "Invalid Map CRS";
        }
        if (0 <= a.indexOf(d.type)) return g = b(d, g, n), g = new TGOS.TGGraphic({
            geometry: g
        }), this.add(g), [g];
        if ("Feature" == d.type) return g = e(d, f, g, n), this.add(g), [g];
        if ("FeatureCollection" == d.type) {
            for (var m = n, n = [], p = 0; p < d.features.length; p++) n.push(e(d.features[p], f, g, m));
            for (g = 0; g < n.length; g++) this.add(n[g]);
            return n
        }
        throw "Unable to import GeoJSON";
    };
    TGOS.RegisterEvent(f, "addgraphic removegraphic removeproperty setgeometry setproperty click dblclick mousedown mouseup mouseout mouseover mousemove rightclick".split(" "));
    return f
}();
TGOS.TGGeometry.TGSpherical = function() {
    var a = {
        EARTH_RADIUS: 6378137,
        computeSignedArea: function(a, b) {
            for (var e = "number" == typeof b ? b : 6378137, f = 0, g = a.length, h = a[g - 1].x, k = a[g - 1].y, l = 0; l < g; l++) var n = a[l].x,
                m = a[l].y,
                f = f + TGOS.math.toRadian(n - h) * (2 + Math.sin(TGOS.math.toRadian(k)) + Math.sin(TGOS.math.toRadian(m))),
                h = n,
                k = m;
            return f * e * e / 2
        },
        computeArea: function(d, b) {
            return Math.abs(a.computeSignedArea(d), b)
        },
        computeDistanceBetween: function(a, b, e) {
            e = "number" == typeof e ? e : 6378137;
            var f = TGOS.math.toRadian(a.y),
                g = TGOS.math.toRadian(b.y);
            a = TGOS.math.toRadian(b.x - a.x);
            return e * Math.acos(Math.sin(f) * Math.sin(g) + Math.cos(f) * Math.cos(g) * Math.cos(a))
        },
        computeHeading: function(a, b) {
            var e = TGOS.math.toRadian(a.y),
                f = TGOS.math.toRadian(b.y),
                g = TGOS.math.toRadian(b.x - a.x),
                h = Math.sin(g) * Math.cos(f),
                e = Math.cos(e) * Math.sin(f) - Math.sin(e) * Math.cos(f) * Math.cos(g);
            return TGOS.math.toDegree(Math.atan2(h, e))
        },
        computeLength: function(d, b) {
            for (var e = 0, f = 0; f < d.length - 1; f++) e += a.computeDistanceBetween(d[f], d[f + 1], b);
            return e
        },
        computeOffset: function(a, b, e,
            f) {
            var g = "number" == typeof f ? f : 6378137;
            e = TGOS.math.toRadian(e);
            f = TGOS.math.toRadian(a.y);
            a = TGOS.math.toRadian(a.x);
            g = b / g;
            b = Math.asin(Math.sin(f) * Math.cos(g) + Math.cos(f) * Math.sin(g) * Math.cos(e));
            e = a + Math.atan2(Math.sin(e) * Math.sin(g) * Math.cos(f), Math.cos(g) - Math.sin(f) * Math.sin(b));
            return new TGOS.TGPoint(TGOS.math.toDegree(e), TGOS.math.toDegree(b))
        },
        interpolate: function(a, b, e) {
            var f = TGOS.math.toRadian(a.y);
            a = TGOS.math.toRadian(a.x);
            var g = TGOS.math.toRadian(b.y),
                h = TGOS.math.toRadian(b.x),
                k = Math.cos(f),
                f = Math.sin(f),
                l = Math.cos(g),
                g = Math.sin(g),
                n = Math.cos(h - a),
                m = f * g + k * l * n;
            if (1 <= m) return b.slice();
            m = e * Math.acos(m);
            b = Math.cos(m);
            e = Math.sin(m);
            h = Math.sin(h - a) * l;
            l = Math.atan2(h, k * g - f * l * n);
            h = Math.asin(f * b + k * e * Math.cos(l));
            a += Math.atan2(Math.sin(l) * e * k, b - f * Math.sin(h));
            return new TGOS.TGPoint(TGOS.math.toDegree(a), TGOS.math.toDegree(h))
        }
    };
    return a
}();
(function() {
    TGOS.TGOverlayView = function() {};
    var a = TGOS.TGOverlayView.prototype;
    a.setMap = function(a) {
        null == a ? (this.map.removeLayer(this), this.map = null) : a instanceof TGOS.TGOnlineMap && (this.map = a, this.map.addLayer(this))
    };
    a.getMap = function() {
        return this.map
    };
    a.getPanes = function() {
        return this.map ? this.map.getPanes() : null
    };
    a.getProjection = function() {
        if (!this.map) return null;
        var a = this.map,
            b = a.getMapBase(),
            e = a.getCoordSys();
        return {
            fromDivToMap: function(a) {
                if (e == TGOS.TGCoordSys.EPSG3857) return a = b.ToMapPoint(a.x,
                    a.y), a = TGOS.WGS84ToGoo(a.x, a.y), new TGOS.TGPoint(a.x, a.y);
                a = b.ToMapPoint(a.x, a.y);
                return new TGOS.TGPoint(a.x, a.y)
            },
            fromMapToDiv: function(a) {
                if (e == TGOS.TGCoordSys.EPSG3857) return a = TGOS.WGS84ToGoo(a.x, a.y), a = b.FromMapPoint(a.x, a.y), new TGOS.TGPoint(a.x, a.y);
                a = b.FromMapPoint(a.x, a.y);
                return new TGOS.TGPoint(a.x, a.y)
            }
        }
    };
    a.Initialize = function() {
        this.onAdd()
    };
    a.UpdateElement = function() {
        this.onDraw()
    };
    a.RebuildElement = function() {
        this.onDraw()
    };
    a.RemoveSelf = function() {
        this.onRemove()
    }
})();
(function() {
    var a = function(a, b, d, h) {
            this.max = "number" == typeof a ? a : 1;
            this.min = "number" == typeof b ? b : 0;
            this.radius = d;
            h && (this.stops = h);
            a = document.createElement("canvas");
            a.width = 1;
            a.height = d;
            a = a.getContext("2d");
            b = a.createLinearGradient(0, 0, 0, d);
            for (var k = h = 1 / this.stops.length, l = 0; l < this.stops.length; l++) b.addColorStop(k, this.stops[l]), k += h;
            a.fillStyle = b;
            a.fillRect(0, 0, 1, d);
            this.data = a.getImageData(0, 0, 1, d).data
        },
        d = a.prototype;
    d.stops = "rgba(0,0,255,0) #00f #0ff #0f0 #ff0 #f00".split(" ");
    d.getColor =
        function(a) {
            a = (a - this.min) / (this.max - this.min);
            1 < a && (a = 1);
            a = 4 * Math.round((this.radius - 1) * a);
            return [this.data[a], this.data[a + 1], this.data[a + 2], this.data[a + 3]]
        };
    var b = function(a, b, d) {
        for (var h = [], k = 2 * a, l = 0; l < k; l++) {
            for (var n = [], m = 0; m < k; m++) {
                var p = a - 1 - l,
                    s = a - 1 - m,
                    p = Math.sqrt(p * p + s * s),
                    s = 0,
                    q = p / a,
                    q = 0.5 > q ? 2 * q * q : -1 + (4 - 2 * q) * q;
                p < a && (s = b * (1 - q));
                n.push(s)
            }
            h.push(n)
        }
        this.cmap = h;
        this.radius = a;
        this.intensity = b;
        d && (this.maxIntensity = d.maxIntensity)
    };
    b.prototype.process = function(a, b, d) {
        var h = a.length,
            k = a[0].length;
        b -= this.radius;
        var l = b + 2 * this.radius;
        d -= this.radius;
        for (var n = d + 2 * this.radius, l = 0 > l ? 0 : l >= h ? h : l, m = 0 > d ? 0 : d > k ? k : d, k = 0 > n ? 0 : n >= k ? k : n, n = -Infinity, p = Infinity, h = 0 > b ? 0 : b > h ? h : b; h < l; h++)
            for (var s = m; s < k; s++) a[h][s] += this.cmap[h - b][s - d], "number" == typeof this.maxIntensity && a[h][s] > this.maxIntensity && (a[h][s] = maxIntensity), n = Math.max(n, a[h][s]), p = Math.min(p, a[h][s]);
        return {
            max: n,
            min: p
        }
    };
    TGOS.TGHeatmapLayer = function(a) {
        this.data = [];
        this.div = document.createElement("div");
        this.div.style.width = "100%";
        this.div.style.height =
            "100%";
        this.div.style.position = "absolute";
        this.cv = document.createElement("canvas");
        this.cv.style.position = "absolute";
        this.div.appendChild(this.cv);
        this.ctx = this.cv.getContext("2d");
        this.cacheImage = new Image;
        a && this.setOptions(a)
    };
    TGOS.TGHeatmapLayer.prototype = new TGOS.TGOverlayView;
    d = TGOS.TGHeatmapLayer.prototype;
    d.getData = function() {
        return this.data
    };
    d.createKernels = function() {
        this.kernels = [];
        for (var a = 0; a < this.data.length; a++) {
            var d = "number" == typeof this.data[a].weight ? this.data[a].weight : 1,
                g = 1;
            this.dissipating && (g = this.map.getZoom(), g = Math.pow(2, g));
            d = new b((this.radius ? this.radius : 10) * g, d);
            this.kernels.push(d)
        }
    };
    d.setData = function(a) {
        this.data = a;
        this.createKernels();
        this.draw_()
    };
    d.createHeatmap = function(a, b) {
        for (var d = [], h = 0; h < a; h++) {
            for (var k = [], l = 0; l < b; l++) k.push(null);
            d.push(k)
        }
        return d
    };
    d.onAdd = function() {
        this.getPanes().overlayviewLayer.appendChild(this.div);
        this.width = this.div.clientWidth;
        this.height = this.div.clientHeight;
        this.cv.width = this.width;
        this.cv.height = this.height;
        var a =
            this;
        this.chl && TGOS.TGEvent.removeListener(this.chl);
        this.il && TGOS.TGEvent.removeListener(this.il);
        this.rl && TGOS.TGEvent.removeListener(this.rl);
        this.chl = TGOS.TGEvent.addListener(this.map, "center_changed", function() {
            a.translate()
        });
        this.il = TGOS.TGEvent.addListener(this.map, "idle", function() {
            a.draw_()
        });
        this.rl = TGOS.TGEvent.addListener(this.map, "resize", function() {
            a.width = a.div.clientWidth;
            a.height = a.div.clientHeight;
            a.cv.width = a.div.clientWidth;
            a.cv.height = a.div.clientHeight;
            a.draw_()
        });
        a.draw_()
    };
    d.translate = function() {
        if (this.center_) {
            var a = this.getProjection(),
                b = this.map.getCenter(),
                d = a.fromMapToDiv(this.center_),
                b = a.fromMapToDiv(b),
                a = b.x - d.x,
                d = b.y - d.y;
            this.ctx.clearRect(0, 0, this.width, this.height);
            this.ctx.drawImage(this.cacheImage, -a, -d)
        }
    };
    d.draw_ = function() {
        this.heatmap = this.createHeatmap(this.width, this.height);
        var b = -Infinity,
            d = 0,
            g = this.getProjection();
        this.kernels && !this.dissipating || this.createKernels();
        for (var h = 0; h < this.data.length; h++) var k = g.fromMapToDiv(this.data[h]),
            k = this.kernels[h].process(this.heatmap,
                Math.round(k.x), Math.round(k.y)),
            b = Math.max(k.max, b),
            d = Math.min(k.min, d);
        "number" == typeof this.maxIntensity && (b = this.maxIntensity);
        b = new a(b, d, 256, this.gradient ? this.gradient : this.stops);
        this.ctx.clearRect(0, 0, this.width, this.height);
        d = this.ctx.createImageData(this.width, this.height);
        for (g = 0; g < this.heatmap.length; g++)
            for (h = 0; h < this.heatmap[g].length; h++)
                if (k = this.heatmap[g][h], null != k) {
                    var k = b.getColor(k),
                        l = d,
                        n = k[1],
                        m = k[2],
                        p = k[3],
                        s = 4 * (g + h * l.width);
                    l.data[s] = k[0];
                    l.data[s + 1] = n;
                    l.data[s + 2] = m;
                    l.data[s +
                        3] = p
                }
        this.ctx.putImageData(d, 0, 0);
        this.cacheImage.src = this.cv.toDataURL();
        this.center_ = this.map.getCenter()
    };
    d.onDraw = function() {};
    d.onRemove = function() {
        this.div.parentNode.removeChild(this.div)
    };
    d.setOptions = function(a) {
        a && (a.data && (this.data = a.data), void 0 !== a.dissipating && (this.dissipating = a.dissipating), void 0 !== a.gradient && (this.gradient = a.gradient), void 0 !== a.maxIntensity && (this.maxIntensity = a.maxIntensity), void 0 !== a.opacity && (this.opacity = a.opacity), this.div.style.opacity = this.opacity ? this.opacity :
            0.6, void 0 !== a.radius && (this.radius = a.radius), this.kernels = null, this.setMap(a.map || this.map))
    }
})();
(function() {
    TGOS.TGLayerSwipe = function(a) {
        if (a)
            if (a.map && (this.map = a.map), a.layers && (this.layers = a.layers), this.node = "object" != typeof node ? document.getElementById(a.node) : a.node, "string" == typeof a.type && (this.type = a.type), this.left = "number" == typeof a.left ? a.left : "horizontal" == this.type ? a.map.getDiv().offsetWidth : (a.map.getDiv().offsetWidth + 1) / 2, this.top = "number" == typeof a.top ? a.top : "horizontal" == this.type ? (a.map.getDiv().offsetHeight + 1) / 2 : a.map.getDiv().offsetHeight, this.map && this.layers) this.onAdd();
            else throw "map and layers must be provided";
    };
    TGOS.TGLayerSwipe.prototype = new TGOS.TGOverlayView;
    var a = TGOS.TGLayerSwipe.prototype;
    a.onAdd = function() {
        this.buildNode();
        this.updateClip_()
    };
    a.destroy = function() {
        this.node.innerHTML = "";
        if (this.layers)
            for (var a = 0; a < this.layers.length;) {
                var b = this.layers[a];
                b.getNode && b.getNode() && (b.getNode().style.clip = "");
                a++
            }
    };
    a.buildNode = function() {
        var a = this;
        if (this.node) {
            var b = document.createElement("div"),
                e = document.createElement("div");
            this.node.appendChild(b);
            this.node.appendChild(e);
            this.getPanes().controlLayer.appendChild(this.node);
            if ("horizontal" == this.type || "vertical" == this.type) {
                "horizontal" == this.type ? (this.node.style.left = "0px", this.node.style.top = "4px", this.node.style.width = "100%", this.node.style.position = "absolute", b.style.top = -(b.clientHeight / 2) + "px", b.style.position = "absolute", b.style.backgroundColor = "#eaeaea", b.style.borderTop = "1px solid #505050", b.style.borderBottom = "1px solid #505050", b.style.height = "4px", b.style.width = "100%", e.style.left =
                    this.left / 2 + "px", e.style.position = "absolute", e.style.backgroundColor = "#eaeaea", e.style.border = "1px solid #505050", e.style.borderRadius = "4px", e.style.width = "36px", e.style.height = "18px", e.style.cursor = "col-resize", e.style.background = "linear-gradient(to bottom,#eaeaea,#eaeaea,lightgray)", e.style.top = "-9px") : (e.setAttribute("class", "handle vertical-handle"), b.setAttribute("class", "bar vertical-bar"), this.node.style.left = this.left + "px", this.node.style.top = "0px", this.node.style.height = "100%", this.node.style.position =
                    "absolute", b.style.left = -(b.clientWidth / 2) + "px", b.style.position = "absolute", b.style.backgroundColor = "#eaeaea", b.style.borderTop = "1px solid #505050", b.style.borderBottom = "1px solid #505050", b.style.width = "4px", b.style.height = "100%", e.style.top = this.top / 2 - e.clientHeight / 2 + "px", e.style.position = "absolute", e.style.backgroundColor = "#eaeaea", e.style.border = "1px solid #505050", e.style.borderRadius = "4px", e.style.width = "18px", e.style.height = "36px", e.style.cursor = "col-resize", e.style.background = "linear-gradient(to right,#eaeaea,#eaeaea,lightgray)",
                    e.style.left = "-9px");
                var b = function(a) {
                        AttachEvent(document.body, "mousemove", g);
                        AttachEvent(document.body, "mouseup", f);
                        a.preventDefault && a.preventDefault();
                        return !1
                    },
                    f = function(a) {
                        DetachEvent(document.body, "mousemove", g);
                        DetachEvent(document.body, "mouseup", f);
                        a.preventDefault && a.preventDefault();
                        return !1
                    },
                    g = function(b) {
                        if (a.node && a.node.parentNode) {
                            var e = a.node.parentNode.getBoundingClientRect();
                            "horizontal" == a.type ? a.top = b.clientY - e.top : a.left = b.clientX - e.left;
                            a.updateClip_();
                            b.preventDefault && b.preventDefault();
                            return !1
                        }
                    };
                AttachEvent(e, "mousedown", b)
            } else if ("round" == this.type || "square" == this.type) this.node.style.width = "300px", this.node.style.height = "300px", this.node.style.position = "absolute", this.top *= 0.25, this.left /= 2, console.log(this.top), console.log(this.left), this.node.style.left = this.left + "px", this.node.style.top = this.top + "px", "square" == this.type ? this.node.style.border = "1px solid #eaeaea" : "round" == this.type && (this.node.style.borderStyle = "solid", this.node.style.borderRadius = "50%", this.node.style.borderColor =
                "#eaeaea"), b = function(b) {
                AttachEvent(document.body, "mousemove", g);
                AttachEvent(document.body, "mouseup", f);
                a.clientX = b.clientX;
                a.clientY = b.clientY;
                b.preventDefault && b.preventDefault();
                return !1
            }, f = function(a) {
                DetachEvent(document.body, "mousemove", g);
                DetachEvent(document.body, "mouseup", f);
                a.preventDefault && a.preventDefault();
                return !1
            }, g = function(b) {
                if (a.node && a.node.parentNode) {
                    var e = b.clientY - a.clientY,
                        f = b.clientX - a.clientX;
                    if (!(a.top + e + 300 + 10 >= document.body.clientHeight || a.left + f + 300 + 10 >= document.body.clientWidth ||
                            3 > a.top + e || 3 > a.left + f)) return a.node.style.top = a.top + e + "px", a.top += e, a.clientY = b.clientY, a.node.style.left = a.left + f + "px", a.left += f, a.clientX = b.clientX, a.updateClip_(), b.preventDefault && b.preventDefault(), !1
                }
            }, AttachEvent(this.node, "mousedown", b)
        }
    };
    a.updateClip_ = function() {
        console.log(this.type);
        if ("horizontal" == this.type || "vertical" == this.type) {
            for (var a = 0; a < this.layers.length;) {
                var b = this.layers[a];
                if (b.getNode) {
                    var e = b.getNode();
                    e && (e.style.clip = "rect(0px," + this.left + "px," + this.top + "px,0px)")
                }
                a++
            }
            "horizontal" ==
            this.type ? this.node.style.top = this.top + "px" : this.node.style.left = this.left + "px"
        } else if ("round" == this.type || "square" == this.type)
            if ("square" == this.type)
                for (a = 0; a < this.layers.length;) b = this.layers[a], b.getNode && (e = b.getNode()), e && (b.getNode().style.clip = "rect(" + this.top + "px," + (this.left + 300) + "px," + (this.top + 300) + "px," + this.left + "px)"), a++;
            else if ("round" == this.type)
            for (a = 0; a < this.layers.length;) b = this.layers[a], b.getNode && (e = b.getNode()), e && (b = e.childNodes[0].clientWidth && e.childNodes[0].clientHeight ?
                "circle(150px at " + (this.left + 153) + "px " + (this.top + 153) + "px)" : "circle(150px at 50% 50%)", e.style.webkitClipPath = b, e.style.mozClipPath = b, e.style.msClipPath = b, e.style.oClipPath = b, e.style.clipPath = b), a++
    };
    a.setOptions = function(a) {}
})();
(function() {
    var a = function(a) {
            for (var d = "", f = [], g = 0; g < a.length; g++) {
                var h = a[g];
                "t" != h && "r" != h || f.push(g)
            }
            for (g = 0; g < f.length; g++) h = a.slice(f[g] + 1, f[g + 1]), "t" == a[f[g]] ? (h = "translate(" + h + ") ", d += h) : "r" == a[f[g]] && (h = "rotate(" + h + ") ", d += h);
            return d
        },
        d = function(a, d) {
            return function() {
                return "xxxxxxxx-sxxx-gxxx-xxxx-xxxxxxxxxxxx".replace(a, d).toUpperCase()
            }
        }(/[xy]/g, function(a) {
            var d = 16 * Math.random() | 0;
            return ("x" == a ? d : d & 3 | 8).toString(16)
        });
    ISURL = /^url\(['"]?([^\)]+?)['"]?\)$/i;
    TGOS.gfxSurface = function(a) {
        this.shapes = [];
        this.sets = [];
        this.defs = document.createElementNS("http://www.w3.org/2000/svg", "defs");
        a.appendChild(this.defs);
        this.getDefID_ = function() {
            this.defs.childNodes.length
        };
        this.element = function() {
            return a
        };
        this.rect = function(d, f, g, h) {
            var k = document.createElementNS("http://www.w3.org/2000/svg", "rect");
            k.setAttribute("width", g);
            k.setAttribute("height", h);
            k.setAttribute("x", d);
            k.setAttribute("y", f);
            a.appendChild(k);
            k = new TGOS.gfxElement(k);
            this.shapes.push(k);
            k.surfacnode = this;
            return k
        };
        this.image = function(d,
            f, g, h, k) {
            var l = document.createElementNS("http://www.w3.org/2000/svg", "image");
            l.setAttribute("width", h);
            l.setAttribute("height", k);
            l.setAttribute("x", f);
            l.setAttribute("y", g);
            l.setAttributeNS("http://www.w3.org/1999/xlink", "href", d);
            a.appendChild(l);
            l = new TGOS.gfxElement(l, "image");
            this.shapes.push(l);
            l.surfacnode = this;
            l.type = "image";
            return l
        };
        this.text = function(d, f, g) {
            var h = document.createElementNS("http://www.w3.org/2000/svg", "text");
            h.setAttribute("x", d);
            h.setAttribute("y", f);
            h.textContent = g;
            a.appendChild(h);
            h = new TGOS.gfxElement(h);
            this.shapes.push(h);
            h.surfacnode = this;
            return h
        };
        this.circle = function(d, f, g) {
            var h = document.createElementNS("http://www.w3.org/2000/svg", "circle");
            h.setAttribute("cx", d);
            h.setAttribute("cy", f);
            h.setAttribute("r", g);
            a.appendChild(h);
            h = new TGOS.gfxElement(h);
            this.shapes.push(h);
            h.surfacnode = this;
            return h
        };
        this.path = function(d) {
            var f = document.createElementNS("http://www.w3.org/2000/svg", "path");
            f.setAttributeNS(null, "d", d);
            a.appendChild(f);
            f = new TGOS.gfxElement(f);
            this.shapes.push(f);
            f.surfacnode = this;
            return f
        };
        this.clear = function() {};
        this.group = function() {
            var d = document.createElementNS("http://www.w3.org/2000/svg", "g");
            d.style.display = "block";
            a.appendChild(d);
            d = new TGOS.gfxElement(d, "group");
            this.shapes.push(d);
            d.surfacnode = this;
            return d
        }
    };
    TGOS.gfxElement = function(a, d) {
        this.node = a;
        this.type = d;
        "group" == this.type && (this.shapes = [])
    };
    TGOS.gfxElement.prototype.node = null;
    TGOS.gfxElement.prototype.surfacnode = null;
    TGOS.gfxElement.prototype.patternId = null;
    TGOS.gfxElement.prototype.type =
        null;
    TGOS.gfxElement.prototype.getBBox = function(a) {
        return a ? this.node.getBBox() : this.node.getBoundingClientRect()
    };
    TGOS.gfxElement.prototype.element = function() {
        return this.node
    };
    TGOS.gfxElement.prototype.hide = function() {
        return this.node.style.visibility = "hidden"
    };
    TGOS.gfxElement.prototype.show = function() {
        return this.node.style.visibility = "visible"
    };
    TGOS.gfxElement.prototype.attr = function(a) {
        for (var e in a) switch (e) {
            case "path":
                this.node.setAttribute("d", a[e]);
                break;
            case "fill":
                if ("object" == typeof a[e]) {
                    if ("pattern" ==
                        a[e].type) {
                        var f = a[e].src;
                        this.pattern && this.pattern.parentNode.removeChild(this.pattern);
                        var g = document.createElementNS("http://www.w3.org/2000/svg", "pattern");
                        this.pattern = g;
                        if ("100%" == a[e].width && "100%" == a[e].height) {
                            g.setAttribute("patternContentUnits", "objectBoundingBox");
                            g.setAttribute("width", 1);
                            g.setAttribute("height", 1);
                            g.setAttribute("x", 0);
                            g.setAttribute("y", 0);
                            this.patternId = d();
                            g.setAttribute("id", this.patternId);
                            var h = document.createElementNS("http://www.w3.org/2000/svg", "image");
                            g.img =
                                h;
                            var k = this.node,
                                l = this.patternId,
                                n = this.surfacnode;
                            h.setAttribute("x", "0");
                            h.setAttribute("y", "0");
                            h.setAttribute("width", "1");
                            h.setAttribute("height", "1");
                            h.setAttribute("preserveAspectRatio", "none");
                            g.appendChild(h);
                            n.defs.appendChild(g)
                        } else g.setAttribute("patternUnits", "userSpaceOnUse"), g.setAttribute("width", a[e].width), g.setAttribute("height", a[e].height), g.setAttribute("x", a[e].x ? a[e].x : 0), g.setAttribute("y", a[e].y ? a[e].y : 0), this.patternId = d(), g.setAttribute("id", this.patternId), h = document.createElementNS("http://www.w3.org/2000/svg",
                            "image"), g.appendChild(h), g.img = h, k = this.node, l = this.patternId, n = this.surfacnode, n.defs.appendChild(g), h.setAttribute("x", "0"), h.setAttribute("y", "0"), h.setAttribute("width", a[e].width), h.setAttribute("height", a[e].height);
                        h.setAttributeNS("http://www.w3.org/1999/xlink", "href", f);
                        k.setAttribute("fill", "url(#" + l + ")")
                    }
                } else this.node.setAttribute(e, a[e]);
                break;
            case "stroke-dasharray":
                f = "";
                g = parseInt(this.node.getAttributeNS(null, "stroke-width"));
                for (h = 0; h < a[e].length; h++) "_" === a[e][h] ? f += 4 * g + "," : "." ===
                    a[e][h] ? f += g + "," : "~" === a[e][h] ? f += 8 * g + "," : "-" === a[e][h] && (f += 2 * g + ","), f += g + ",";
                "," == f[f.length - 1] && (f = f.substring(0, f.length - 1));
                this.node.setAttribute("stroke-dasharray", f);
                break;
            default:
                this.node.setAttribute(e, a[e])
        }
    };
    TGOS.gfxElement.prototype.setRotate = function(a, d, f) {
        var g = this.node.getAttributeNS(null, "transform");
        rot = void 0 === d && void 0 === f ? " rotate(" + a + ")" : " rotate(" + a + " " + d + " " + f + ")";
        g = g.replace(/rotate\(*.\)/, rot);
        this.node.setAttributeNS(null, "transform", g)
    };
    TGOS.gfxElement.prototype.setTranslate =
        function(a, d) {
            var f = this.node.getAttributeNS(null, "transform"),
                f = f.replace(/translate\(*.\)/, "translate(" + a + " " + d + ")");
            this.node.setAttributeNS(null, "transform", f)
        };
    TGOS.gfxElement.prototype.transform = function(b) {
        this.node.setAttributeNS(null, "transform", a(b))
    };
    TGOS.gfxElement.prototype.translate = function(a, d) {
        var f = this.node.getAttributeNS(null, "transform");
        this.node.setAttributeNS(null, "transform", f + (" translate(" + a + " " + d + ")"))
    };
    TGOS.gfxElement.prototype.rotate = function(a, d, f) {
        var g = this.node.getAttributeNS(null,
            "transform");
        this.node.setAttributeNS(null, "transform", void 0 === d && void 0 === f ? g + (" rotate(" + a + ")") : g + (" rotate(" + a + " " + d + " " + f + ")"))
    };
    TGOS.gfxElement.prototype.scale = function(a, d) {
        var f = this.node.getAttributeNS(null, "transform");
        this.node.setAttributeNS(null, "transform", void 0 === d ? f + (" scale(" + a + ")") : f + (" scale(" + a + " " + d + ")"))
    };
    TGOS.gfxElement.prototype.remove = function() {
        this.pattern && this.pattern.parentNode && this.pattern.parentNode.removeChild(this.pattern);
        this.node && this.node.parentNode && this.node.parentNode.removeChild(this.node)
    };
    TGOS.gfxElement.prototype.insertBefore = function(a) {
        this.surfacnode.element().insertBefore(this.node, a.node)
    };
    TGOS.gfxElement.prototype.rect = function(a, d, f, g) {
        var h = document.createElementNS("http://www.w3.org/2000/svg", "rect");
        h.setAttribute("width", f);
        h.setAttribute("height", g);
        h.setAttribute("x", a);
        h.setAttribute("y", d);
        this.node.appendChild(h);
        h = new TGOS.gfxElement(h);
        this.shapes.push(h);
        h.surfacnode = this.surfacnode;
        return h
    };
    TGOS.gfxElement.prototype.image = function(a, d, f, g, h) {
        var k = document.createElementNS("http://www.w3.org/2000/svg",
            "image");
        k.setAttribute("width", g);
        k.setAttribute("height", h);
        k.setAttribute("x", d);
        k.setAttribute("y", f);
        k.setAttributeNS("http://www.w3.org/1999/xlink", "href", a);
        this.node.appendChild(k);
        k = new TGOS.gfxElement(k, "image");
        this.shapes.push(k);
        k.surfacnode = this.surfacnode;
        return k
    };
    TGOS.gfxElement.prototype.text = function(a, d, f) {
        var g = document.createElementNS("http://www.w3.org/2000/svg", "text");
        g.setAttribute("x", a);
        g.setAttribute("y", d);
        g.textContent = f;
        this.node.appendChild(g);
        g = new TGOS.gfxElement(g);
        this.shapes.push(g);
        g.surfacnode = this.surfacnode;
        return g
    };
    TGOS.gfxElement.prototype.circle = function(a, d, f) {
        var g = document.createElementNS("http://www.w3.org/2000/svg", "circle");
        g.setAttribute("cx", a);
        g.setAttribute("cy", d);
        g.setAttribute("r", f);
        this.node.appendChild(g);
        g = new TGOS.gfxElement(g);
        this.shapes.push(g);
        g.surfacnode = this.surfacnode;
        return g
    };
    TGOS.gfxElement.prototype.path = function(a) {
        var d = document.createElementNS("http://www.w3.org/2000/svg", "path");
        d.setAttributeNS(null, "d", a);
        this.node.appendChild(d);
        d = new TGOS.gfxElement(d);
        this.shapes.push(d);
        d.surfacnode = this.surfacnode;
        return d
    };
    TGOS.gfxElement.prototype.clear = function() {};
    TGOS.gfxElement.prototype.group = function() {
        var a = document.createElementNS("http://www.w3.org/2000/svg", "g");
        this.node.appendChild(a);
        a = new TGOS.gfxElement(a, "group");
        this.shapes.push(a);
        a.surfacnode = this.surfacnode;
        return a
    };
    TGOS.createSurface = function(a, d, f) {
        if (!TGOS.features.svg) return null;
        var g = document.createElementNS("http://www.w3.org/2000/svg", "svg");
        f = "number" ==
            typeof f ? f : "100%";
        g.setAttribute("width", "number" == typeof d ? d : "100%");
        g.setAttribute("height", f);
        g.setAttribute("overflow", "hidden");
        g.style.position = "absolute";
        a.appendChild(g);
        return new TGOS.gfxSurface(g)
    }
})();
TGOS.renderers = TGOS.renderers || function() {
    var a = {
        Renderer: function() {
            this.getColor = function(a) {
                if (this.colorInfo && (a = a.attributes)) {
                    a = (parseFloat(a[this.colorInfo.field]) - this.colorInfo.minValue) / (this.colorInfo.maxValue - this.colorInfo.minValue);
                    var b = this.colorInfo.colors.length;
                    if (2 <= b) {
                        b = a / (1 / (b - 1));
                        a = Math.floor(b);
                        var b = b - a,
                            e = this.colorInfo.colors[a];
                        a = this.colorInfo.colors[a + 1];
                        return a ? a = new TGOS.Color(e.r + (a.r - e.r) * b, e.g + (a.g - e.g) * b, e.b + (a.b - e.b) * b, e.a + (a.a - e.a) * b) : (a = this.colorInfo.colors[this.colorInfo.colors.length -
                            1], a = new TGOS.Color(a.r, a.g, a.b, a.a))
                    }
                }
            };
            this.getRotationAngle = function(a) {
                if (this.rotationInfo && (a = a.attributes)) {
                    a = parseFloat(a[this.rotationInfo.field]);
                    var b, e = this.rotationInfo.type;
                    "geographic" == e ? b = 360 - a - 90 : "arithmetic" == e && (b = a);
                    return b
                }
            };
            this.getSize = function(a) {
                if (this.propotionalSymbolInfo) {
                    var b = a.attributes;
                    if (b) {
                        a = this.propotionalSymbolInfo.maxSize;
                        var e = this.propotionalSymbolInfo.minSize,
                            b = parseFloat(b[this.propotionalSymbolInfo.field]);
                        return b > a ? a : b < e ? e : b
                    }
                }
            };
            this.setColorInfo = function(a) {
                a &&
                    (this.colorInfo = a);
                return this
            };
            this.setSizeInfo = function(a) {
                a && (this.sizeInfo = a);
                return this
            };
            this.setOpacityInfo = function(a) {
                a && (this.opacityInfo = a);
                return this
            };
            this.setProportionalSymbolInfo = function(a) {
                a && (this.propotionalSymbolInfo = a);
                return this
            };
            this.setRotationInfo = function(a) {
                a && (this.rotationInfo = a);
                return this
            }
        },
        ClassBreaksRenderer: function(a, b) {
            this.getSymbol = function(a) {
                for (var b = 0; b < this.infos.length; b++)
                    if (this.infos[b].maxValue > a.attributes[this.attributeField] && this.infos[b].minValue <=
                        a.attributes[this.attributeField]) return this.infos[b].symbol;
                return this.defaultSymbol
            };
            this.infos = [];
            if (!a) throw "Default Symbol must be provided";
            this.defaultSymbol = a;
            if ("string" != typeof b) throw "Attribute field must be provided";
            this.attributeField = b
        }
    };
    TGOS.extend(a.Renderer, a.ClassBreaksRenderer);
    a.ClassBreaksRenderer.prototype.addBreak = function(a) {
        this.infos.push(a)
    };
    a.ClassBreaksRenderer.prototype.removeBreak = function(a) {
        a = this.infos.indexOf(a);
        0 <= a && this.infos.splice(a, 1)
    };
    return a
}();
TGOS.request = function() {
    var a = {},
        d = 0,
        b = function(a) {
            var b = document.createElement("form");
            b.setAttribute("method", a.method ? a.method : "POST");
            b.setAttribute("enctype", "multipart/form-data");
            b.setAttribute("encoding", "multipart/form-data");
            for (var d in a.data) {
                var e = document.createElement("input");
                e.type = "hidden";
                e.name = d;
                e.value = a.data[d];
                b.appendChild(e)
            }
            a = document.createElement("input");
            a.type = "submit";
            b.appendChild(a);
            document.body.appendChild(b);
            return b
        };
    a.iframe = function(a, e) {
        var f = "sgIFrame" + d,
            l = document.createElement("iframe");
        l.setAttribute("id", f);
        l.setAttribute("name", f);
        l.setAttribute("width", "0");
        l.setAttribute("height", "0");
        l.setAttribute("border", "0");
        l.setAttribute("style", "width: 0; height: 0; border: none;");
        var n = e.form ? e.form : b(e);
        document.body.appendChild(l);
        var m = document.getElementById(f),
            p = function() {
                m.detachEvent ? m.detachEvent("onload", p) : m.removeEventListener("load", p, !1);
                m.contentDocument ? content = m.contentDocument.body.innerHTML : m.contentWindow ? content = m.contentWindow.document.body.innerHTML :
                    m.document && (content = m.document.body.innerHTML);
                e.callback && e.callback.call(this, JSON.parse(content));
                m.parentNode.removeChild(m)
            };
        m.addEventListener && m.addEventListener("load", p, !0);
        m.attachEvent && m.attachEvent("onload", p);
        n.setAttribute("target", f);
        n.setAttribute("action", a);
        n.submit();
        d++
    };
    var e = function(a, b, d) {
        return 0 <= a.indexOf("?") ? a + "&" + b + "=" + d : a + "?" + b + "=" + d
    };
    a.getJSON = function(b, d, f, l) {
        var n = DeviceTest();
        "number" != typeof a.ajaxCount__ && (a.ajaxCount__ = 0);
        var m = "sn" + a.ajaxCount__;
        TGOS.request.getJSON[m] =
            function() {
                d.apply(this, arguments);
                delete TGOS.request.getJSON[m]
            };
        f && (b = e(f, "serv", encodeURIComponent(b)));
        b = e(b, "jsonp", encodeURIComponent("TGOS.request.getJSON['" + m + "']"));
        f = document.getElementsByTagName("head");
        if (0 != f.length) {
            var p = document.createElement("script");
            p.type = "text/javascript";
            "MSIE" == n ? p.onreadystatechange = function() {
                this.readyState && "loaded" !== this.readyState && "complete" !== this.readyState || (this.parentNode.removeChild(p), p = void 0)
            } : p.onload = function() {
                this.parentNode.removeChild(p);
                p = void 0
            };
            p.onerror = function() {
                l && l.call(this);
                this.parentNode.removeChild(p);
                p = void 0
            };
            a.ajaxCount__++;
            p.src = b;
            f[0].appendChild(p)
        }
    };
    var f = function(a, b, d) {
        4 == a.readyState && (200 != a.status && 304 != a.status ? d && d.call(this, a.status) : b && b.call(this, a))
    };
    a.ajax = function(a, b) {
        var d;
        d = window.XMLHttpRequest ? new XMLHttpRequest : window.ActiveXObject ? new ActiveXObject("Microsoft.XMLHTTP") : void 0;
        var e = "get",
            n = !1,
            m = null,
            p = null,
            s = null,
            q = null,
            v = null;
        b && ("post" === b.method && (e = "post"), !1 === b.async && (n = !1), !1 === b.async &&
            (m = null), b.user && (p = b.user), b.password && (s = b.password), b.error && (q = b.error), b.complete && (v = b.complete));
        d.open(e, a, n, p, s);
        m && d.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        !0 === n && (d.onreadystatechange = function(a) {
            f(d, v, q)
        });
        4 != d.readyState && (d.send(m), !1 === n && f(d, v, q))
    };
    a.get = function(b, d) {
        d.method = "get";
        a.ajax.call(this, b, d)
    };
    a.post = function(b, d) {
        d.method = "post";
        a.ajax.call(this, b, d)
    };
    return a
}();
(function() {
    var a = /\${[\w:]*}/g,
        d;
    TGOS.GraphicsLayer = function() {
        this.graphics = this.surface = this.lastScale = this.svgContainer = this.surface_ = this.map_ = null;
        this.mouseEventEnabled = !0;
        this.infoTemplate = this.renderer = null;
        this.visible = !0;
        this.graphics = [];
        this.title = this.name = "Graphics Layer";
        this.maxScale = this.minScale = 0;
        this.getNode = function() {
            return this.node
        };
        this.templateReplace = function(b, d) {
            var f = d.match(a);
            if (f)
                for (var g = 0; g < f.length; g++) {
                    var h = f[g].replace("{", "").replace("$", "").replace("}", "").split(":"),
                        k = "";
                    1 >= h.length ? k = b.attributes[h[0]] ? b.attributes[h[0]] : "" : window[h[1]] && (k = window[h[1]].call(this, b.attributes[h[0]], h[0], b.attributes));
                    d = d.replace(f[g], k)
                }
            return d
        };
        this.add = function(a) {
            a && (a.layer = this, a.draw(this.map_, new TGOS.TGPoint(a.attributes.longitude, a.attributes.latitude)), this.graphics.push(a), TGOS.TGEvent.trigger(a, "graphic-add"))
        };
        this.clear = function() {
            for (var a = 0; a < this.graphics.length; a++) {
                var d = this.graphics[a];
                if (!(d instanceof TGOS.Graphic)) return;
                for (var f = 0; f < d.shapes.length; f++) d.shapes[f].remove();
                d.shapes = []
            }
            this.graphics = [];
            TGOS.TGEvent.trigger(d, "graphic-clear")
        };
        this.setInfoTemplate = function(a) {
            tempe && (this.infoTemplate = a)
        };
        this.disableMouseEvents = function() {
            this.mouseEventEnabled = !1
        };
        this.enableMouseEvents = function() {
            this.mouseEventEnabled = !0
        };
        this.getMap = function() {
            return this.map_
        };
        this.isVisibleAtScale = function(a) {
            var d = 0 === this.maxScale || a < this.maxScale;
            return (0 === this.minScale || a > this.minScale) && d
        };
        this.setMaxScale = function(a) {
            "number" == typeof a && (this.maxScale = a, this.map_ && (a = this.map_.getMapBase().getScale(),
                this.isVisibleAtScale(a) || (this.node.style.visibility = "hidden")))
        };
        this.setMinScale = function(a) {
            "number" == typeof a && (this.minScale = a, this.map_ && (a = this.map_.getMapBase().getScale(), this.isVisibleAtScale(a) || (this.node.style.visibility = "hidden")))
        };
        this.setVisibility = function(a) {
            "boolean" == typeof a && (this.node && (this.node.style.visibility = a ? "visible" : "hidden"), this.visible = a)
        };
        this.setRenderer = function(a) {
            this.renderer = a;
            this.map_ && this.redraw()
        };
        this.redraw = function() {
            for (var a = 0; a < this.graphics.length; a++) this.graphics[a].draw()
        };
        this.remove = function(a) {
            if (a instanceof TGOS.Graphic) {
                for (var d = 0; d < a.shapes.length; d++) a.shapes[d].remove();
                a.shapes = [];
                d = this.graphics.indexOf(a); - 1 < d && this.graphics.splice(d, 1);
                TGOS.TGEvent.trigger(a, "graphic-remove")
            }
        };
        this.UpdateElement = function() {
            if (this.map_.getMapBase().getScale() == this.lastScale) {
                var a = this.map_.getMapBase().FromMapPoint(d.x, d.y);
                Math.round(a.x);
                Math.round(a.y);
                this.trans = a
            }
        };
        this.RebuildElement = function() {
            var a = this.map_.getMapBase().getScale(),
                d = a != this.lastScale;
            this.isVisibleAtScale(a) ||
                this.setVisibility(!1);
            d && (this.lt_ = this.map_.getMapBase().ToMapPoint(0, 0), this.trans = new TGOS.TGPoint(0, 0), this.lastScale = this.map_.getMapBase().getScale(), this.visible && this.redraw())
        };
        this.Initialize = function(a) {
            this.map_ = this.mapsa;
            this.map = a;
            this.map_.getMapBase();
            this.map_.getMapBase();
            this.lt_ = this.map_.getMapBase().ToMapPoint(0, 0);
            d = this.map_.getMapBase().ToMapPoint(0, 0);
            this.trans = new TGOS.TGPoint(0, 0);
            this.lastScale = this.map_.getMapBase().getScale();
            this.redraw()
        };
        this.RemoveSelf = function() {
            this.zoomStartEvt_ &&
                this.zoomStartEvt_.remove();
            this.zoomEndEvt_ && this.zoomEndEvt_.remove()
        };
        TGOS.RegisterEvent(TGOS.GraphicsLayer, "graphic-add graphic-remove graphic-clear drag-start drag drag-end click dblclick mousedown mouseup mouseout mouseover mousemove rightclick".split(" "))
    }
})();
(function() {
    var a = function(a, d) {
        for (var f = 0, g = 0, h = 0, k = 0, l; k < a.length;) {
            if (";" == a[k]) {
                l = 1;
                k = 0;
                break
            } else if ("," == a[k]) {
                l = 2;
                k = 0;
                break
            }
            k++
        }
        this.output = function(f, k, p) {
            f = a.slice(f, k);
            1 == l && d.onRead && d.onRead.call(null, {
                row: g,
                col: h,
                value: f,
                status: ";" == p ? "endValue" : "endLine"
            });
            2 == l && d.onRead && d.onRead.call(null, {
                row: g,
                col: h,
                value: f,
                status: "," == p ? "endValue" : "endLine"
            })
        };
        this.readValue = function() {
            var d = "q0",
                e, k;
            if (f >= a.length) return !1;
            e = f;
            if (1 == l)
                for (; f < a.length;) {
                    var s = a[f];
                    if ("q0" == d)
                        if (";" == s || "\n" == s) {
                            TGOS.isNumber(k) ||
                                (k = f);
                            this.output(e, k, s);
                            ";" == s ? h++ : "\n" == s && (g++, h = 0);
                            f++;
                            break
                        } else '"' == s && ('"' == a[f + 1] ? (d = "q2", f++, e += 2) : (d = "q1", e++));
                    else "q1" == d ? '"' == a.slice(f, f + 1) && (k = f, d = "q0") : "q2" == d && '""' == a.slice(f, f + 2) && (k = f, f += 1, d = "q0");
                    f++
                }
            if (2 == l)
                for (; f < a.length;) {
                    s = a[f];
                    if ("q0" == d)
                        if ("," == s || "\n" == s) {
                            TGOS.isNumber(k) || (k = f);
                            this.output(e, k, s);
                            "," == s ? h++ : "\n" == s && (g++, h = 0);
                            f++;
                            break
                        } else '"' == s && ('"' == a[f + 1] ? (d = "q2", f++, e += 2) : (d = "q1", e++));
                    else "q1" == d ? '"' == a.slice(f, f + 1) && (k = f, d = "q0") : "q2" == d && '""' == a.slice(f, f + 2) &&
                        (k = f, f += 1, d = "q0");
                    f++
                }
            return !0
        }
    };
    TGOS.TGCSVLayer = function(a, d) {
        this.url = a;
        this.latFields = "lat latitude y ycenter latitude83 latdecdeg POINT-Y".split(" ");
        this.lonFields = "lon lng long longitude x xcenter longitude83 longdecdeg POINT-X".split(" ");
        d && (TGOS.isString(d.latitudeFieldName) && this.latFields.unshift(d.latitudeFieldName), TGOS.isString(d.longitudeFieldName) && this.lonFields.unshift(d.longitudeFieldName), -1 != d.outSR.indexOf("EPSG") && (this.outSR = d.outSR), this.mapsa = d.map, this.init())
    };
    TGOS.TGCSVLayer.prototype =
        new TGOS.GraphicsLayer;
    var d = TGOS.TGCSVLayer.prototype;
    d.loadCSV = function() {
        var a = this;
        encodeURIComponent(a.url);
        TGOS.request.get(this.url, {
            complete: TGOS.wrap(this, this.parseCSV),
            error: function() {
                if (TGOS.PROXY_SERVICE2) {
                    var d = TGOS.PROXY_SERVICE2 + "?url=" + encodeURIComponent(a.url);
                    TGOS.request.get(d, {
                        complete: TGOS.wrap(a, a.parseCSV)
                    })
                }
            }
        })
    };
    d.parseCSV = function(b) {
        var d = this,
            f = [],
            g = 0,
            h = 0,
            k = {},
            l = 0,
            n = 0;
        for (b = new a(b.responseText, {
                onRead: function(a) {
                    0 == a.row ? (f.push(a.value), 0 <= d.lonFields.indexOf(a.value) ?
                        g = a.col : 0 <= d.latFields.indexOf(a.value) && (h = a.col)) : "endLine" == a.status ? (k[f[a.col]] = a.value, a = new TGOS.TGPoint(l, n), a = -1 != d.outSR.indexOf("3857") ? TGOS.GooToWGS84(a.x, a.y) : a, a = new TGOS.TGGraphic(a), a.attributes = k, d.add(a), k = {}) : (a.col == g && (l = parseFloat(a.value)), a.col == h && (n = parseFloat(a.value)), k[f[a.col]] = a.value)
                }
            }); b.readValue(););
    };
    d.init = function(a) {
        d.Initialize.apply(this, arguments);
        this.loadCSV()
    }
})();
(function() {
    TGOS.TGGauge = function(a, b) {
        this.node = a;
        this.angle = 0;
        this.outRadius = 80;
        this.inRadius = 60;
        b && (b.layer && (this.layer = b.layer), this.maxDataValue = "number" == typeof b.maxDataValue ? b.maxDataValue : 100, this.dataField = "string" == typeof b.dataField ? b.dataField : "", this.dataFormat = "string" == typeof b.dataFormat ? b.dataFormat : "value", this.caption = "string" == typeof b.caption ? b.caption : "", this.title = "string" == typeof b.title ? b.title : "", this.dataLabelField = "string" == typeof b.dataLabelField ? b.dataLabelField : "",
            this.unitLabel = "string" == typeof b.unitLabel ? b.unitLabel : "", this.color = "string" == typeof b.color ? b.color : "#88ff33", this.lowColor = "string" == typeof b.lowColor ? b.lowColor : "#88ff33", this.midColor = "string" == typeof b.midColor ? b.midColor : "#FFD700", this.highColor = "string" == typeof b.highColor ? b.highColor : "#FF2400");
        var e = document.createElement("div");
        e.style.width = "100%";
        e.style.height = "100%";
        this.captionSpan = document.createElement("span");
        this.captionSpan.setAttribute("class", "caption");
        this.captionSpan.style.position =
            "absolute";
        this.captionSpan.style.bottom = "0px";
        this.valueSpan = document.createElement("span");
        this.valueSpan.style.position = "absolute";
        this.valueSpan.setAttribute("class", "value");
        this.titleSpan = document.createElement("span");
        this.titleSpan.setAttribute("class", "title");
        this.titleSpan.style.position = "absolute";
        this.titleSpan.style.top = "0px";
        this.labelSpan = document.createElement("span");
        this.labelSpan.setAttribute("class", "label");
        this.labelSpan.style.position = "absolute";
        this.labelSpan.style.top = "1em";
        this.node && (this.node.appendChild(e), this.node.appendChild(this.captionSpan), this.node.appendChild(this.valueSpan), this.node.appendChild(this.titleSpan), this.node.appendChild(this.labelSpan));
        this.cx = this.node.clientWidth / 2;
        this.cy = 3 * (this.node.clientHeight / 4);
        var f = null,
            f = TGOS.createSurface(e);
        f.path(this.createPathStr(0, this.outRadius, this.inRadius, this.cx, this.cy)).attr({
            fill: "#aaaaaa",
            stroke: "#555555",
            "stroke-width": 2
        });
        this.path = f.path("");
        this.path.attr({
            fill: this.color,
            "stroke-width": 2
        });
        this.captionSpan.innerHTML =
            this.caption;
        this.titleSpan.innerHTML = this.title;
        this.update();
        this.startup()
    };
    TGOS.TGGauge.prototype = new TGOS.TGOverlayView;
    var a = TGOS.TGGauge.prototype;
    a.update = function() {
        if (this.feature) {
            var a = this,
                b = parseFloat(this.feature.attributes[this.dataField]),
                e = b;
            this.dataLabelField && (this.labelSpan.innerHTML = this.feature.attributes[this.dataLabelField]);
            0 > e && (e = 0);
            e > this.maxDataValue && (e = this.maxDataValue);
            if (this.ColorArry) {
                var f = this.CompareValue(b);
                this.color = f ? f : "#88ff33"
            } else 0.33 >= b / this.maxDataValue ?
                this.color = this.lowColor : 0.66 >= b / this.maxDataValue ? this.color = this.midColor : 1 >= b / this.maxDataValue && (this.color = this.highColor);
            var g = this.angle,
                h = 180 * (1 - e / this.maxDataValue),
                k = h - g;
            this.animation && this.animation.stop();
            this.valueSpan.style.left = this.cx - this.valueSpan.clientWidth / 2 + "px";
            this.valueSpan.style.top = this.cy + "px";
            this.valueSpan.innerHTML = b + " " + this.unitLabel;
            isNaN(e) ? (b = a.createPathStr(180, a.outRadius, a.inRadius, a.cx, a.cy), a.path.attr({
                path: b
            }), this.angle = 180) : (this.animation = TGOS.fx.createAnimation({
                easing: TGOS.fx.easing.quadInOut,
                type: window.requestAnimationFrame ? "" : "setTimeout",
                duration: 150,
                onAnimation: function(b) {
                    a.angle = g + k * b;
                    b = a.createPathStr(a.angle, a.outRadius, a.inRadius, a.cx, a.cy);
                    a.path.attr({
                        fill: a.color
                    });
                    a.path.attr({
                        path: b
                    })
                },
                onEnd: function() {
                    var b = a.createPathStr(h, a.outRadius, a.inRadius, a.cx, a.cy);
                    a.path.attr({
                        path: b
                    })
                }
            }), this.animation.play())
        }
    };
    a.setCaption = function(a) {
        "string" == typeof a && (this.caption = a, this.captionSpan && (this.captionSpan.innerHTML = a))
    };
    a.setTitle = function(a) {
        "string" == typeof a && (this.title =
            a, this.titleSpan && (this.titleSpan.innerHTML = a))
    };
    a.setLabel = function(a) {
        "string" == typeof a && (this.label = a, this.labelSpan && (this.labelSpan.innerHTML = a))
    };
    a.setValue = function(a) {
        "number" == typeof a && (this.value = a, this.valueSpan && (this.valueSpan.innerHTML = a, this.valueSpan.style.left = this.cx - this.valueSpan.clientWidth / 2 + "px", this.valueSpan.style.top = this.cy))
    };
    a.setFeature = function(a) {
        a instanceof TGOS.Graphic && (this.feature = a, this.update())
    };
    a.startup = function() {
        for (var a = this, b = 0; b < this.layer.graphics.length; b++) TGOS.TGEvent.addListener(this.layer.graphics[b].gs_[0],
            "mouseover",
            function(b, f) {
                return function() {
                    a.feature = b;
                    a.update()
                }
            }(this.layer.graphics[b], b))
    };
    a.destroy = function() {
        this.handler_ && TGOS.TGEvent.removeListener(this.handler_);
        this.handler_ = null
    };
    a.createPathStr = function(a, b, e, f, g) {
        a = a / 180 * Math.PI;
        x = f + b * Math.cos(a);
        y = g - b * Math.sin(a);
        x2 = f + e * Math.cos(a);
        y2 = g - e * Math.sin(a);
        return "M" + (f - b) + "," + g + "A" + b + "," + b + ",0,0,1," + x + "," + y + "L" + x2 + "," + y2 + "A" + e + "," + e + ",0,0,0," + (f - e) + "," + g + "z"
    };
    a.addBreak = function(a, b, e) {
        var f = {};
        f.MaxValue = b;
        f.MinValue = a;
        f.Color = e;
        this.ColorArry ||
            (this.ColorArry = []);
        this.ColorArry.push(f)
    };
    a.CompareValue = function(a) {
        if (this.ColorArry)
            for (var b = this.ColorArry.length, e, f = 0; f < b; f++)
                if (e = this.ColorArry[f], a >= e.MinValue && a < e.MaxValue) return e.Color
    }
})();
TGOS = TGOS || {};
(function() {
    var a = ["Document", "Folder", "Placemark"];
    TGOS.TGKmlLayerOption = function() {
        this.suppressInfoWindows = this.preserveViewport = this.map = null;
        this.markerFitImageSize = !1
    };
    TGOS.TGKmlLayerMetaData = function() {
        this.snippet = this.name = this.description = this.author = null
    };
    TGOS.KmlMouseEvent = function() {
        this.pixelOffset = this.point = this.feature = null
    };
    TGOS.KmlFeatureData = function() {
        this.snippet = this.name = this.description = this.author = null
    };
    TGOS.KmlAuthor = function() {
        this.uri = this.name = this.email = null
    };
    TGOS.TGKmlLayerStatus = {
        DOCUMENT_NOT_FOUND: "DOCUMENT_NOT_FOUND",
        DOCUMENT_TOO_LARGE: "DOCUMENT_TOO_LARGE",
        FETCH_ERROR: "FETCH_ERROR",
        INVALID_DOCUMENT: "INVALID_DOCUMENT",
        INVALID_REQUEST: "INVALID_REQUEST",
        LIMITS_EXCEEDED: "LIMITS_EXCEEDED",
        OK: "OK",
        TIMED_OUT: "TIMED_OUT",
        UNKNOWN: "UNKNOWN"
    };
    TGOS.KMLLayer = function(d, b, e, f, g, h) {
        var k = this,
            l = e,
            n = "auto",
            m = !0;
        g && (void 0 !== g.zIndex && "number" == typeof g.zIndex && (n = g.zIndex), void 0 !== g.visible && "boolean" == typeof g.visible && (m = g.visible));
        var p = l.getCoordSys(),
            s = {
                author: {
                    email: "",
                    name: "",
                    uri: ""
                },
                description: "",
                name: "",
                snippet: ""
            },
            q;
        f = new TGOS.TGInfoWindow("", null, {
            pixelOffset: new TGOS.TGSize(0, 0)
        });
        var v = null,
            z = g.markerFitImageSize;
        this.overlays = [];
        this.points = [];
        this.polygons = [];
        this.polylines = [];
        this.groundoverlays = [];
        this.icons = [];
        this.getDefaultViewport = function() {
            if (!v) {
                for (var a = Infinity, b = -Infinity, d = -Infinity, e = Infinity, f = 0; f < this.overlays.length; f++) var g = this.overlays[f].getBounds(),
                    a = Math.min(a, g.left),
                    e = Math.min(e, g.bottom),
                    b = Math.max(b, g.right),
                    d = Math.max(d, g.top);
                for (f =
                    0; f < this.polylines.length; f++) g = this.polylines[f].getPath().getEnvelope(), a = Math.min(a, g.left), e = Math.min(e, g.bottom), b = Math.max(b, g.right), d = Math.max(d, g.top);
                for (f = 0; f < this.groundoverlays.length; f++) g = this.groundoverlays[f].getBounds(), a = Math.min(a, g.left), e = Math.min(e, g.bottom), b = Math.max(b, g.right), d = Math.max(d, g.top);
                for (f = 0; f < this.polygons.length; f++) g = this.polygons[f].getBounds(), a = Math.min(a, g.left), e = Math.min(e, g.bottom), b = Math.max(b, g.right), d = Math.max(d, g.top);
                for (g = 0; g < this.points.length; g++) f =
                    this.points[g].getPosition(), a = Math.min(a, f.x), e = Math.min(e, f.y), b = Math.max(b, f.x), d = Math.max(d, f.y);
                if (!(isFinite(a) && isFinite(d) && isFinite(b) && isFinite(e))) return null;
                v = new TGOS.TGEnvelope(a, d, b, e)
            }
            return v
        };
        this.getMetadata = function() {
            return s
        };
        this.getStatus = function() {
            return q
        };
        this.parseCoordinates = function(a, b) {
            for (var d = a.trim().split(/\s*[,]\s*/), e = [
                    []
                ], f = e[0], g = 0; g < d.length; g++)
                if (d[g].match(/\s+/)) {
                    var h = d[g].split(/\s+/);
                    f.push(parseFloat(h[0]));
                    e.push(f);
                    f = [parseFloat(h[1])];
                    e.push(f)
                } else f.push(parseFloat(d[g]));
            d = [];
            for (f = 0; f < e.length; f++) {
                switch (b) {
                    case "EPSG3826":
                        var k = TGOS.WGS84toTWD97(e[f][0], e[f][1]);
                        break;
                    case "EPSG3825":
                        k = TGOS.WGS84toTWD97_119(e[f][0], e[f][1]);
                        break;
                    case "EPSG3857":
                        k = {
                            x: e[f][0],
                            y: e[f][1]
                        }
                }
                k.x && k.y && d.push(new TGOS.TGPoint(k.x, k.y))
            }
            return d
        };
        this.setZIndex = function(a) {
            n = a;
            for (a = 0; a < this.polygons.length; a++) this.polygons[a].setZIndex(n, !1);
            for (a = 0; a < this.polylines.length; a++) this.polylines[a].setZIndex(n, !1);
            for (a = 0; a < this.groundoverlays.length; a++) this.groundoverlays[a].setZIndex(n, !1);
            for (var b = 0; b < this.points.length; b++) this.points[a].setZIndex(n, !1)
        };
        this.getZIndex = function() {
            return n
        };
        this.createPoint = function(a) {
            switch (p) {
                case "EPSG3826":
                    var b = this.parseCoordinates(a.coordinates, "EPSG3826");
                    break;
                case "EPSG3825":
                    b = this.parseCoordinates(a.coordinates, "EPSG3825");
                    break;
                case "EPSG3857":
                    b = this.parseCoordinates(a.coordinates, "EPSG3857")
            }
            if (!(1 > b.length)) return b[0]
        };
        this.parseRing = function(a, b) {
            switch (b) {
                case "EPSG3826":
                    var d = this.parseCoordinates(a.coordinates, "EPSG3826");
                    break;
                case "EPSG3825":
                    d = this.parseCoordinates(a.coordinates, "EPSG3825");
                    break;
                case "EPSG3857":
                    d = this.parseCoordinates(a.coordinates, "EPSG3857")
            }
            d = new TGOS.TGLineString(d);
            return new TGOS.TGLinearRing(d)
        };
        this.createPolygon = function(a) {
            var b = [],
                d = this.parseRing(a.outerBoundaryIs.LinearRing, p);
            b.push(d);
            if (a = a.innerBoundaryIs)
                if (a.length)
                    for (d = 0; d < a.length; d++)
                        if (a[d].LinearRing.length)
                            for (var e = 0; e < a[d].LinearRing.length; e++) {
                                var f = this.parseRing(a[d].LinearRing[e], p);
                                b.push(f)
                            } else f = this.parseRing(a[d].LinearRing,
                                p), b.push(f);
                        else f = this.parseRing(a.LinearRing, p), b.push(f);
            return new TGOS.TGPolygon(b)
        };
        this.createPolyLine = function(a) {
            switch (p) {
                case "EPSG3826":
                    var b = this.parseCoordinates(a.coordinates, "EPSG3826");
                    break;
                case "EPSG3825":
                    b = this.parseCoordinates(a.coordinates, "EPSG3825");
                    break;
                case "EPSG3857":
                    b = this.parseCoordinates(a.coordinates, "EPSG3857")
            }
            return new TGOS.TGLineString(b)
        };
        this.handleGroundOverlay = function(a) {
            function b(a) {
                var d = new TGOS.TGImage(a.Icon.href);
                switch (p) {
                    case "EPSG3826":
                        var e = TGOS.WGS84toTWD97(parseFloat(a.LatLonBox.west),
                            parseFloat(a.LatLonBox.north));
                        a = TGOS.WGS84toTWD97(parseFloat(a.LatLonBox.east), parseFloat(a.LatLonBox.south));
                        var f = e.x,
                            e = e.y,
                            h = a.x,
                            m = a.y;
                        break;
                    case "EPSG3825":
                        e = TGOS.WGS84toTWD97_119(parseFloat(a.LatLonBox.west), parseFloat(a.LatLonBox.north));
                        a = TGOS.WGS84toTWD97_119(parseFloat(a.LatLonBox.east), parseFloat(a.LatLonBox.south));
                        f = e.x;
                        e = e.y;
                        h = a.x;
                        m = a.y;
                        break;
                    case "EPSG3857":
                        f = parseFloat(a.LatLonBox.west), e = parseFloat(a.LatLonBox.north), h = parseFloat(a.LatLonBox.east), m = parseFloat(a.LatLonBox.south)
                }
                f =
                    new TGOS.TGEnvelope(f, e, h, m);
                d = new TGOS.TGGroundOverlay(l, d, f, 1);
                TGOS.TGEvent.addListener(d, "click", F);
                TGOS.TGEvent.addListener(d, "mousedown", G);
                TGOS.TGEvent.addListener(d, "mouseup", A);
                TGOS.TGEvent.addListener(d, "mousemove", B);
                TGOS.TGEvent.addListener(d, "mouseout", C);
                TGOS.TGEvent.addListener(d, "dblclick", u);
                TGOS.TGEvent.addListener(d, "rightclick", w);
                g.suppressInfoWindows || TGOS.TGEvent.addListener(d, "click", E);
                k.groundoverlays.push(d)
            }
            if (a.length)
                for (var d = 0; d < a.length; d++) b(a[d]);
            else b(a)
        };
        this.handleNetworkLink =
            function(a) {
                var b = "";
                if (a.length)
                    for (var d = 0; d < a.length; d++) {
                        if (a[d].hasOwnProperty("Url")) b = a[d].Url.href;
                        else if (a[d].hasOwnProperty("Link")) b = a[d].Link.href;
                        else continue; - 1 == b.indexOf(".kmz") && TGOS.getJSON(b, function(a) {
                            a.error || k.parseKML(a.kml)
                        }, TGOS.PROXY_SERVICE2)
                    } else {
                        if (a.hasOwnProperty("Url")) b = a.Url.href;
                        else if (a.hasOwnProperty("Link")) b = a.Link.href;
                        else return; - 1 == b.indexOf(".kmz") && TGOS.getJSON(b, function(a) {
                            a.error || k.parseKML(a.kml)
                        }, TGOS.PROXY_SERVICE2)
                    }
            };
        this.handleDescription =
            function(a) {};
        this.handleAuthor = function(a) {
            a.hasOwnProperty("atom:name") && (s.author.name = a["atom:name"]);
            a.hasOwnProperty("atom:link") && (s.author.uri = a["atom:link"]["@href"])
        };
        this.handleMultiGeometry = function(a) {
            var b = [],
                d;
            for (d in a) switch (d) {
                case "Point":
                    if (a.Point.length)
                        for (var e = 0; e < a.Point.length; e++) {
                            var f = this.createPoint(a.Point[e]);
                            f && b.push(f)
                        } else this.createPoint(a.Point), (f = this.createPoint(a.Point)) && b.push(f);
                    break;
                case "Polygon":
                    if (a.Polygon.length)
                        for (e = 0; e < a.Polygon.length; e++)(f =
                            this.createPolygon(a.Polygon[e])) && b.push(f);
                    else(f = this.createPolygon(a.Polygon)) && b.push(f);
                    break;
                case "LineString":
                    if (a.LineString.length)
                        for (e = 0; e < a.LineString.length; e++)(f = this.createPolyLine(a.LineString[e])) && b.push(f);
                    else(f = this.createPolyLine(a.LineString)) && b.push(f);
                    break;
                case "MultiGeometry":
                    if (a.MultiGeometry.length)
                        for (e = 0; e < a.MultiGeometry.length; e++)(f = this.handleMultiGeometry(a.MultiGeometry[e])) && (b = b.concat(f));
                    else(f = this.handleMultiGeometry(a.MultiGeometry)) && (b = b.concat(f))
            }
            return b
        };
        this.parseGeometry = function(a) {
            var b = [];
            a.hasOwnProperty("Point") ? (a = this.createPoint(a.Point)) && b.push(a) : a.hasOwnProperty("Polygon") ? (a = this.createPolygon(a.Polygon)) && b.push(a) : a.hasOwnProperty("LineString") ? (a = this.createPolyLine(a.LineString)) && b.push(a) : a.hasOwnProperty("MultiGeometry") && (a = this.handleMultiGeometry(a.MultiGeometry, a)) && (b = b.concat(a));
            return b
        };
        this.createRandomColor = function() {
            return {
                r: parseInt(255 * Math.random()),
                g: parseInt(255 * Math.random()),
                b: parseInt(255 * Math.random())
            }
        };
        this.parseKmlColor = function(a, b, d) {
            b = parseInt(a.substring(0, 2), 16);
            var e = parseInt(a.substring(2, 4), 16),
                f = parseInt(a.substring(4, 6), 16),
                g = parseInt(a.substring(6, 8), 16);
            "random" == d && ("ffffffff" == a ? (a = this.createRandomColor(), e = a.b, g = a.r, f = a.g) : (e *= Math.random(), f *= Math.random(), g *= Math.random()));
            return {
                a: b / 255,
                b: parseInt(e),
                g: parseInt(f),
                r: parseInt(g)
            }
        };
        this.matchSharedStyle = function(a, b) {
            if (b && a)
                if (b = b.replace("#", ""), a instanceof Array)
                    for (var d = 0; d < a.length; d++) {
                        if (a[d]["@id"] == b) return a[d]
                    } else if (a["@id"] ==
                        b) return a
        };
        this.createStyle = function(a, b) {
            var d = a.inStyle ? a.inStyle : this.matchSharedStyle(a.sharedStyle, a.styleUrl),
                e = {
                    fillColor: {
                        a: null,
                        r: null,
                        g: null,
                        b: null
                    },
                    lineWidth: null,
                    lineColor: {
                        a: null,
                        r: null,
                        g: null,
                        b: null
                    },
                    iconLink: null
                };
            if (d) {
                if (d.LineStyle) {
                    if (d.LineStyle.color) {
                        var f = this.parseKmlColor(d.LineStyle.color, b, d.LineStyle.colorMode);
                        e.lineColor = f
                    }
                    "string" == typeof d.LineStyle.width && (e.lineWidth = parseFloat(d.LineStyle.width))
                }
                d.PolyStyle && (d.PolyStyle.color && (f = this.parseKmlColor(d.PolyStyle.color,
                    b, d.PolyStyle.colorMode), e.fillColor = f), "0" == d.PolyStyle.fill && (e.fillColor.a = 0), "0" == d.PolyStyle.outline && (e.lineColor.a = 0));
                d.IconStyle && d.IconStyle.Icon && d.IconStyle.Icon.href && (e.iconLink = d.IconStyle.Icon.href)
            }
            return e
        };
        this.colorToHex = function(a) {
            if ("number" == typeof a.r || "number" == typeof a.g || "number" == typeof a.b) {
                var b = a.r.toString(16);
                16 > a.r && (b = "0" + b);
                var d = a.g.toString(16);
                16 > a.g && (d = "0" + d);
                var e = a.b.toString(16);
                16 > a.b && (e = "0" + e);
                return "#" + b + d + e
            }
        };
        this.handlePlacemark = function(a) {
            a.inStyle =
                a.Style ? a.Style : a.inStyle;
            var b = [];
            if (a.length)
                for (var d = 0; d < a.length; d++) {
                    var e = this.parseGeometry(a[d]);
                    e && (b = b.concat(e))
                } else(e = this.parseGeometry(a)) && (b = b.concat(e));
            for (d = 0; d < b.length; d++) {
                e = this.createStyle(a, d / b.length);
                if (b[d] instanceof TGOS.TGPolygon) {
                    var f = new TGOS.TGFill(l, b[d], {
                        fillColor: this.colorToHex(e.fillColor),
                        fillOpacity: e.fillColor.a,
                        strokeWeight: e.lineWidth,
                        strokeColor: this.colorToHex(e.lineColor),
                        strokeOpacity: e.lineColor.a,
                        visible: m,
                        zIndex: n
                    });
                    this.polygons.push(f)
                } else b[d] instanceof
                TGOS.TGLineString ? (f = new TGOS.TGLine(l, b[d], {
                    strokeWeight: e.lineWidth,
                    strokeColor: this.colorToHex(e.lineColor),
                    strokeOpacity: e.lineColor.a,
                    visible: m,
                    zIndex: n
                }), this.polylines.push(f)) : b[d] instanceof TGOS.TGPoint && (null != e.iconLink ? (f = new TGOS.TGImage(e.iconLink), f = new TGOS.TGMarker(l, b[d], a.name, f, {
                    visible: m,
                    zIndex: n,
                    flat: !0,
                    fitImageSize: z ? z : !1
                })) : f = new TGOS.TGMarker(l, b[d], a.name, null, {
                    visible: m,
                    zIndex: n
                }), this.points.push(f));
                f.targetPlacemark = a;
                TGOS.TGEvent.addListener(f, "click", F);
                TGOS.TGEvent.addListener(f,
                    "mousedown", G);
                TGOS.TGEvent.addListener(f, "mouseup", A);
                TGOS.TGEvent.addListener(f, "mousemove", B);
                TGOS.TGEvent.addListener(f, "mouseout", C);
                TGOS.TGEvent.addListener(f, "dblclick", u);
                TGOS.TGEvent.addListener(f, "rightclick", w);
                g.suppressInfoWindows || TGOS.TGEvent.addListener(f, "click", E)
            }
        };
        this.getStyleColorById = function(a, b) {
            if (styles)
                if (styles.length)
                    for (var d = 0; d < styles.length; d++) {
                        if (b.slice(1, b.length) == styles[d].id) {
                            var e = styles[d].colorMode;
                            if ("random" == e) return null;
                            if ("line" == a && styles[d].LineStyle) return e =
                                styles[d].LineStyle.colorMode, "random" == e ? null : {
                                    a: styles[d].LineStyle.color.slice(0, 2),
                                    b: styles[d].LineStyle.color.slice(2, 4),
                                    g: styles[d].LineStyle.color.slice(4, 6),
                                    r: styles[d].LineStyle.color.slice(6, 8)
                                };
                            if ("poly" == a && styles[d].PolyStyle) return e = styles[d].PolyStyle.colorMode, "random" == e ? null : {
                                a: styles[d].PolyStyle.color.slice(0, 2),
                                b: styles[d].PolyStyle.color.slice(2, 4),
                                g: styles[d].PolyStyle.color.slice(4, 6),
                                r: styles[d].PolyStyle.color.slice(6, 8)
                            }
                        }
                    } else {
                        if ("line" == a && styles.LineStyle) return e = styles.LineStyle.colorMode,
                            "random" == e ? null : {
                                a: styles.LineStyle.color.slice(0, 2),
                                b: styles.LineStyle.color.slice(2, 4),
                                g: styles.LineStyle.color.slice(4, 6),
                                r: styles.LineStyle.color.slice(6, 8)
                            };
                        if ("poly" == a && styles.PolyStyle) return e = styles.PolyStyle.colorMode, "random" == e ? null : {
                            a: styles.PolyStyle.color.slice(0, 2),
                            b: styles.PolyStyle.color.slice(2, 4),
                            g: styles.PolyStyle.color.slice(4, 6),
                            r: styles.PolyStyle.color.slice(6, 8)
                        }
                    }
        };
        this.getVisible = function() {
            return m
        };
        this.setVisible = function(a) {
            m = a;
            for (a = 0; a < this.polygons.length; a++) this.polygons[a].setVisible(m);
            for (a = 0; a < this.polylines.length; a++) this.polylines[a].setVisible(m);
            for (a = 0; a < this.groundoverlays.length; a++) this.groundoverlays[a].setVisible(m);
            for (a = 0; a < this.points.length; a++) this.points[a].setVisible(m)
        };
        this.parseFeature = function(a, b) {
            var d = a.Style ? a.Style : null,
                e;
            for (e in a) {
                var f = a[e];
                switch (e) {
                    case "Document":
                        f.inStyle = d ? d : null;
                        this.Schema = f.Schema;
                        if (f instanceof Array)
                            for (var g = 0; g < f.length; g++) {
                                var h = f[g];
                                h.inStyle = h.Style ? h.Style : null;
                                this.parseFeature(h, f.Style)
                            } else this.parseFeature(f,
                                f.Style);
                        break;
                    case "Folder":
                        f.inStyle = d ? d : null;
                        if (f instanceof Array)
                            for (g = 0; g < f.length; g++) h = f[g], h.inStyle = h.Style ? h.Style : null, this.parseFeature(h, b);
                        else this.parseFeature(f, b);
                        break;
                    case "Placemark":
                        f.inStyle = d ? d : null;
                        f.sharedStyle = b;
                        if (f instanceof Array)
                            for (g = 0; g < f.length; g++) h = f[g], h.inStyle = h.Style ? h.Style : null, h.sharedStyle = b, this.handlePlacemark(h);
                        else f.inStyle = f.Style ? f.Style : null, f.sharedStyle = b, this.handlePlacemark(f);
                        break;
                    case "GroundOverlay":
                        this.handleGroundOverlay(f);
                        break;
                    case "NetworkLink":
                        this.handleNetworkLink(f)
                }
            }
        };
        this.parseKML = function(b) {
            if (b)
                for (var d in b)
                    if (0 <= a.indexOf(d)) {
                        this.parseFeature(b[d], b[d].Style);
                        break
                    }
        };
        this.removeLayer = function() {
            if (0 < this.points.length)
                for (var a = 0; a < this.points.length; a++) this.points[a].setMap(null);
            if (0 < this.polygons.length)
                for (a = 0; a < this.polygons.length; a++) this.polygons[a].setMap(null);
            if (0 < this.polylines.length)
                for (a = 0; a < this.polylines.length; a++) this.polylines[a].setMap(null);
            if (0 < this.groundoverlays.length)
                for (a = 0; a < this.groundoverlays.length; a++) this.groundoverlays[a].setMap(null);
            this.points = [];
            this.polygons = [];
            this.polylines = [];
            this.groundoverlays = [];
            f && f.close()
        };
        var E = function(a) {
                if (a.target.targetPlacemark) {
                    var b = "",
                        d = a.target.targetPlacemark.name;
                    a.target.targetPlacemark.hasOwnProperty("description") && (b = a.target.targetPlacemark.description.hasOwnProperty("#cdata-section") ? a.target.targetPlacemark.description["#cdata-section"] : a.target.targetPlacemark.description);
                    var b = a.target.targetPlacemark.name + "</br>" + b,
                        e = a.target.targetPlacemark.ExtendedData;
                    if (e) {
                        var g;
                        if (e.Data) {
                            g =
                                e.Data.length ? e.Data : [e.Data];
                            for (var b = b + "<br><table style='border: 1px solid black;'>", h = 0; h < g.length; h++) var m = g[h],
                                d = m["@name"],
                                n = m.displayName,
                                m = m.value,
                                b = b + "<tr>",
                                b = b + "<td style='border: 1px solid black;'>",
                                b = b + (n || d),
                                b = b + "</td>",
                                b = b + "<td style='border: 1px solid black;'>",
                                b = b + m,
                                b = b + "</td>",
                                b = b + "</tr>";
                            b += "</table>"
                        }
                        if (e.SchemaData)
                            for (e = e.SchemaData.length ? e.SchemaData : [e.SchemaData], g = 0; g < e.length; g++) {
                                n = null;
                                e[g].SimpleData && (n = e[g].SimpleData.length ? e[g].SimpleData : [e[g].SimpleData]);
                                var p =
                                    "";
                                if (k.Schema)
                                    for (d = k.Schema.length ? k.Schema : [k.Schema], h = 0; h < d.length; h++)
                                        if (m = d[h], m["@id"] == e[g]["@schemaUrl"].replace("#", "")) {
                                            p = m["@name"];
                                            break
                                        }
                                if (n) {
                                    b += "<br><table style='border: 1px solid black;'>";
                                    for (h = 0; h < n.length; h++) m = n[h], d = m["@name"], m = m["#text"], b += "<tr>", b += "<td style='border: 1px solid black;'>", b += p + ":" + d, b += "</td>", b += "<td style='border: 1px solid black;' >", b += void 0 === m ? "" : m, b += "</td>", b += "</tr>";
                                    b += "</table>"
                                }
                            }
                    }
                    f.setContent(b);
                    f.setPosition(a.point);
                    f.open(l)
                }
            },
            F = function(a) {
                TGOS.TGEvent.trigger_(k,
                    "click", {
                        featureData: {
                            author: s.author,
                            description: a.target.description,
                            name: a.target.name,
                            snippet: a.target.snippet
                        },
                        point: a.point,
                        pixelOffset: 0
                    })
            },
            G = function(a) {
                TGOS.TGEvent.trigger_(k, "mousedown", {
                    featureData: {
                        author: s.author,
                        description: a.target.description,
                        name: a.target.name,
                        snippet: a.target.snippet
                    },
                    point: a.point,
                    pixelOffset: 0
                })
            },
            A = function(a) {
                TGOS.TGEvent.trigger_(k, "mouseup", {
                    featureData: {
                        author: s.author,
                        description: a.target.description,
                        name: a.target.name,
                        snippet: a.target.snippet
                    },
                    point: a.point,
                    pixelOffset: 0
                })
            },
            B = function(a) {
                TGOS.TGEvent.trigger_(k, "mousemove", {
                    featureData: {
                        author: s.author,
                        description: a.target.description,
                        name: a.target.name,
                        snippet: a.target.snippet
                    },
                    point: a.point,
                    pixelOffset: 0
                })
            },
            C = function(a) {
                TGOS.TGEvent.trigger_(k, "mouseout", {
                    featureData: {
                        author: s.author,
                        description: a.target.description,
                        name: a.target.name,
                        snippet: a.target.snippet
                    },
                    point: a.point,
                    pixelOffset: 0
                })
            },
            u = function(a) {
                TGOS.TGEvent.trigger_(k, "dblclick", {
                    featureData: {
                        author: s.author,
                        description: a.target.description,
                        name: a.target.name,
                        snippet: a.target.snippet
                    },
                    point: a.point,
                    pixelOffset: 0
                })
            },
            w = function(a) {
                TGOS.TGEvent.trigger_(k, "rightclick", {
                    featureData: {
                        author: s.author,
                        description: a.target.description,
                        name: a.target.name,
                        snippet: a.target.snippet
                    },
                    point: a.point,
                    pixelOffset: 0
                })
            };
        q = "loading";
        if (!b) throw "Invalid kml url";
        TGOS.getJSON(b, function(a) {
            if (!a || a.error) q = TGOS.TGKmlLayerStatus.FETCH_ERROR, "function" == typeof h && h.call(this, q);
            else {
                var b = a.kml;
                b.Document ? (b.Document.hasOwnProperty("description") && (b.Document.description.hasOwnProperty("#cdata-section") ?
                        s.description = b.Document.description["#cdata-section"] : s.description = b.Document.description), b.Document.hasOwnProperty("name") && (b.Document.name.hasOwnProperty("#cdata-section") ? s.name = b.Document.name["#cdata-section"] : s.name = b.Document.name), b.Document.hasOwnProperty("Snippet") && (b.Document.Snippet.hasOwnProperty("#cdata-section") ? s.snippet = b.Document.Snippet["#cdata-section"] : s.snippet = b.Document.Snippet), b.Document.hasOwnProperty("atom:author") && k.handleAuthor(b.Document["atom:author"]), k.Schema =
                    b.Document.Schema) : (b.hasOwnProperty("description") && (b.description.hasOwnProperty("#cdata-section") ? s.description = b.description["#cdata-section"] : s.description = b.description), b.hasOwnProperty("name") && (b.name.hasOwnProperty("#cdata-section") ? s.name = b.name["#cdata-section"] : s.name = b.name), b.hasOwnProperty("Snippet") && (b.Snippet.hasOwnProperty("#cdata-section") ? s.snippet = b.Snippet["#cdata-section"] : s.snippet = b.Snippet), b.hasOwnProperty("atom:author") && k.handleAuthor(b["atom:author"]));
                k.parseKML(a.kml);
                q = TGOS.TGKmlLayerStatus.OK;
                g && !0 == g.preserveViewport && (a = k.getDefaultViewport()) && l.fitBounds(a);
                "function" == typeof h && h.call(k, q)
            }
        }, TGOS.PROXY_SERVICE2, function() {
            "function" == typeof h && h.call(this, TGOS.TGKmlLayerStatus.FETCH_ERROR)
        })
    };
    TGOS.RegisterEvent(TGOS.KMLLayer, "click mousemove mouseout mouseover dblclick rightclick".split(" "))
})();
TGOS = TGOS || {};
TGOS.TMSLayer = function() {
    function a(a, b, d, e, f, g, s, q, v, z) {
        var E, F = !1;
        E = b.ownerDocument.createElement("img");
        E.onerror = function() {
            E && (E.alt = "\u4e0d\u63d0\u4f9b\u5716\u78da\u670d\u52d9", E.onload = null, E.onerror = null);
            F = !0
        };
        E.onmousedown = function() {
            return !1
        };
        E.onload = function() {
            E && (E.alt = "");
            this.loaded = !0;
            TGOS.TGEvent.trigger(z, "tilesloaded")
        };
        E.galleryImg = !1;
        E.hideFocus = !0;
        E.style.MozUserSelect = "none";
        E.style.border = "0 none";
        E.style.position = "absolute";
        E.src = a;
        b.appendChild(E);
        this.IsComplete = function() {
            return E.loaded ||
                "complete" == E.readyState
        };
        this.getStatus = function() {
            return !F
        };
        this.getHObject = function() {
            return E
        };
        this.getScale = function() {
            return d
        };
        this.getLeft = function() {
            return g
        };
        this.getTop = function() {
            return s
        };
        this.getRight = function() {
            return q
        };
        this.getBottom = function() {
            return v
        };
        this.RemoveSelf = function() {
            E && (E.onmousedown = null, b.removeChild(E));
            E = null
        };
        this.ReloadStatus = function(a, b, d, e) {
            d = a + d;
            a = Math.round(a);
            e = b + e;
            b = Math.round(b);
            E.style.left = a + "px";
            E.style.top = b + "px";
            E.style.width = Math.round(d - a) + "px";
            E.style.height = Math.round(e - b) + "px"
        };
        this.isEqual = function(a, b, g) {
            return d == a && e == b && f == g
        }
    }
    var d = "{x}",
        b = "{y}",
        e = "{z}",
        f = !0,
        g = [{
            z: 0,
            x: -2.00375083427892E7,
            y: 2.00375083427892E7,
            sd: 5.91658710909131E8
        }, {
            z: 1,
            x: -2.00375083427892E7,
            y: 2.00375083427892E7,
            sd: 2.95829355454566E8
        }, {
            z: 2,
            x: -2.00375083427892E7,
            y: 2.00375083427892E7,
            sd: 1.47914677727283E8
        }, {
            z: 3,
            x: -2.00375083427892E7,
            y: 2.00375083427892E7,
            sd: 7.39573388636414E7
        }, {
            z: 4,
            x: -2.00375083427892E7,
            y: 2.00375083427892E7,
            sd: 3.69786694318207E7
        }, {
            z: 5,
            x: -2.00375083427892E7,
            y: 2.00375083427892E7,
            sd: 1.84893347159103E7
        }, {
            z: 6,
            x: -2.00375083427892E7,
            y: 2.00375083427892E7,
            sd: 9244667.35795517
        }, {
            z: 7,
            x: -2.00375083427892E7,
            y: 2.00375083427892E7,
            sd: 4622333.67897759
        }, {
            z: 8,
            x: -2.00375083427892E7,
            y: 2.00375083427892E7,
            sd: 2311166.83948879
        }, {
            z: 9,
            x: -2.00375083427892E7,
            y: 2.00375083427892E7,
            sd: 1155583.4197444
        }, {
            z: 10,
            x: -2.00375083427892E7,
            y: 2.00375083427892E7,
            sd: 577791.709872198
        }, {
            z: 11,
            x: -2.00375083427892E7,
            y: 2.00375083427892E7,
            sd: 288895.854936099
        }, {
            z: 12,
            x: -2.00375083427892E7,
            y: 2.00375083427892E7,
            sd: 144447.92746805
        }, {
            z: 13,
            x: -2.00375083427892E7,
            y: 2.00375083427892E7,
            sd: 72223.9637340248
        }, {
            z: 14,
            x: -2.00375083427892E7,
            y: 2.00375083427892E7,
            sd: 36111.9818670124
        }, {
            z: 15,
            x: -2.00375083427892E7,
            y: 2.00375083427892E7,
            sd: 18055.9909335062
        }, {
            z: 16,
            x: -2.00375083427892E7,
            y: 2.00375083427892E7,
            sd: 9027.9954667531
        }, {
            z: 17,
            x: -2.00375083427892E7,
            y: 2.00375083427892E7,
            sd: 4513.99773337655
        }, {
            z: 18,
            x: -2.00375083427892E7,
            y: 2.00375083427892E7,
            sd: 2256.99886668828
        }, {
            z: 19,
            x: -2.00375083427892E7,
            y: 2.00375083427892E7,
            sd: 1128.49943334414
        }];
    return function(h, k, l, n, m, p) {
        var s = l.getPanes().overlayviewLayer,
            q = 25.4 / 96 / 1E3,
            v = 256;
        n && (void 0 !== n.tileWidth && "number" == typeof n.tileWidth && (v = n.tileWidth), void 0 !== n.xTemplate && (d = n.xTemplate), void 0 !== n.yTemplate && (b = n.yTemplate), void 0 !== n.zTemplate && (e = n.zTemplate), void 0 !== n.yNorthPositive && "boolean" == typeof n.yNorthPositive && (f = n.yNorthPositive));
        var z = 1,
            E = "auto",
            F = !0,
            G = null,
            A = null,
            B = null,
            C = null;
        m && (void 0 !== m.container && (s = m.container), void 0 !== m.opacity && "number" == typeof m.opacity && (z = m.opacity),
            void 0 !== m.zIndex && "number" == typeof m.zIndex && (E = m.zIndex), void 0 !== m.visible && "boolean" == typeof m.visible && (F = m.visible), void 0 !== m.left && "number" == typeof m.left && (G = m.left), void 0 !== m.right && "number" == typeof m.right && (B = m.right), void 0 !== m.top && "number" == typeof m.top && (A = m.top), void 0 !== m.bottom && "number" == typeof m.bottom && (C = m.bottom));
        var u = [],
            w = [],
            t, D = !1,
            H = this,
            J = document.createElement("div");
        J.style.position = "absolute";
        J.style.left = "0px";
        J.style.top = "0px";
        J.style.width = "100%";
        J.style.height =
            "100%";
        J.style.zIndex = E;
        J.style.display = F ? "" : "none";
        J.style.opacity = z;
        J.style.filter = "alpha(opacity=" + 100 * z + ")";
        s.appendChild(J);
        this.moveToTop = function() {
            s && (s.removeChild(J), s.appendChild(J))
        };
        this.getLayerId = function() {
            return h
        };
        this.getOpacity = function() {
            return z
        };
        this.setOpacity = function(a) {
            "number" == typeof a && (z = a, J && (J.style.opacity = z, J.style.filter = "alpha(opacity=" + 100 * z + ")"))
        };
        this.getZIndex = function() {
            return E
        };
        this.setZIndex = function(a) {
            E = a;
            J && (J.style.zIndex = E)
        };
        this.getSourceUrl = function() {
            return k
        };
        this.RemoveSelf = function() {
            s && J && s.removeChild(J)
        };
        var P = function(g, h, m) {
                if (!g) return null;
                for (var n, p = 0; p < g.length; p++)
                    if (g[p].z == h.z) {
                        n = g[p];
                        break
                    }
                if (!n) return null;
                var s = m.left,
                    t = m.top,
                    z = m.right,
                    w = m.bottom;
                m = n.x;
                g = n.y;
                n = n.sd * v * q;
                if (!f)
                    for (p = s <= m ? 0 : Math.floor((s - m) / n), s = p + Math.ceil(Math.abs(s - z) / n) + 1, z = t >= g ? 0 : Math.floor((g - t) / n), t = z + Math.ceil(Math.abs(w - t) / n) + 1, w = z; w < t; w++)
                        for (z = p; z < s; z++) {
                            var A = h,
                                C = w,
                                A = k.replace(d, z).replace(b, C).replace(e, A.z),
                                A = new a(A, J, h.z, z, w, m + z * n, g - w * n, m + (z + 1) * n, g - (w + 1) *
                                    n, l);
                            u.push(A)
                        }
            },
            N = function(a, b) {
                for (var d = 0, e = Infinity, f = a.ToMapDistX(v), g = 0; g < b.length; g++) {
                    var h = Math.abs(b[g].sd * v * q - f);
                    h < e && (e = h, d = g)
                }
                return 0.1 < e / f ? null : b[d]
            };
        this.Initialize = function(a) {
            t = a;
            D = !0;
            H.RebuildElement();
            H.UpdateElement();
            p && p.call(this)
        };
        this.setVisible = function(a) {
            F = a;
            J.style.display = a ? "" : "none"
        };
        this.removeLayer = function() {
            l.removeLayer(this)
        };
        this.getVisible = function() {
            return F
        };
        var Q = function(a) {
            null !== G && a.left < G && (a.left = G);
            null !== A && a.top > A && (a.top = A);
            null !== B && a.right > B &&
                (a.right = B);
            null !== C && a.bottom < C && (a.bottom = C);
            return a
        };
        this.MoveTiles = function() {
            if (D && F && g)
                for (var a = [u, w], b = 0; b < a.length; b++)
                    for (var d = a[b], e = 0; e < d.length; e++) {
                        var f = t.FromMapPoint(d[e].getLeft(), d[e].getTop()),
                            h = t.FromMapPoint(d[e].getRight(), d[e].getBottom()),
                            k = h.x - f.x,
                            h = h.y - f.y;
                        0 > k && (f.x -= k = -k);
                        0 > h && (f.y -= h = -h);
                        d[e].ReloadStatus(f.x, f.y, k, h)
                    }
        };
        this.UpdateElement = function() {
            this.RebuildElement()
        };
        this.RebuildElement = function() {
            if (D && F && g) {
                var a = N(t, g);
                if (null != a) {
                    var b = t.ToMapPoint(0, 0),
                        d = t.ToMapPoint(t.getClientWidth(),
                            t.getClientHeight()),
                        b = new TGOS.TGEnvelope(b.x, b.y, d.x, d.y),
                        b = Q(b);
                    P(g, a, b);
                    for (i = 0; i < w.length; i++) d = w[i], d.RemoveSelf();
                    w = [];
                    var e = [],
                        f = u.length;
                    for (i = 0; i < f; i++) {
                        var d = u[i],
                            h = d.getScale(),
                            k = d.getLeft(),
                            l = d.getRight(),
                            m = d.getTop(),
                            n = d.getBottom();
                        l < b.left || k > b.right || n > b.top || m < b.bottom ? d.RemoveSelf() : h == a.z ? e.push(d) : d.IsComplete() && d.getStatus() ? w.push(d) : d.RemoveSelf()
                    }
                    u = e;
                    this.MoveTiles();
                    var p = function() {
                        for (var a = !0, b = 0; b < u.length; b++)
                            if (u[b].IsComplete()) a = u[b].getStatus();
                            else return setTimeout(p,
                                100);
                        if (a)
                            for (; 0 < w.length;) w.pop().RemoveSelf()
                    };
                    setTimeout(p, 100)
                }
            }
        };
        l.addLayer(this, !0)
    }
}();
TGOS = TGOS || {};
(function() {
    var a = function(a) {
        this.left = a.left;
        this.top = a.top;
        this.right = a.right;
        this.bottom = a.bottom;
        this.src = a.src;
        this.width = a.width;
        this.height = a.height;
        this.layer = a.layer;
        this.cancel = this.loaded = !1;
        this.node = document.createElement("img");
        this.node.style.position = "absolute";
        this.setSource = function(a) {
            this.loaded = !1;
            this.node.src = a
        };
        var b = this;
        this.node.onload = function() {
            b.cancel ? b.loaded = !1 : (b.loaded = !0, a.onload && a.onload.call(b))
        };
        this.src && (this.node.src = this.src);
        "number" == typeof this.width && (this.node.width =
            this.width);
        "number" == typeof this.height && (this.node.height = this.height);
        this.destroy = function() {
            this.node && this.node.parentNode && this.node.parentNode.removeChild(this.node)
        }
    };
    TGOS.WMSLayer = function(d, b, e, f, g, h) {
        function k() {
            if (p) {
                var a = m.getClientWidth(),
                    b = m.getClientHeight(),
                    d = m.ToMapPoint(0, 0),
                    e = m.ToMapPoint(a, b);
                l();
                var f = null,
                    f = "1.3.0" == F ? "CRS=" + G : "SRS=" + G;
                switch (p.getCoordSys()) {
                    case TGOS.TGCoordSys.EPSG3857:
                        d = TGOS.GooToWGS84(d.x, d.y);
                        e = TGOS.GooToWGS84(e.x, e.y);
                        break;
                    case TGOS.TGCoordSys.EPSG3826:
                        0 >
                            G.indexOf("3826") && (0 <= G.indexOf("3825") ? (d = TGOS.TWD97toTWD97_119(d.x, d.y), e = TGOS.TWD97toTWD97_119(e.x, e.y)) : 0 <= G.indexOf("4326") && (d = TGOS.TWD97toWGS84(d.x, d.y), e = TGOS.TWD97toWGS84(e.x, e.y)));
                        break;
                    case TGOS.TGCoordSys.EPSG3825:
                        0 > G.indexOf("3825") && (0 <= G.indexOf("3826") ? (d = TGOS.TWD97_119toTWD97(d.x, d.y), e = TGOS.TWD97_119toTWD97(e.x, e.y)) : 0 <= G.indexOf("4326") && (d = TGOS.TWD97_119toWGS84(d.x, d.y), e = TGOS.TWD97_119toWGS84(e.x, e.y)))
                }
                var g = d.x,
                    h = e.y,
                    k = e.x,
                    q = d.y;
                "1.3.0" == F && 0 > G.indexOf("CRS:84") && 0 <= G.indexOf("EPSG:4326") &&
                    (g = e.y, h = d.x, k = d.y, q = e.x);
                a = n + "?BBOX=" + (g + "," + h + "," + k + "," + q) + "&WIDTH=" + a + "&HEIGHT=" + b;
                a += "&" + w.join("&");
                return a + f
            }
        }

        function l() {
            if (p) {
                var a = m.getClientWidth(),
                    b = m.getClientHeight(),
                    d = m.ToMapPoint(0, 0),
                    e = m.ToMapPoint(a, b);
                return {
                    left: d.x,
                    top: d.y,
                    right: e.x,
                    bottom: e.y,
                    width: a,
                    height: b
                }
            }
        }
        var n, m, p = e,
            s = !0,
            q = "auto",
            v, z = 1,
            E = e.getPanes().overlayviewLayer;
        g && (void 0 !== g.opacity && "number" == typeof g.opacity && (z = g.opacity), void 0 !== g.visible && "boolean" == typeof g.visible && (s = g.visible), void 0 !== g.container &&
            (E = g.container));
        var F = "1.3.0",
            G = "EPSG:4326";
        g = e = "";
        h = "image/png";
        var A = "0xFFFFFF",
            B = "TRUE";
        if (f) {
            void 0 !== f.version && (F = f.version);
            var C, u;
            void 0 !== f.srs && (C = f.srs);
            void 0 !== f.crs && (u = f.crs);
            void 0 !== C && void 0 !== u ? G = "1.3.0" == F ? C : u : (void 0 !== C && (G = C), void 0 !== u && (G = u));
            void 0 !== f.layers && (e = f.layers);
            void 0 !== f.styles && (g = f.styles);
            void 0 !== f.format && (h = f.format);
            void 0 !== f.bgcolor && (A = f.bgcolor);
            void 0 !== f.transparent && (B = f.transparent)
        }
        var w = [];
        w.push("SERVICE=WMS");
        w.push("REQUEST=GetMap");
        w.push("VERSION=" +
            F);
        w.push("LAYERS=" + e);
        w.push("STYLES=" + g);
        w.push("FORMAT=" + h);
        w.push("BGCOLOR=" + A);
        w.push("TRANSPARENT=" + B);
        f = b;
        if (-1 < f.indexOf("?"))
            for (C = f.indexOf("?"), b = f.substring(0, C), C = f.substr(C + 1, f.length - C), f = b, f = C.split("&"), C = 0; C < f.length; C++) 0 <= f[C].toUpperCase().indexOf("BBOX") || 0 <= f[C].toUpperCase().indexOf("WIDTH") || 0 <= f[C].toUpperCase().indexOf("HEIGHT") || 0 <= f[C].toUpperCase().indexOf("VERSION") || w.push(f[C]);
        var t;
        this.moveToTop = function() {
            E && (E.removeChild(t), E.appendChild(t))
        };
        this.RemoveSelf =
            function() {
                E && t && E.removeChild(t)
            };
        this.getLayerId = function() {
            return d
        };
        this.getDefaultViewport = function() {};
        this.getUrl = function() {
            return n
        };
        this.removeLayer = function() {
            p.removeLayer(this)
        };
        this.getZIndex = function() {
            return q
        };
        this.setZIndex = function(a) {
            q = a;
            t && (t.style.zIndex = q)
        };
        this.getVisible = function() {
            return s
        };
        this.setVisible = function(a) {
            s = a;
            t && (t.style.display = s ? "block" : "none")
        };
        this.putVisible = function(a) {
            this.setVisible(a)
        };
        var D = function(a) {
            if (a) {
                var b = m.FromMapPoint(a.left, a.top);
                a.node.style.left =
                    b.x + "px";
                a.node.style.top = b.y + "px"
            }
        };
        this.setOpacity = function(a) {
            if (t) {
                var b = parseInt(100 * a);
                t.style.filter = "alpha(opacity=" + b + ")";
                t.style.opacity = a
            }
            z = a
        };
        this.getOpacity = function() {
            return z
        };
        var H, J;
        this.UpdateElement = function() {
            var a = m.getScale(),
                b = v / a;
            J && (J.node.width /= b, J.node.height /= b);
            D(H);
            D(J);
            v = a
        };
        this.RebuildElement = function() {
            var b = this;
            this.temp && !this.temp.loaded && (this.temp.cancel = !0);
            var d = l();
            this.temp = new a({
                left: d.left,
                right: d.right,
                top: d.top,
                bottom: d.bottom,
                width: d.width,
                height: d.height,
                src: k(),
                onload: function() {
                    H = J;
                    t.appendChild(b.temp.node);
                    J = b.temp;
                    H && H.destroy();
                    b.temp = null
                }
            })
        };
        t = document.createElement("div");
        t.style.position = "absolute";
        t.style.left = "0px";
        t.style.top = "0px";
        t.style.width = "100%";
        t.style.height = "100%";
        t.style.opacity = z;
        parseInt(100 * z);
        m = p.getMapBase();
        n = 0 < b.indexOf("?") ? b.slice(0, b.indexOf("?")) : b;
        E.appendChild(t);
        p.addLayer(this, !0)
    }
})();
TGOS.WMSLayer.enumCoordinate = {
    WGS84: 0,
    TWD97: 1,
    GOOGLE: 2,
    TWD97_119: 3
};
TGOS = TGOS || {};
TGOS.WFSLayer = function() {
    function a(a, b) {
        var d = a.split("?");
        if (1 == d.length) return null;
        for (var d = d[1].split("&"), e = 0; e < d.length; e++) {
            var f = d[e].split("=");
            if (f[0].toUpperCase() == b.toUpperCase()) return f[1]
        }
    }
    var d = function(a, b) {
            this.mapCoordSys = a;
            this.dataCoordSys = b
        },
        b = function(a) {
            a = a.split(".");
            for (var b = [], d = 0; d < a.length; d++) b.push(a[d]);
            return b
        },
        e = function(a, b, d) {
            var e = a;
            "EPSG3826" == d ? "EPSG3825" == b ? e = TGOS.TWD97toTWD97_119(a.x, a.y) : "EPSG3857" == b && (e = TGOS.TWD97toWGS84(a.x, a.y)) : "EPSG3825" == d ? "EPSG3826" ==
                b ? e = TGOS.TWD97_119toTWD97(a.x, a.y) : "EPSG3857" == b && (e = TGOS.TWD97_119toWGS84(a.x, a.y)) : "EPSG4326" == d && ("EPSG3826" == b ? e = TGOS.WGS84toTWD97(a.x, a.y) : "EPSG3825" == b && (e = TGOS.WGS84toTWD97_119(a.x, a.y)));
            return e
        },
        f = function(a, b) {
            if ("1" != b[0] || "0" != b[1]) {
                a = a["#text"] || a;
                a = a.replace(/[\s]*$/gi, "").replace(/^[\s]*/gi, "").split(/[\s]+/);
                for (var d = [], f = 0; f < a.length; f += 2) {
                    var g = new TGOS.TGPoint(parseFloat(a[f]), parseFloat(a[f + 1])),
                        g = e(g, void 0, void 0);
                    d.push(g)
                }
            } else {
                a = a["#text"] || a;
                for (var h = a.replace(/[\s]*$/gi,
                        "").replace(/^[\s]*/gi, "").split(/[\s]+/), d = [], f = 0; f < h.length; f++) g = h[f].split(","), g = new TGOS.TGPoint(parseFloat(g[0]), parseFloat(g[1])), g = e(g, this.mapCoordSys, this.dataCoordSys), d.push(g)
            }
            return d
        },
        g = function(a, b, d) {
            var e = [],
                f;
            for (f in a) {
                var g = a[f];
                if (g && "object" === typeof g)
                    for (var h in g) switch (h) {
                        case b + ":MultiPolygon":
                            for (var q = l(g[h], b, d), s = 0; s < q.length; s++) e.push(q[s]);
                            break;
                        case b + ":MultiSurface":
                            q = l(g[h], b, d);
                            for (s = 0; s < q.length; s++) e.push(q[s]);
                            break;
                        case b + ":Polygon":
                            s = k(g, b, d);
                            e.push(s);
                            break;
                        case b + ":MultiLineString":
                            q = m(g[h], b, d);
                            for (s = 0; s < q.length; s++) e.push(q[s]);
                            break;
                        case b + ":MultiCurve":
                            q = m(g[h], b, d);
                            for (s = 0; s < q.length; s++) e.push(q[s]);
                            break;
                        case b + ":LineString":
                            s = n(g, b, d);
                            e.push(s);
                            break;
                        case b + ":MultiPoint":
                            var s = b,
                                q = d,
                                w = g[h][s + ":pointMember"],
                                t = [];
                            if (void 0 !== w.length)
                                for (var D = 0; D < w.length; D++) {
                                    var H = p(w[D], s, q);
                                    t.push(H)
                                } else H = p(w, s, q), t.push(H);
                            q = t;
                            for (s = 0; s < q.length; s++) e.push(q[s]);
                            break;
                        case b + ":Point":
                            s = p(g[b + ":Point"], b, d), e.push(s)
                    }
            }
            return e
        },
        h = function(a, b, d) {
            a =
                f(a[b + ":coordinates"] || a[b + ":posList"], d);
            a = new TGOS.TGLineString(a);
            return new TGOS.TGLinearRing(a)
        },
        k = function(a, b, d) {
            var e = [];
            a = a[b + ":Polygon"];
            var f = h((a[b + ":outerBoundaryIs"] || a[b + ":exterior"])[b + ":LinearRing"], b, d);
            e.push(f);
            if (a = a[b + ":innerBoundaryIs"] || a[b + ":interior"])
                if (a instanceof Array)
                    for (f = 0; f < a.length; f++) {
                        var g = a[f][b + ":LinearRing"],
                            g = h(g, b, d);
                        e.push(g)
                    } else g = a[b + ":LinearRing"], g = h(g, b, d), e.push(g);
            return new TGOS.TGPolygon(e)
        },
        l = function(a, b, d) {
            a = a[b + ":polygonMember"] || a[b + ":surfaceMember"];
            var e = [];
            if (void 0 !== a.length)
                for (var f = 0; f < a.length; f++) {
                    var g = k(a[f], b, d);
                    e.push(g)
                } else g = k(a, b, d), e.push(g);
            return e
        },
        n = function(a, b, d) {
            a = a[b + ":LineString"];
            b = f(a[b + ":coordinates"] || a[b + ":posList"], d);
            return new TGOS.TGLineString(b)
        },
        m = function(a, b, d) {
            a = a[b + ":lineStringMember"] || a[b + ":curveMember"];
            var e = [];
            if (void 0 !== a.length)
                for (var f = 0; f < a.length; f++) {
                    var g = n(a[f], b, d);
                    e.push(g)
                } else g = n(a, b, d), e.push(g);
            return e
        },
        p = function(a, b, d) {
            return f(a[b + ":coordinates"] || a[b + ":pos"], d)[0]
        },
        s = function(a,
            b, d, e, f, g) {
            this.zIndex = "auto";
            this.defaultViewport = null;
            this.preserveViewport = !0;
            this.callback = g;
            this.gs = [];
            void 0 !== d && this.setMap(d);
            f && (void 0 !== f.preserveViewport && this.setPreserveViewport(f.preserveViewport), void 0 !== f.visible && this.setVisible(f.visible), void 0 !== f.zIndex && this.setZIndex(f.zIndex));
            this.setUrl(b);
            this.update(this.callback)
        },
        q = s.prototype;
    q.update = function(e) {
        if (this.url && this.map) {
            var f = a(this.url, "typeName"),
                h = a(this.url, "version");
            if (!h) throw "Invalid WFS version";
            if (!f) throw "Invalid Type Name";
            var k = b(h);
            if (3 != k.length) throw "Invalid WFS version";
            f.split(":");
            var l = "",
                m = "",
                n = this;
            TGOS.getJSON(this.url, function(a) {
                if (!a || a.error) e.call(this, a.error);
                else {
                    var b, h;
                    for (h in a) 0 <= h.indexOf("FeatureCollection") && (b = a[h]);
                    if (b) {
                        for (var p in b)
                            if (0 <= p.indexOf("@xmlns:")) {
                                if ("http://www.opengis.net/gml" == b[p] || "http://www.opengis.net/gml/3.2" == b[p]) l = p.replace("@xmlns:", "");
                                if ("http://www.opengis.net/wfs" == b[p] || "http://www.opengis.net/wfs/2.0" == b[p]) m = p.replace("@xmlns:", "")
                            }
                        a = n.map.getCoordSys();
                        var q;
                        h = b[l + ":boundedBy"];
                        void 0 !== h && (h = h[l + ":Box"], void 0 !== h && void 0 !== h["@srsName"] && (q = h["@srsName"]));
                        void 0 !== q && (q = q.replace(":", ""));
                        d(a, q);
                        q = b[l + ":featureMember"] || b[l + ":featureMembers"] || b[l + ":member"] || b[m + ":member"];
                        b = [];
                        if (q) {
                            if (q.length)
                                for (a = 0; a < q.length; a++)
                                    for (h = g(q[a][f], l, k), p = 0; p < h.length; p++) b.push(h[p]);
                            else
                                for (a = a = 0; a < q[f].length; a++)
                                    for (h = g(q[f][a], l, k), p = 0; p < h.length; p++) b.push(h[p]);
                            for (q = 0; q < b.length; q++) b[q] instanceof TGOS.TGPolygon ? (a = new TGOS.TGFill(n.map, b[q]), a.setOpacity(0.5),
                                n.gs.push(a)) : b[q] instanceof TGOS.TGLineString ? (a = new TGOS.TGLine(n.map, b[q]), a.setStrokeWeight(4), n.gs.push(a)) : b[q] instanceof TGOS.TGPoint && (a = new TGOS.TGMarker(n.map, b[q]), n.gs.push(a));
                            n.setZIndex(n.zIndex);
                            n.setVisible(n.visible);
                            n.map && !0 == n.preserveViewport && n.getDefaultViewport() && n.map.fitBounds(n.getDefaultViewport());
                            e && e.call(n)
                        }
                    }
                }
            }, TGOS.PROXY_SERVICE2)
        }
    };
    q.setUrl = function(a, b) {
        this.url = a
    };
    q.setPreserveViewport = function(a) {
        this.preserveViewport = a
    };
    q.setZIndex = function(a) {
        this.zIndex = a;
        for (a = 0; a < this.gs.length; a++) this.gs[a].setZIndex(this.zIndex)
    };
    q.setMap = function(a) {
        this.map = a
    };
    q.getDefaultViewport = function() {
        if (!this.defaultViewport) {
            for (var a = Infinity, b = -Infinity, d = -Infinity, e = Infinity, f = 0; f < this.gs.length; f++) {
                var g = this.gs[f].getBounds();
                g && (a = Math.min(a, g.left), e = Math.min(e, g.bottom), b = Math.max(b, g.right), d = Math.max(d, g.top))
            }
            isFinite(a) && isFinite(d) && isFinite(b) && isFinite(e) ? this.defaultViewport = new TGOS.TGEnvelope(a, d, b, e) : this.defaultViewport = null
        }
        return this.defaultViewport
    };
    q.getUrl = function() {
        return this.url
    };
    q.removeLayer = function() {
        for (var a = 0; a < this.gs.length; a++) this.gs[a].setMap(null), this.gs[a] = null;
        this.gs = [];
        this.map = null
    };
    q.getVisible = function() {
        return this.visible
    };
    q.setVisible = function(a) {
        this.visible = a;
        for (a = 0; a < this.gs.length; a++) this.gs[a].setVisible(this.visible)
    };
    return s
}();
TGOS = TGOS || {};
TGOS.WMTSLayer = function() {
    var a = function(a) {
        this.matrixSet = a.matrixSet;
        this.matrixId = a.matrixId;
        this.row = a.row;
        this.col = a.col;
        this.left = a.left;
        this.top = a.top
    };
    a.prototype.equals = function(a) {
        return this.matrixSet == a.matrixSet && this.matrixId == a.matrixId && this.row == a.row && this.col == a.col
    };
    return function(d, b, e, f, g, h) {
        var k = e.getPanes().overlayviewLayer,
            l = "number" == typeof g.left ? g.left : null,
            n = "number" == typeof g.top ? g.top : null,
            m = "number" == typeof g.right ? g.right : null,
            p = "number" == typeof g.bottom ? g.bottom :
            null,
            s = [],
            q, v = !1,
            z = this,
            E = "number" == typeof f.dpi ? 25.4 / f.dpi / 1E3 : 2.8E-4,
            F = "string" == typeof f.style ? f.style : "default",
            G = "string" == typeof f.format ? f.format : "image/png",
            A = "number" == typeof f.tileWidth ? f.tileWidth : 256;
        null != g.container && (k = g.container);
        var B = "number" == typeof g.opacity ? g.opacity : 1;
        0 > B && (B = 0);
        1 < B && (B = 1);
        var C = !1 == g.visible ? !1 : !0,
            u = null,
            w = document.createElement("div");
        w.style.position = "absolute";
        w.style.left = "0px";
        w.style.top = "0px";
        w.style.width = "100%";
        w.style.height = "100%";
        w.style.zIndex =
            "auto";
        w.style.display = C ? "" : "none";
        k.appendChild(w);
        document.createElement("img");
        var t;
        this.moveToTop = function() {
            k && (k.removeChild(w), k.appendChild(w))
        };
        this.getLayerId = function() {
            return d
        };
        this.getMatrixSetId = function() {
            return u["ows:Identifier"]
        };
        this.getOpacity = function() {
            return B
        };
        this.setOpacity = function(a) {
            "number" == typeof a && (B = a, w && (w.style.opacity = B, w.style.filter = "alpha(opacity=" + 100 * B + ")"))
        };
        this.getSource = function() {
            return b
        };
        this.RemoveSelf = function() {
            k.removeChild(w)
        };
        var D = function() {
                var a =
                    this,
                    b = 0;
                a.style.opacity = b;
                var d = B / 7,
                    e = setInterval(function() {
                        b >= B ? (a.style.filter = "alpha(opacity=" + 100 * B + ")", a.style.opacity = B, clearInterval(e)) : (a.style.opacity = b, a.style.filter = "alpha(opacity=" + 100 * b + ")", b += d)
                    }, 33);
                a.style.filter = "alpha(opacity=0)";
                this.style.display = "block"
            },
            H = function(b, d, e) {
                if (!b) return null;
                var f;
                if (b.TileMatrix.length || b.TileMatrix["ows:Identifier"] != d)
                    for (var g = 0; g < b.TileMatrix.length; g++) {
                        if (b.TileMatrix[g]["ows:Identifier"] == d) {
                            f = b.TileMatrix[g];
                            break
                        }
                    } else f = b.TileMatrix;
                if (!f) return null;
                var g = parseFloat(f.MatrixWidth),
                    h = parseFloat(f.MatrixHeight);
                mIdx = 0 == g ? 1 : g - 1;
                mIdy = 0 == h ? 1 : h - 1;
                var k = e.left,
                    l = e.top,
                    m = e.right,
                    n = e.bottom;
                e = [];
                h = f.TopLeftCorner;
                g = parseFloat(h.split(" ")[0]);
                h = parseFloat(h.split(" ")[1]);
                f = parseFloat(f.ScaleDenominator) * A * E;
                var p;
                p = k <= g ? 0 : Math.floor((k - g) / f);
                k = p + Math.ceil(Math.abs(k - m) / f) + 1;
                m = l >= h ? 0 : Math.floor((h - l) / f);
                l = m + Math.ceil(Math.abs(n - l) / f) + 1;
                for (n = m; n < l; n++)
                    for (m = p; m < k; m++) {
                        var q = new a({
                            left: g + m * f,
                            top: h - n * f,
                            matrixId: d,
                            matrixSet: b["ows:Identifier"],
                            col: m,
                            row: n
                        });
                        e.push(q)
                    }
                return e
            },
            J = function(a, b) {
                for (var d = 0, e = Infinity, f = a.ToMapDistX(A), g = 0; g < b.TileMatrix.length; g++) {
                    var h = parseFloat(b.TileMatrix[g].ScaleDenominator) * A * E,
                        h = Math.abs(h - f);
                    h < e && (e = h, d = g)
                }
                return 0.1 < e / f ? null : b.TileMatrix[d]["ows:Identifier"]
            };
        this.getTiles = function(a) {
            var d = a.handler,
                g = new TGOS.TGEnvelope(a.rl, a.rt, a.rr, a.rb),
                g = P(g),
                h = J(q, u),
                g = H(u, h, g);
            if (!g) return null;
            for (var h = [], k = [], l = 0; l < g.length; l++) e.getCoordSys() == TGOS.TGCoordSys.EPSG3857 ? (a = TGOS.GooToWGS84(g[l].left,
                g[l].top), h.push(new TGOS.TGPoint(a.x, a.y))) : h.push(new TGOS.TGPoint(g[l].left, g[l].top)), a = N(b, "1.0.0", f.layer, g[l].matrixSet, g[l].matrixId, g[l].row, g[l].col), k.push(a);
            d && d.call(this, {
                leftTopAnchor: h,
                imageUrl: k
            })
        };
        this.Initialize = function(a) {
            q = a;
            TGOS.getJSON(b + "?SERVICE=WMTS&REQUEST=GetCapabilities&VERSION=1.0.0", function(a) {
                t = a.Capabilities;
                if (!t) throw "Service Error";
                a = t.Contents.TileMatrixSet;
                if ("undefined" != typeof a.length)
                    for (var b = 0; b < a.length; b++) {
                        var d = a[b]["ows:Identifier"];
                        if (d && d == f.matrixSet) {
                            u =
                                a[b];
                            break
                        }
                        u = a[0]
                    } else u = a;
                v = !0;
                z.RebuildElement();
                z.UpdateElement();
                h && h.call(this)
            }, TGOS.PROXY_SERVICE2)
        };
        this.UpdateElement = function() {
            if (v && C && u) {
                this.RebuildElement();
                for (var a = 0; a < s.length; a++) {
                    var b;
                    b = q.FromMapPoint(s[a].left, s[a].top);
                    s[a].img.style.left = b.x + "px";
                    s[a].img.style.top = b.y + "px"
                }
            }
        };
        this.putVisible = function(a) {
            C = a;
            w.style.display = a ? "" : "none"
        };
        this.getVisible = function() {
            return C
        };
        this.setVisible = function(a) {
            this.putVisible(a)
        };
        this.removeLayer = function() {
            e.removeLayer(this)
        };
        var P =
            function(a) {
                null !== l && a.left < l && (a.left = l);
                null !== n && a.top > n && (a.top = n);
                null !== m && a.right > m && (a.right = m);
                null !== p && a.bottom < p && (a.bottom = p);
                return a
            },
            N = function(a, b, d, e, f, g, h) {
                return a + "?SERVICE=WMTS&REQUEST=GetTile&VERSION=" + b + "&Layer=" + d + "&Style=" + F + "&Format=" + G + "&TileMatrixSet=" + e + "&TileMatrix=" + f + "&TileRow=" + g + "&TileCol=" + h
            },
            Q;
        this.RebuildElement = function() {
            if (v && C && u) {
                var a = q.ToMapPoint(0, 0),
                    d = q.ToMapPoint(q.getClientWidth(), q.getClientHeight()),
                    g = e.getZoom();
                if (Q != g && 0 < s.length) {
                    for (var h = 0; h <
                        s.length; h++) w.removeChild(s[h].img);
                    s = []
                }
                Q = g;
                g = J(q, u);
                if (null != g) {
                    a = new TGOS.TGEnvelope(a.x, a.y, d.x, d.y);
                    a = P(a);
                    g = H(u, g, a);
                    if (!g) return null;
                    a = [];
                    for (h = 0; h < g.length; h++) {
                        for (var d = g[h], k = !1, l = 0; l < s.length; l++)
                            if (s[l].equals(d)) {
                                k = !0;
                                break
                            }
                        k || a.push(d)
                    }
                    for (g = 0; g < a.length; g++) d = a[g], k = N(b, "1.0.0", f.layer, d.matrixSet, d.matrixId, d.row, d.col), h = w, l = document.createElement("img"), l.style.display = "none", l.onload = D, l.style.position = "absolute", l.galleryImg = !1, l.hideFocus = !0, l.style.MozUserSelect = "none", l.border =
                        "0px", l.src = k, l.style.opacity = B, l.style.filter = "alpha(opacity=" + 100 * B + ")", h.appendChild(l), d.img = l, s.push(d)
                }
            }
        };
        e.addLayer(this, !0)
    }
}();
var deps, util = util || {};
util.getInternetExplorerVersion = function() {
    var a = -1;
    "Microsoft Internet Explorer" == navigator.appName && null != /MSIE ([0-9]{1,}[.0-9]{0,})/.exec(navigator.userAgent) && (a = parseFloat(RegExp.$1));
    return a
};
util.loadScripts = function(a, d, b) {
    for (d = 0; d < a.length; d++) document.write("<script src='" + b + a[d] + "'>\x3c/script>");
    document.write("<script>TGOS.APPID = 'BHvpiOJ5Wp41CsxemFMNWQ==';TGOS.APIKEY = 'mcXodoZFWJaUJRFS5H3gCec83a570/QupBX5ROqlSmu9vZW61YOYMe86Om9zQ2g2pVSGtjfLi5gex++mKHMFNK95UFUwZD3TtpSdH73WhL5KMv0WZVPMe5rB4KiLpaRrReusEFx+W10=';\x3c/script>")
};
TGOS_LOADED = 1;
var DEBUG_MODE = !1;